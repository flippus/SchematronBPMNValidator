apply plugin: "java"
apply plugin: "idea"
apply plugin: "eclipse"
apply plugin: "application"
apply plugin: 'pmd'
apply plugin: 'findbugs'
apply plugin: 'jacoco'
apply plugin: 'com.github.kt3k.coveralls'

mainClassName = "de.uniba.dsg.ppn.ba.Main"

task wrapper(type: Wrapper) {
    gradleVersion = '2.2'
}

repositories {
    mavenCentral()
}

configurations {
    internal
    external
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

dependencies {
    internal 'org.jdom:jdom2:2.0.5'
    internal 'jaxen:jaxen:1.1.6'
    internal 'ch.qos.logback:logback-core:1.1.2'
    internal 'ch.qos.logback:logback-classic:1.1.2'
    internal 'org.slf4j:slf4j-api:1.7.7'
    internal 'com.phloc:phloc-commons:4.3.5'
    
    classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.0.1'
    
    pmd(  
        'net.sourceforge.pmd:pmd-core:5.2.1',  
        'net.sourceforge.pmd:pmd-java:5.2.1'  
    ) 

    external files(fileTree(dir: "lib", includes: ['*.jar']))

    testCompile 'junit:junit:4.11'

    compile configurations.internal
    compile configurations.external
}

pmd {
    toolVersion = '5.2.1'
    ruleSetFiles = files("config/pmd.xml")
    ruleSets = []
}

findbugs {
    effort = "max"
}

tasks.withType(FindBugs) {
    reports {
        xml.enabled = false
        html.enabled = true
    }
 }

jacoco {
    toolVersion = "0.7.1.201405082137"
}

jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
}

check.dependsOn jacocoTestReport

jar.archiveName = "bpmnvalidator.jar"

jar {
        from configurations.runtime.collect { it.isDirectory() ? it : zipTree(it) }
        manifest { attributes 'Main-Class': mainClassName }
}

run {
    if(project.hasProperty('args')){
        args project.args.split('\\s+')
    }
}

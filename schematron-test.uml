<?xml version="1.0" encoding="UTF-8"?>
<xmi:XMI xmi:version="20110701" xmlns:xmi="http://www.omg.org/spec/XMI/20110701" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:UMLLabProfile="http:///schemas/UMLLabProfile/NS/0" xmlns:ecore="http://www.eclipse.org/emf/2002/Ecore" xmlns:uml="http://www.eclipse.org/uml2/4.0.0/UML" xsi:schemaLocation="http:///schemas/UMLLabProfile/NS/0 pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile">
  <uml:Model xmi:id="_Bd2s8M1tEeO5Ep2pmY5GiA" name="schematron_test">
    <eAnnotations xmi:id="_BpZOkM1tEeO5Ep2pmY5GiA" source="http://ns.yatta.de/umllab">
      <contents xmi:type="ecore:EAnnotation" xmi:id="_BpZOkc1tEeO5Ep2pmY5GiA" source="codegen">
        <details xmi:id="_BpZOks1tEeO5Ep2pmY5GiA" key="codegenDirectory" value="/schematron-test/src/main/java"/>
        <details xmi:id="_Co7Y8M1tEeO5Ep2pmY5GiA" key="AssociatedSourceCode" value="/schematron-test/src/main/java/de/uniba/dsg/bpmn/ValidationResult.java;470631974/1;/schematron-test/src/main/java/de/uniba/dsg/bpmn/Violation.java;1232006732/1;/schematron-test/src/main/java/de/uniba/dsg/ppn/ba/Main.java;466636497/1;/schematron-test/src/main/java/de/uniba/dsg/ppn/ba/api/BpmnValidatorFactory.java;2962909779/1;/schematron-test/src/main/java/de/uniba/dsg/ppn/ba/helper/BpmnNamespaceContext.java;2174547147/1;/schematron-test/src/main/java/de/uniba/dsg/ppn/ba/helper/BpmnValidationException.java;390541910/1;/schematron-test/src/main/java/de/uniba/dsg/ppn/ba/helper/PrintHelper.java;2888331746/1;/schematron-test/src/main/java/de/uniba/dsg/ppn/ba/preprocessing/ImportedFile.java;1752944927/1;/schematron-test/src/main/java/de/uniba/dsg/ppn/ba/preprocessing/PreProcessResult.java;1646129706/1;/schematron-test/src/main/java/de/uniba/dsg/ppn/ba/preprocessing/PreProcessor.java;506527664/1;/schematron-test/src/main/java/de/uniba/dsg/ppn/ba/validation/BpmnValidator.java;3709002950/1;/schematron-test/src/main/java/de/uniba/dsg/ppn/ba/xml/XmlWriter.java;1321486660/1;/schematron-test/src/main/java/de/uniba/dsg/ppn/ba/validation/ResourceResolver.java;2608316508/1;/schematron-test/src/main/java/de/uniba/dsg/ppn/ba/validation/XsdValidator.java;629846269/1;/schematron-test/src/main/java/de/uniba/dsg/ppn/ba/validation/XmlLocator.java;1260285095/1;/schematron-test/src/main/java/de/uniba/dsg/ppn/ba/validation/XsdValidationErrorHandler.java;221928/1;/schematron-test/src/main/java/de/uniba/dsg/ppn/ba/validation/SchematronBPMNValidator.java;2663060976/1;/schematron-test/src/main/java/de/uniba/dsg/ppn/ba/validation/Input.java;2479821698/1;"/>
      </contents>
    </eAnnotations>
    <elementImport xmi:id="_CRqIcM1tEeO5Ep2pmY5GiA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
    </elementImport>
    <elementImport xmi:id="_CRqIcc1tEeO5Ep2pmY5GiA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#byte"/>
    </elementImport>
    <elementImport xmi:id="_CRqIcs1tEeO5Ep2pmY5GiA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#char"/>
    </elementImport>
    <elementImport xmi:id="_CRqIc81tEeO5Ep2pmY5GiA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#double"/>
    </elementImport>
    <elementImport xmi:id="_CRqIdM1tEeO5Ep2pmY5GiA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#float"/>
    </elementImport>
    <elementImport xmi:id="_CRqIdc1tEeO5Ep2pmY5GiA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </elementImport>
    <elementImport xmi:id="_CRqIds1tEeO5Ep2pmY5GiA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
    </elementImport>
    <elementImport xmi:id="_CRqId81tEeO5Ep2pmY5GiA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#short"/>
    </elementImport>
    <elementImport xmi:id="_CRqIeM1tEeO5Ep2pmY5GiA">
      <importedElement xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </elementImport>
    <packagedElement xmi:type="uml:Package" xmi:id="_CIwEEM1tEeO5Ep2pmY5GiA" name="de">
      <packagedElement xmi:type="uml:Package" xmi:id="_CIwEEc1tEeO5Ep2pmY5GiA" name="uniba">
        <packagedElement xmi:type="uml:Package" xmi:id="_CIwEEs1tEeO5Ep2pmY5GiA" name="dsg">
          <packagedElement xmi:type="uml:Package" xmi:id="_CI2KsM1tEeO5Ep2pmY5GiA" name="bpmn">
            <packagedElement xmi:type="uml:Class" xmi:id="_CRkB0M1tEeO5Ep2pmY5GiA" name="ValidationResult">
              <ownedAttribute xmi:id="_CcffcM1tEeO5Ep2pmY5GiA" name="valid" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_CcffdM1tEeO5Ep2pmY5GiA" name="checkedFiles" visibility="private" isOrdered="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Ccffdc1tEeO5Ep2pmY5GiA" value="*"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_CcffgM1tEeO5Ep2pmY5GiA" name="violations" visibility="private" type="_CSIpkM1tEeO5Ep2pmY5GiA" isOrdered="true" association="_CeBJcM1tEeO5Ep2pmY5GiA">
                <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Ccffgc1tEeO5Ep2pmY5GiA" value="*"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdQUc81tEeO5Ep2pmY5GiA" name="ValidationResult" specification="_CRqIec1tEeO5Ep2pmY5GiA">
                <ownedParameter xmi:id="_CdQUdM1tEeO5Ep2pmY5GiA" type="_CRkB0M1tEeO5Ep2pmY5GiA" direction="return"/>
                <language>java</language>
                <body>this.checkedFiles = new ArrayList&lt;String>();&#xD;
		this.violations = new ArrayList&lt;Violation>();&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdQUdc1tEeO5Ep2pmY5GiA" name="ValidationResult" specification="_CbVo4M1tEeO5Ep2pmY5GiA">
                <ownedParameter xmi:id="_CdQUds1tEeO5Ep2pmY5GiA" name="valid">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_CdQUd81tEeO5Ep2pmY5GiA" name="checkedFiles" type="_CZOwEs1tEeO5Ep2pmY5GiA"/>
                <ownedParameter xmi:id="_CdQUeM1tEeO5Ep2pmY5GiA" name="violations" type="_CZOwEs1tEeO5Ep2pmY5GiA"/>
                <ownedParameter xmi:id="_CdQUec1tEeO5Ep2pmY5GiA" type="_CRkB0M1tEeO5Ep2pmY5GiA" direction="return"/>
                <language>java</language>
                <body>this.valid = valid;&#xD;
		this.checkedFiles = checkedFiles;&#xD;
		this.violations = violations;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdQUes1tEeO5Ep2pmY5GiA" name="isValid" specification="_CRwPEM1tEeO5Ep2pmY5GiA">
                <ownedParameter xmi:id="_CdQUe81tEeO5Ep2pmY5GiA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>return valid;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdQUfM1tEeO5Ep2pmY5GiA" name="setValid" specification="_CRwPE81tEeO5Ep2pmY5GiA">
                <ownedParameter xmi:id="_CdQUfc1tEeO5Ep2pmY5GiA" name="valid">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <language>java</language>
                <body>this.valid = valid;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdQUfs1tEeO5Ep2pmY5GiA" name="getCheckedFiles" specification="_CRwPFs1tEeO5Ep2pmY5GiA">
                <ownedParameter xmi:id="_CdQUf81tEeO5Ep2pmY5GiA" isOrdered="true" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CdQUgM1tEeO5Ep2pmY5GiA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return checkedFiles;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdWbEM1tEeO5Ep2pmY5GiA" name="getViolations" specification="_CRwPGs1tEeO5Ep2pmY5GiA">
                <ownedParameter xmi:id="_CdWbEc1tEeO5Ep2pmY5GiA" type="_CSIpkM1tEeO5Ep2pmY5GiA" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CdWbEs1tEeO5Ep2pmY5GiA" value="*"/>
                </ownedParameter>
                <language>java</language>
                <body>return violations;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_CRqIec1tEeO5Ep2pmY5GiA" name="ValidationResult" method="_CdQUc81tEeO5Ep2pmY5GiA">
                <eAnnotations xmi:id="_CRqIes1tEeO5Ep2pmY5GiA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_CRqIe81tEeO5Ep2pmY5GiA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_CRqIfM1tEeO5Ep2pmY5GiA" type="_CRkB0M1tEeO5Ep2pmY5GiA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_CRwPEM1tEeO5Ep2pmY5GiA" name="isValid" method="_CdQUes1tEeO5Ep2pmY5GiA">
                <ownedComment xmi:id="_Cdu1os1tEeO5Ep2pmY5GiA">
                  <body>@return boolean indicating whether all checked files are valid</body>
                </ownedComment>
                <ownedParameter xmi:id="_CRwPEc1tEeO5Ep2pmY5GiA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_CRwPE81tEeO5Ep2pmY5GiA" name="setValid" method="_CdQUfM1tEeO5Ep2pmY5GiA">
                <ownedComment xmi:id="_Cdu1o81tEeO5Ep2pmY5GiA">
                  <body>sets the attribute valid to the given value&#xD;
	 * &#xD;
	 * @param valid</body>
                </ownedComment>
                <ownedParameter xmi:id="_CRwPFM1tEeO5Ep2pmY5GiA" name="valid">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_CRwPFs1tEeO5Ep2pmY5GiA" name="getCheckedFiles" method="_CdQUfs1tEeO5Ep2pmY5GiA">
                <ownedComment xmi:id="_Cdu1pM1tEeO5Ep2pmY5GiA">
                  <body>@return list of filenames of all checked files</body>
                </ownedComment>
                <ownedParameter xmi:id="_CRwPF81tEeO5Ep2pmY5GiA" isOrdered="true" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CRwPGM1tEeO5Ep2pmY5GiA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_CRwPGs1tEeO5Ep2pmY5GiA" name="getViolations" method="_CdWbEM1tEeO5Ep2pmY5GiA">
                <ownedComment xmi:id="_Cdu1pc1tEeO5Ep2pmY5GiA">
                  <body>@return a list of all violations</body>
                </ownedComment>
                <ownedParameter xmi:id="_CR2VsM1tEeO5Ep2pmY5GiA" type="_CSIpkM1tEeO5Ep2pmY5GiA" isOrdered="true" direction="return">
                  <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CR2Vsc1tEeO5Ep2pmY5GiA" value="*"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_CbVo4M1tEeO5Ep2pmY5GiA" name="ValidationResult" method="_CdQUdc1tEeO5Ep2pmY5GiA">
                <eAnnotations xmi:id="_CbWP881tEeO5Ep2pmY5GiA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_CbW3AM1tEeO5Ep2pmY5GiA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_Cdu1oc1tEeO5Ep2pmY5GiA">
                  <body>Constructor&#xD;
	 * &#xD;
	 * @param valid&#xD;
	 *            are violations found?&#xD;
	 * @param checkedFiles&#xD;
	 *            a list of the file names of all checked files&#xD;
	 * @param violations&#xD;
	 *            the found violations or null</body>
                </ownedComment>
                <ownedParameter xmi:id="_CbWP8M1tEeO5Ep2pmY5GiA" name="valid">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                </ownedParameter>
                <ownedParameter xmi:id="_CbWP8c1tEeO5Ep2pmY5GiA" name="checkedFiles" type="_CZOwEs1tEeO5Ep2pmY5GiA"/>
                <ownedParameter xmi:id="_CbWP8s1tEeO5Ep2pmY5GiA" name="violations" type="_CZOwEs1tEeO5Ep2pmY5GiA"/>
                <ownedParameter xmi:id="_CbW3Ac1tEeO5Ep2pmY5GiA" type="_CRkB0M1tEeO5Ep2pmY5GiA" direction="return"/>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Class" xmi:id="_CSIpkM1tEeO5Ep2pmY5GiA" name="Violation">
              <ownedAttribute xmi:id="_CclmGs1tEeO5Ep2pmY5GiA" name="constraint" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_CclmHs1tEeO5Ep2pmY5GiA" name="fileName" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_CclmIs1tEeO5Ep2pmY5GiA" name="line" isReadOnly="true">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_CclmKM1tEeO5Ep2pmY5GiA" name="xPath" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedAttribute xmi:id="_CcrssM1tEeO5Ep2pmY5GiA" name="message" visibility="private">
                <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
              </ownedAttribute>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdWbFc1tEeO5Ep2pmY5GiA" name="Violation" specification="_CSOwNM1tEeO5Ep2pmY5GiA">
                <ownedParameter xmi:id="_CdWbFs1tEeO5Ep2pmY5GiA" name="constraint">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_CdWbF81tEeO5Ep2pmY5GiA" name="fileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_CdWbGM1tEeO5Ep2pmY5GiA" name="line">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_CdWbGc1tEeO5Ep2pmY5GiA" name="xPath">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_CdWbGs1tEeO5Ep2pmY5GiA" name="message">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_CdWbG81tEeO5Ep2pmY5GiA" type="_CSIpkM1tEeO5Ep2pmY5GiA" direction="return"/>
                <language>java</language>
                <body>this.constraint = constraint;&#xD;
		this.fileName = fileName;&#xD;
		this.line = line;&#xD;
		this.xPath = xPath;&#xD;
		this.message = message;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdWbHM1tEeO5Ep2pmY5GiA" name="getConstraint" specification="_CSOwPs1tEeO5Ep2pmY5GiA">
                <ownedParameter xmi:id="_CdWbHc1tEeO5Ep2pmY5GiA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return constraint;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdWbHs1tEeO5Ep2pmY5GiA" name="getFileName" specification="_CSU20s1tEeO5Ep2pmY5GiA">
                <ownedParameter xmi:id="_CdWbH81tEeO5Ep2pmY5GiA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return fileName;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdWbIM1tEeO5Ep2pmY5GiA" name="getxPath" specification="_CSU21c1tEeO5Ep2pmY5GiA">
                <ownedParameter xmi:id="_CdWbIc1tEeO5Ep2pmY5GiA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return xPath;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdWbIs1tEeO5Ep2pmY5GiA" name="getMessage" specification="_CSU22M1tEeO5Ep2pmY5GiA">
                <ownedParameter xmi:id="_CdWbI81tEeO5Ep2pmY5GiA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>return message;&#xD;
	</body>
              </ownedBehavior>
              <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdWbJM1tEeO5Ep2pmY5GiA" name="toString" specification="_CSU2281tEeO5Ep2pmY5GiA">
                <ownedParameter xmi:id="_CdWbJc1tEeO5Ep2pmY5GiA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <language>java</language>
                <body>String str = &quot;[&quot; + fileName + &quot;, line &quot; + line + &quot;]: Violation of &quot;&#xD;
				+ constraint;&#xD;
&#xD;
		if (message != null &amp;&amp; !message.equals(&quot;&quot;)) {&#xD;
			str += &quot;: &quot; + message;&#xD;
		}&#xD;
		if (xPath != null &amp;&amp; !xPath.equals(&quot;&quot;)) {&#xD;
			str += &quot;(XPath: &quot; + xPath + &quot;)&quot;;&#xD;
		}&#xD;
		return str;&#xD;
	</body>
              </ownedBehavior>
              <ownedOperation xmi:id="_CSOwMM1tEeO5Ep2pmY5GiA" name="Violation">
                <eAnnotations xmi:id="_CSOwMc1tEeO5Ep2pmY5GiA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_CSOwMs1tEeO5Ep2pmY5GiA" key="create"/>
                </eAnnotations>
                <ownedParameter xmi:id="_CSOwM81tEeO5Ep2pmY5GiA" type="_CSIpkM1tEeO5Ep2pmY5GiA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_CSOwNM1tEeO5Ep2pmY5GiA" name="Violation" method="_CdWbFc1tEeO5Ep2pmY5GiA">
                <eAnnotations xmi:id="_CSOwOs1tEeO5Ep2pmY5GiA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                  <details xmi:id="_CSOwO81tEeO5Ep2pmY5GiA" key="create"/>
                </eAnnotations>
                <ownedComment xmi:id="_Cdu1q81tEeO5Ep2pmY5GiA">
                  <body>Constructor&#xD;
	 * &#xD;
	 * @param constraint&#xD;
	 *            id of the failed constraint&#xD;
	 * @param fileName&#xD;
	 *            name of the affected file&#xD;
	 * @param line&#xD;
	 *            line number&#xD;
	 * @param xPath&#xD;
	 *            XPath expression to the affected element/attribute&#xD;
	 * @param message&#xD;
	 *            description of the violation</body>
                </ownedComment>
                <ownedParameter xmi:id="_CSOwNc1tEeO5Ep2pmY5GiA" name="constraint">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_CSOwNs1tEeO5Ep2pmY5GiA" name="fileName">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_CSOwN81tEeO5Ep2pmY5GiA" name="line">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                </ownedParameter>
                <ownedParameter xmi:id="_CSOwOM1tEeO5Ep2pmY5GiA" name="xPath">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_CSOwOc1tEeO5Ep2pmY5GiA" name="message">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
                <ownedParameter xmi:id="_CSOwPM1tEeO5Ep2pmY5GiA" type="_CSIpkM1tEeO5Ep2pmY5GiA" direction="return"/>
              </ownedOperation>
              <ownedOperation xmi:id="_CSOwPs1tEeO5Ep2pmY5GiA" name="getConstraint" method="_CdWbHM1tEeO5Ep2pmY5GiA">
                <ownedComment xmi:id="_Cdu1rM1tEeO5Ep2pmY5GiA">
                  <body>@return the affected constraint</body>
                </ownedComment>
                <ownedParameter xmi:id="_CSU20M1tEeO5Ep2pmY5GiA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_CSU20s1tEeO5Ep2pmY5GiA" name="getFileName" method="_CdWbHs1tEeO5Ep2pmY5GiA">
                <ownedComment xmi:id="_Cdu1rc1tEeO5Ep2pmY5GiA">
                  <body>@return affected file</body>
                </ownedComment>
                <ownedParameter xmi:id="_CSU2081tEeO5Ep2pmY5GiA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_CSU21c1tEeO5Ep2pmY5GiA" name="getxPath" method="_CdWbIM1tEeO5Ep2pmY5GiA">
                <ownedComment xmi:id="_Cdu1rs1tEeO5Ep2pmY5GiA">
                  <body>@return XPath expression to determine affected element/attribute</body>
                </ownedComment>
                <ownedParameter xmi:id="_CSU21s1tEeO5Ep2pmY5GiA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_CSU22M1tEeO5Ep2pmY5GiA" name="getMessage" method="_CdWbIs1tEeO5Ep2pmY5GiA">
                <ownedComment xmi:id="_Cdu1r81tEeO5Ep2pmY5GiA">
                  <body>@return message to describe the violation</body>
                </ownedComment>
                <ownedParameter xmi:id="_CSU22c1tEeO5Ep2pmY5GiA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
              <ownedOperation xmi:id="_CSU2281tEeO5Ep2pmY5GiA" name="toString" method="_CdWbJM1tEeO5Ep2pmY5GiA">
                <ownedParameter xmi:id="_CSU23M1tEeO5Ep2pmY5GiA" direction="return">
                  <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                </ownedParameter>
              </ownedOperation>
            </packagedElement>
            <packagedElement xmi:type="uml:Association" xmi:id="_CeBJcM1tEeO5Ep2pmY5GiA" name="" memberEnd="_CeBJcc1tEeO5Ep2pmY5GiA _CcffgM1tEeO5Ep2pmY5GiA">
              <ownedEnd xmi:id="_CeBJcc1tEeO5Ep2pmY5GiA" name="" type="_CRkB0M1tEeO5Ep2pmY5GiA" association="_CeBJcM1tEeO5Ep2pmY5GiA"/>
            </packagedElement>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_CJCX8M1tEeO5Ep2pmY5GiA" name="ppn">
            <packagedElement xmi:type="uml:Package" xmi:id="_CJCX9s1tEeO5Ep2pmY5GiA" name="ba">
              <packagedElement xmi:type="uml:Package" xmi:id="_CJCX981tEeO5Ep2pmY5GiA" name="helper">
                <packagedElement xmi:type="uml:Class" xmi:id="_CStRUM1tEeO5Ep2pmY5GiA" clientDependency="_CbbvgM1tEeO5Ep2pmY5GiA" name="BpmnNamespaceContext">
                  <ownedComment xmi:id="_Cdu1ss1tEeO5Ep2pmY5GiA">
                    <body>Namespace Context helper class which sets the namespace uri to the bpmn
Namespace, if the prefix is bpmn

@author Philipp Neugebauer
@version 1.0
 *</body>
                  </ownedComment>
                  <interfaceRealization xmi:id="_CbbvgM1tEeO5Ep2pmY5GiA" client="_CStRUM1tEeO5Ep2pmY5GiA" supplier="_CZzX3M1tEeO5Ep2pmY5GiA" contract="_CZzX3M1tEeO5Ep2pmY5GiA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdWbLM1tEeO5Ep2pmY5GiA" name="getNamespaceURI" specification="_CStRUc1tEeO5Ep2pmY5GiA">
                    <ownedParameter xmi:id="_CdWbLc1tEeO5Ep2pmY5GiA" name="prefix">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_CdWbLs1tEeO5Ep2pmY5GiA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>if (&quot;bpmn&quot;.equals(prefix)) {
			return SchematronBPMNValidator.bpmnNamespace;
		} else if (&quot;xml&quot;.equals(prefix)) {
			return XMLConstants.XML_NS_URI;
		}
		return XMLConstants.NULL_NS_URI;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdWbL81tEeO5Ep2pmY5GiA" name="getPrefix" specification="_CSzX8M1tEeO5Ep2pmY5GiA">
                    <ownedParameter xmi:id="_CdWbMM1tEeO5Ep2pmY5GiA" name="uri">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_CdWbMc1tEeO5Ep2pmY5GiA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return &quot;&quot;;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdWbMs1tEeO5Ep2pmY5GiA" name="getPrefixes" specification="_CSzX9s1tEeO5Ep2pmY5GiA">
                    <ownedParameter xmi:id="_CdWbM81tEeO5Ep2pmY5GiA" name="uri">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_CdWbNM1tEeO5Ep2pmY5GiA" type="_CZzX2M1tEeO5Ep2pmY5GiA" direction="return"/>
                    <language>java</language>
                    <body>return null;
	</body>
                  </ownedBehavior>
                  <ownedOperation xmi:id="_CStRUc1tEeO5Ep2pmY5GiA" name="getNamespaceURI" method="_CdWbLM1tEeO5Ep2pmY5GiA">
                    <ownedParameter xmi:id="_CStRUs1tEeO5Ep2pmY5GiA" name="prefix">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_CStRU81tEeO5Ep2pmY5GiA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_CSzX8M1tEeO5Ep2pmY5GiA" name="getPrefix" method="_CdWbL81tEeO5Ep2pmY5GiA">
                    <ownedParameter xmi:id="_CSzX8c1tEeO5Ep2pmY5GiA" name="uri">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_CSzX8s1tEeO5Ep2pmY5GiA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_CSzX9s1tEeO5Ep2pmY5GiA" name="getPrefixes" method="_CdWbMs1tEeO5Ep2pmY5GiA">
                    <ownedParameter xmi:id="_CSzX981tEeO5Ep2pmY5GiA" name="uri">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_CbcWkM1tEeO5Ep2pmY5GiA" type="_CZzX2M1tEeO5Ep2pmY5GiA" direction="return"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_CS5ekM1tEeO5Ep2pmY5GiA" name="BpmnValidationException">
                  <ownedComment xmi:id="_Cdu1s81tEeO5Ep2pmY5GiA">
                    <body>Used to have validator exception messages, if anything fails during&#xD;
validation&#xD;
&#xD;
@author Philipp Neugebauer&#xD;
@version 1.0</body>
                  </ownedComment>
                  <generalization xmi:id="_CbeLwc1tEeO5Ep2pmY5GiA" general="_Cbc9oc1tEeO5Ep2pmY5GiA"/>
                  <ownedAttribute xmi:id="_Ccrsts1tEeO5Ep2pmY5GiA" name="serialVersionUID" visibility="private" isLeaf="true" isStatic="true" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#long"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_Ccrst81tEeO5Ep2pmY5GiA" value="1L"/>
                  </ownedAttribute>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdWbNc1tEeO5Ep2pmY5GiA" name="BpmnValidationException" specification="_CS5ekc1tEeO5Ep2pmY5GiA">
                    <ownedParameter xmi:id="_CdWbNs1tEeO5Ep2pmY5GiA" name="text">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_CdWbN81tEeO5Ep2pmY5GiA" type="_CS5ekM1tEeO5Ep2pmY5GiA" direction="return"/>
                    <language>java</language>
                    <body>super(text);&#xD;
	</body>
                  </ownedBehavior>
                  <ownedOperation xmi:id="_CS5ekc1tEeO5Ep2pmY5GiA" name="BpmnValidationException" method="_CdWbNc1tEeO5Ep2pmY5GiA">
                    <eAnnotations xmi:id="_CS5ek81tEeO5Ep2pmY5GiA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_CS5elM1tEeO5Ep2pmY5GiA" key="create"/>
                    </eAnnotations>
                    <ownedParameter xmi:id="_CS5eks1tEeO5Ep2pmY5GiA" name="text">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_CS5elc1tEeO5Ep2pmY5GiA" type="_CS5ekM1tEeO5Ep2pmY5GiA" direction="return"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_CS_lMM1tEeO5Ep2pmY5GiA" name="PrintHelper">
                  <ownedComment xmi:id="_Cdu1tM1tEeO5Ep2pmY5GiA">
                    <body>PrintHelper for printing some objects to system.out

@author Philipp Neugebauer
@version 1.0</body>
                  </ownedComment>
                  <ownedAttribute xmi:id="_CcrsuM1tEeO5Ep2pmY5GiA" name="transformerFactory" visibility="private" isStatic="true" type="_CZ5eeM1tEeO5Ep2pmY5GiA" association="_CeHQEM1tEeO5Ep2pmY5GiA"/>
                  <ownedAttribute xmi:id="_Ccrsus1tEeO5Ep2pmY5GiA" name="transformer" visibility="private" isStatic="true" type="_CZ5ecs1tEeO5Ep2pmY5GiA" association="_CeHQE81tEeO5Ep2pmY5GiA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdWbOM1tEeO5Ep2pmY5GiA" name="_initializer1" specification="_CS_lMc1tEeO5Ep2pmY5GiA">
                    <language>java</language>
                    <body>transformerFactory = TransformerFactory.newInstance();
		try {
			transformer = transformerFactory.newTransformer();
			transformer
					.setOutputProperty(OutputKeys.OMIT_XML_DECLARATION, &quot;no&quot;);
			transformer.setOutputProperty(OutputKeys.METHOD, &quot;xml&quot;);
			transformer.setOutputProperty(OutputKeys.INDENT, &quot;yes&quot;);
			transformer.setOutputProperty(OutputKeys.ENCODING, &quot;UTF-8&quot;);
			transformer.setOutputProperty(
					&quot;{http://xml.apache.org/xslt}indent-amount&quot;, &quot;4&quot;);
		} catch (TransformerConfigurationException e) {
			// ignore
		}
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdWbOc1tEeO5Ep2pmY5GiA" name="printDocument" specification="_CbfZ4M1tEeO5Ep2pmY5GiA">
                    <ownedParameter xmi:id="_CdWbOs1tEeO5Ep2pmY5GiA" name="document" type="_CZ5efs1tEeO5Ep2pmY5GiA"/>
                    <language>java</language>
                    <body>try {
			transformer.transform(new DOMSource(document), new StreamResult(
					System.out));
		} catch (TransformerException e) {
			System.err.println(&quot;printDocument failed cause of&quot; + e.getCause());
		}
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdchsM1tEeO5Ep2pmY5GiA" name="printViolations" specification="_CbhPEM1tEeO5Ep2pmY5GiA">
                    <ownedParameter xmi:id="_Cdchsc1tEeO5Ep2pmY5GiA" name="violations" type="_CZOwEs1tEeO5Ep2pmY5GiA"/>
                    <language>java</language>
                    <body>System.out.println(&quot;Violations count: &quot; + violations.size());
		System.out.println(&quot;--------------------&quot;);
		for (Violation v : violations) {
			System.out.println(&quot;Line: &quot; + v.getLine());
			System.out.println(&quot;FileName: &quot; + v.getFileName());
			System.out.println(&quot;Message: &quot; + v.getMessage());
			System.out.println(&quot;XPath: &quot; + v.getxPath());
			System.out.println(&quot;Constraint: &quot; + v.getConstraint());
			System.out.println(&quot;--------------------&quot;);
		}
	</body>
                  </ownedBehavior>
                  <ownedOperation xmi:id="_CS_lMc1tEeO5Ep2pmY5GiA" name="_initializer1" isStatic="true" method="_CdWbOM1tEeO5Ep2pmY5GiA">
                    <eAnnotations xmi:id="_CS_lMs1tEeO5Ep2pmY5GiA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_CS_lM81tEeO5Ep2pmY5GiA" key="init"/>
                    </eAnnotations>
                  </ownedOperation>
                  <ownedOperation xmi:id="_CbfZ4M1tEeO5Ep2pmY5GiA" name="printDocument" isStatic="true" method="_CdWbOc1tEeO5Ep2pmY5GiA">
                    <ownedComment xmi:id="_Cdu1tc1tEeO5Ep2pmY5GiA">
                      <body>prints the given document to system.out
	 * 
	 * @param document
	 *            the document, which should be printed</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_CbfZ4c1tEeO5Ep2pmY5GiA" name="document" type="_CZ5efs1tEeO5Ep2pmY5GiA"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_CbhPEM1tEeO5Ep2pmY5GiA" name="printViolations" isStatic="true" method="_CdchsM1tEeO5Ep2pmY5GiA">
                    <ownedComment xmi:id="_Cdu1ts1tEeO5Ep2pmY5GiA">
                      <body>prints the violations list in a nice and human-readable way to system.out
	 * 
	 * @param violations
	 *            the violations list, which should be printed</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_Cbh2IM1tEeO5Ep2pmY5GiA" name="violations" type="_CZOwEs1tEeO5Ep2pmY5GiA"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Association" xmi:id="_CeHQEM1tEeO5Ep2pmY5GiA" name="" memberEnd="_CeHQEc1tEeO5Ep2pmY5GiA _CcrsuM1tEeO5Ep2pmY5GiA">
                  <ownedEnd xmi:id="_CeHQEc1tEeO5Ep2pmY5GiA" name="" type="_CS_lMM1tEeO5Ep2pmY5GiA" association="_CeHQEM1tEeO5Ep2pmY5GiA"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Association" xmi:id="_CeHQE81tEeO5Ep2pmY5GiA" name="" memberEnd="_CeHQFM1tEeO5Ep2pmY5GiA _Ccrsus1tEeO5Ep2pmY5GiA">
                  <ownedEnd xmi:id="_CeHQFM1tEeO5Ep2pmY5GiA" name="" type="_CS_lMM1tEeO5Ep2pmY5GiA" association="_CeHQE81tEeO5Ep2pmY5GiA"/>
                </packagedElement>
              </packagedElement>
              <packagedElement xmi:type="uml:Package" xmi:id="_CJCX-M1tEeO5Ep2pmY5GiA" name="validation">
                <packagedElement xmi:type="uml:Interface" xmi:id="_CT2g0M1tEeO5Ep2pmY5GiA" name="BpmnValidator">
                  <ownedComment xmi:id="_Cd08MM1tEeO5Ep2pmY5GiA">
                    <body>Interface for the implementation of the validator. Allows the usage of the&#xD;
validator in other projects. The loglevel is set default to info. If you need&#xD;
another log level, change the log level before the validation process.&#xD;
&#xD;
@author Philipp Neugebauer&#xD;
@version 1.0&#xD;
 *</body>
                  </ownedComment>
                  <ownedOperation xmi:id="_Cby74M1tEeO5Ep2pmY5GiA" name="setLogLevel">
                    <ownedComment xmi:id="_Cd08Mc1tEeO5Ep2pmY5GiA">
                      <body>Sets the loglevel of all loggers of the bpmn validator to the given level&#xD;
	 * &#xD;
	 * @param logLevel&#xD;
	 *            possible levels: {@link ch.qos.logback.classic.Level}</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_Cby74c1tEeO5Ep2pmY5GiA" name="logLevel" type="_CZzX1c1tEeO5Ep2pmY5GiA"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_Cbzi8M1tEeO5Ep2pmY5GiA" name="validate" raisedException="_CS5ekM1tEeO5Ep2pmY5GiA">
                    <ownedComment xmi:id="_Cd08Ms1tEeO5Ep2pmY5GiA">
                      <body>checks the given xmlFile for bpmn constraint violations&#xD;
	 * &#xD;
	 * @param xmlFile&#xD;
	 * @return ValidationResult including all checked files and found violations&#xD;
	 * @throws BpmnValidationException&#xD;
	 *             if something fails during validation process</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_Cbzi8c1tEeO5Ep2pmY5GiA" name="xmlFile" type="_CZtRMs1tEeO5Ep2pmY5GiA"/>
                    <ownedParameter xmi:id="_Cbzi8s1tEeO5Ep2pmY5GiA" type="_CRkB0M1tEeO5Ep2pmY5GiA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_Cb0KAM1tEeO5Ep2pmY5GiA" name="validateFiles" raisedException="_CS5ekM1tEeO5Ep2pmY5GiA">
                    <ownedComment xmi:id="_Cd08M81tEeO5Ep2pmY5GiA">
                      <body>checks the given xmlFiles for bpmn constraint violations&#xD;
	 * &#xD;
	 * @param xmlFiles&#xD;
	 * @return List&lt;ValidationResult> including all checked files and found&#xD;
	 *         violations for each file&#xD;
	 * @throws BpmnValidationException&#xD;
	 *             if something fails during validation process</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_Cb0xEM1tEeO5Ep2pmY5GiA" name="xmlFiles" type="_CZOwEs1tEeO5Ep2pmY5GiA"/>
                    <ownedParameter xmi:id="_Cb0xEc1tEeO5Ep2pmY5GiA" type="_CRkB0M1tEeO5Ep2pmY5GiA" isOrdered="true" direction="return">
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Cb0xEs1tEeO5Ep2pmY5GiA" value="*"/>
                    </ownedParameter>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_CUKC0M1tEeO5Ep2pmY5GiA" clientDependency="_Cb4bcM1tEeO5Ep2pmY5GiA" name="ResourceResolver">
                  <ownedComment xmi:id="_Cd08Ns1tEeO5Ep2pmY5GiA">
                    <body>Class for representing a custom LSResourceResolver in order to enable resource resolution&#xD;
for BPMN XSD Validation.&#xD;
&#xD;
Needed for &lt;xs:include>-resolution when generating a {@link javax.xml.validation.Schema} when using&#xD;
getClass().getResourceAsStream(&quot;path/to/file.xsd&quot;)&#xD;
&#xD;
@author Matthias Geiger&#xD;
@version 1.0&#xD;
@see LSResourceResolver</body>
                  </ownedComment>
                  <interfaceRealization xmi:id="_Cb4bcM1tEeO5Ep2pmY5GiA" client="_CUKC0M1tEeO5Ep2pmY5GiA" supplier="_CaX_k81tEeO5Ep2pmY5GiA" contract="_CaX_k81tEeO5Ep2pmY5GiA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cdch1c1tEeO5Ep2pmY5GiA" name="resolveResource" specification="_CUQJcM1tEeO5Ep2pmY5GiA">
                    <ownedParameter xmi:id="_Cdch1s1tEeO5Ep2pmY5GiA" name="type">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_Cdch181tEeO5Ep2pmY5GiA" name="namespaceURI">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_Cdch2M1tEeO5Ep2pmY5GiA" name="publicId">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_Cdch2c1tEeO5Ep2pmY5GiA" name="systemId">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_Cdch2s1tEeO5Ep2pmY5GiA" name="baseURI">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_Cdch281tEeO5Ep2pmY5GiA" type="_CaX_kc1tEeO5Ep2pmY5GiA" direction="return"/>
                    <language>java</language>
                    <body>InputStream resourceAsStream = this.getClass().getResourceAsStream(&quot;/&quot;+systemId);&#xD;
		&#xD;
		return new Input(publicId, systemId, resourceAsStream);&#xD;
	</body>
                  </ownedBehavior>
                  <ownedOperation xmi:id="_CUQJcM1tEeO5Ep2pmY5GiA" name="resolveResource" method="_Cdch1c1tEeO5Ep2pmY5GiA">
                    <ownedParameter xmi:id="_CUQJcc1tEeO5Ep2pmY5GiA" name="type">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_CUQJcs1tEeO5Ep2pmY5GiA" name="namespaceURI">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_CUQJc81tEeO5Ep2pmY5GiA" name="publicId">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_CUQJdM1tEeO5Ep2pmY5GiA" name="systemId">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_CUQJdc1tEeO5Ep2pmY5GiA" name="baseURI">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_Cb5CgM1tEeO5Ep2pmY5GiA" type="_CaX_kc1tEeO5Ep2pmY5GiA" direction="return"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_CUWQEs1tEeO5Ep2pmY5GiA" name="XsdValidator">
                  <ownedComment xmi:id="_Cd08N81tEeO5Ep2pmY5GiA">
                    <body>&#xD;
Does the xsd validation step&#xD;
&#xD;
@author Andreas Vorndran, Philipp Neugebauer&#xD;
@version 1.0&#xD;
 *</body>
                  </ownedComment>
                  <ownedAttribute xmi:id="_Cc35981tEeO5Ep2pmY5GiA" name="schemaFactory" visibility="private" type="_CaeGMc1tEeO5Ep2pmY5GiA" association="_CeNWvc1tEeO5Ep2pmY5GiA"/>
                  <ownedAttribute xmi:id="_Cc35-c1tEeO5Ep2pmY5GiA" name="schema" visibility="private" type="_CaX_m81tEeO5Ep2pmY5GiA" association="_CeNWwM1tEeO5Ep2pmY5GiA"/>
                  <ownedAttribute xmi:id="_Cc35-81tEeO5Ep2pmY5GiA" name="logger" visibility="private" type="_CaFrw81tEeO5Ep2pmY5GiA" association="_CeNWw81tEeO5Ep2pmY5GiA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cdch3M1tEeO5Ep2pmY5GiA" name="_initializer1" specification="_CUcWsM1tEeO5Ep2pmY5GiA">
                    <language>java</language>
                    <body>schemaFactory = SchemaFactory&#xD;
				.newInstance(XMLConstants.W3C_XML_SCHEMA_NS_URI);&#xD;
		schemaFactory.setResourceResolver(new ResourceResolver());&#xD;
		logger = (Logger) LoggerFactory.getLogger(&quot;BpmnValidator&quot;);&#xD;
		try {&#xD;
			schema = schemaFactory.newSchema(new Source[] {&#xD;
					resolveResourcePaths(&quot;DC.xsd&quot;),&#xD;
					resolveResourcePaths(&quot;DI.xsd&quot;),&#xD;
					resolveResourcePaths(&quot;BPMNDI.xsd&quot;),&#xD;
					resolveResourcePaths(&quot;BPMN20.xsd&quot;) });&#xD;
		} catch (FileNotFoundException | SAXException e) {&#xD;
			logger.error(&quot;schemafactory couldn't create schema, cause: {}&quot;,&#xD;
					e.getCause());&#xD;
		}&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cdch3c1tEeO5Ep2pmY5GiA" name="validateAgainstXsd" specification="_Cb63sM1tEeO5Ep2pmY5GiA">
                    <ownedParameter xmi:id="_Cdch3s1tEeO5Ep2pmY5GiA" name="xmlFile" type="_CZtRMs1tEeO5Ep2pmY5GiA"/>
                    <ownedParameter xmi:id="_Cdch381tEeO5Ep2pmY5GiA" name="validationResult" type="_CRkB0M1tEeO5Ep2pmY5GiA"/>
                    <language>java</language>
                    <body>logger.info(&quot;xsd validation started: {}&quot;, xmlFile.getName());&#xD;
		List&lt;SAXParseException> xsdErrorList = new ArrayList&lt;>();&#xD;
		Validator validator = schema.newValidator();&#xD;
		validator.setErrorHandler(new XsdValidationErrorHandler(xsdErrorList));&#xD;
		validator.validate(new StreamSource(xmlFile));&#xD;
		for (SAXParseException saxParseException : xsdErrorList) {&#xD;
			validationResult.getViolations().add(&#xD;
					new Violation(&quot;XSD-Check&quot;, xmlFile.getName(),&#xD;
							saxParseException.getLineNumber(), &quot;&quot;,&#xD;
							saxParseException.getMessage()));&#xD;
			logger.info(&quot;xsd violation in {} at {} found&quot;, xmlFile.getName(),&#xD;
					saxParseException.getLineNumber());&#xD;
		}&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cdch4M1tEeO5Ep2pmY5GiA" name="resolveResourcePaths" specification="_CUcWtM1tEeO5Ep2pmY5GiA">
                    <ownedParameter xmi:id="_Cdch4c1tEeO5Ep2pmY5GiA" name="resourceName">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_Cdch4s1tEeO5Ep2pmY5GiA" type="_CaX_mc1tEeO5Ep2pmY5GiA" direction="return"/>
                    <language>java</language>
                    <body>return new StreamSource(this.getClass().getResourceAsStream(&#xD;
				&quot;/&quot; + resourceName));&#xD;
	</body>
                  </ownedBehavior>
                  <ownedOperation xmi:id="_CUcWsM1tEeO5Ep2pmY5GiA" name="_initializer1" method="_Cdch3M1tEeO5Ep2pmY5GiA">
                    <eAnnotations xmi:id="_CUcWsc1tEeO5Ep2pmY5GiA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_CUcWss1tEeO5Ep2pmY5GiA" key="init"/>
                    </eAnnotations>
                  </ownedOperation>
                  <ownedOperation xmi:id="_CUcWtM1tEeO5Ep2pmY5GiA" name="resolveResourcePaths" visibility="private" method="_Cdch4M1tEeO5Ep2pmY5GiA" raisedException="_CaX_lc1tEeO5Ep2pmY5GiA">
                    <ownedComment xmi:id="_Cd08Oc1tEeO5Ep2pmY5GiA">
                      <body>&#xD;
	 * The method simplifies the search for a resource and returns the&#xD;
	 * streamsource with the searched source&#xD;
	 * &#xD;
	 * @param resourceName&#xD;
	 * @return the streamsource of the file, which needed to be load&#xD;
	 * @throws FileNotFoundException&#xD;
	 *             if the resource file doesn't exist there</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_CUcWtc1tEeO5Ep2pmY5GiA" name="resourceName">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_Cb63s81tEeO5Ep2pmY5GiA" type="_CaX_mc1tEeO5Ep2pmY5GiA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_Cb63sM1tEeO5Ep2pmY5GiA" name="validateAgainstXsd" method="_Cdch3c1tEeO5Ep2pmY5GiA" raisedException="_CZ_lEM1tEeO5Ep2pmY5GiA _CaFrwc1tEeO5Ep2pmY5GiA">
                    <ownedComment xmi:id="_Cd08OM1tEeO5Ep2pmY5GiA">
                      <body>Validates the given xmlFile with the xsd bpmn files and writes violations&#xD;
	 * to the given validation result&#xD;
	 * &#xD;
	 * @param xmlFile&#xD;
	 * @param validationResult&#xD;
	 * @throws IOException&#xD;
	 *             when xmlFile can't be read&#xD;
	 * @throws SAXException&#xD;
	 *             when validation process fails somehow</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_Cb63sc1tEeO5Ep2pmY5GiA" name="xmlFile" type="_CZtRMs1tEeO5Ep2pmY5GiA"/>
                    <ownedParameter xmi:id="_Cb63ss1tEeO5Ep2pmY5GiA" name="validationResult" type="_CRkB0M1tEeO5Ep2pmY5GiA"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_CUoj8M1tEeO5Ep2pmY5GiA" name="XmlLocator">
                  <ownedComment xmi:id="_Cd08Os1tEeO5Ep2pmY5GiA">
                    <body>&#xD;
Locates the lines of the validation errors&#xD;
&#xD;
@author Philipp Neugebauer&#xD;
@version 1.0&#xD;
 *</body>
                  </ownedComment>
                  <ownedAttribute xmi:id="_Cc35_c1tEeO5Ep2pmY5GiA" name="saxBuilder" visibility="private" type="_CakM2c1tEeO5Ep2pmY5GiA" association="_CeNWxs1tEeO5Ep2pmY5GiA"/>
                  <ownedAttribute xmi:id="_Cc-Akc1tEeO5Ep2pmY5GiA" name="xPathFactory" visibility="private" type="_CakM4c1tEeO5Ep2pmY5GiA" association="_CeTdUc1tEeO5Ep2pmY5GiA"/>
                  <ownedAttribute xmi:id="_Cc-Ak81tEeO5Ep2pmY5GiA" name="logger" visibility="private" type="_CaFrw81tEeO5Ep2pmY5GiA" association="_CeTdVM1tEeO5Ep2pmY5GiA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cdch481tEeO5Ep2pmY5GiA" name="XmlLocator" specification="_CUoj8c1tEeO5Ep2pmY5GiA">
                    <ownedParameter xmi:id="_Cdch5M1tEeO5Ep2pmY5GiA" type="_CUoj8M1tEeO5Ep2pmY5GiA" direction="return"/>
                    <language>java</language>
                    <body>saxBuilder = new SAXBuilder();&#xD;
		saxBuilder.setJDOMFactory(new LocatedJDOMFactory());&#xD;
		xPathFactory = XPathFactory.instance();&#xD;
		logger = (Logger) LoggerFactory.getLogger(&quot;BpmnValidator&quot;);&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cdch5c1tEeO5Ep2pmY5GiA" name="findLine" specification="_Cb63tM1tEeO5Ep2pmY5GiA">
                    <ownedParameter xmi:id="_Cdch5s1tEeO5Ep2pmY5GiA" name="xmlFile" type="_CZtRMs1tEeO5Ep2pmY5GiA"/>
                    <ownedParameter xmi:id="_Cdch581tEeO5Ep2pmY5GiA" name="xpathExpression">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_Cdch6M1tEeO5Ep2pmY5GiA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>try {&#xD;
			Document doc = saxBuilder.build(xmlFile);&#xD;
			int bracketPosition = xpathExpression.lastIndexOf('[');&#xD;
			int elementPosition = 0;&#xD;
			try {&#xD;
				elementPosition = Integer.valueOf(xpathExpression.substring(&#xD;
						bracketPosition + 1, xpathExpression.lastIndexOf(']')));&#xD;
				xpathExpression = xpathExpression.substring(0, bracketPosition);&#xD;
			} catch (NumberFormatException e) {&#xD;
				// ignore, because then there's no position number in the xpath&#xD;
				// expression and the expression needn't to be rewritten&#xD;
			}&#xD;
			XPathExpression&lt;Element> xpath = xPathFactory.compile(&#xD;
					xpathExpression, Filters.element(), null, Namespace&#xD;
							.getNamespace(&quot;bpmn&quot;,&#xD;
									SchematronBPMNValidator.bpmnNamespace));&#xD;
&#xD;
			List&lt;Element> foundElements = xpath.evaluate(doc);&#xD;
&#xD;
			if (foundElements.size() > elementPosition) {&#xD;
				return ((LocatedElement) foundElements.get(elementPosition))&#xD;
						.getLine();&#xD;
			}&#xD;
		} catch (IOException | JDOMException e) {&#xD;
			logger.error(&quot;file {} couldn't be read. Cause: {}&quot;,&#xD;
					xmlFile.getName(), e.getCause());&#xD;
		}&#xD;
		return -1;&#xD;
	</body>
                  </ownedBehavior>
                  <ownedOperation xmi:id="_CUoj8c1tEeO5Ep2pmY5GiA" name="XmlLocator" method="_Cdch481tEeO5Ep2pmY5GiA">
                    <eAnnotations xmi:id="_CUoj8s1tEeO5Ep2pmY5GiA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_CUoj881tEeO5Ep2pmY5GiA" key="create"/>
                    </eAnnotations>
                    <ownedParameter xmi:id="_CUoj9M1tEeO5Ep2pmY5GiA" type="_CUoj8M1tEeO5Ep2pmY5GiA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_Cb63tM1tEeO5Ep2pmY5GiA" name="findLine" method="_Cdch5c1tEeO5Ep2pmY5GiA">
                    <ownedComment xmi:id="_Cd08O81tEeO5Ep2pmY5GiA">
                      <body>Searches the line of the given xpath expression in the given file and&#xD;
	 * returns either the line or -1. -1 means, that with the xpath expression&#xD;
	 * couldn't be determined a bpmn element.&#xD;
	 * &#xD;
	 * @param xmlFile&#xD;
	 * @param xpathExpression&#xD;
	 * @return line or -1</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_Cb63tc1tEeO5Ep2pmY5GiA" name="xmlFile" type="_CZtRMs1tEeO5Ep2pmY5GiA"/>
                    <ownedParameter xmi:id="_Cb63ts1tEeO5Ep2pmY5GiA" name="xpathExpression">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_Cb63t81tEeO5Ep2pmY5GiA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_CUuqkM1tEeO5Ep2pmY5GiA" clientDependency="_Cb63uM1tEeO5Ep2pmY5GiA" name="XsdValidationErrorHandler">
                  <ownedComment xmi:id="_Cd08PM1tEeO5Ep2pmY5GiA">
                    <body>
@author Andreas Vorndran, Philipp Neugebauer
@version 1.0
 *</body>
                  </ownedComment>
                  <ownedAttribute xmi:id="_Cc-Alc1tEeO5Ep2pmY5GiA" name="xsdErrorList" visibility="private" type="_CaeGNc1tEeO5Ep2pmY5GiA" isOrdered="true" association="_CeTdV81tEeO5Ep2pmY5GiA">
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Cc-Als1tEeO5Ep2pmY5GiA" value="*"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_Cc-Al81tEeO5Ep2pmY5GiA" value="new ArrayList&lt;>()"/>
                  </ownedAttribute>
                  <interfaceRealization xmi:id="_Cb63uM1tEeO5Ep2pmY5GiA" client="_CUuqkM1tEeO5Ep2pmY5GiA" supplier="_CaqTcM1tEeO5Ep2pmY5GiA" contract="_CaqTcM1tEeO5Ep2pmY5GiA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cdch6c1tEeO5Ep2pmY5GiA" name="XsdValidationErrorHandler" specification="_Cb63uc1tEeO5Ep2pmY5GiA">
                    <ownedParameter xmi:id="_Cdch6s1tEeO5Ep2pmY5GiA" name="xsdErrorList" type="_CZOwEs1tEeO5Ep2pmY5GiA"/>
                    <ownedParameter xmi:id="_Cdch681tEeO5Ep2pmY5GiA" type="_CUuqkM1tEeO5Ep2pmY5GiA" direction="return"/>
                    <language>java</language>
                    <body>this.xsdErrorList = xsdErrorList;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cdch7M1tEeO5Ep2pmY5GiA" name="error" specification="_CcA-VM1tEeO5Ep2pmY5GiA">
                    <ownedParameter xmi:id="_Cdch7c1tEeO5Ep2pmY5GiA" name="e" type="_CaeGNc1tEeO5Ep2pmY5GiA"/>
                    <language>java</language>
                    <body>xsdErrorList.add(e);
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdioUM1tEeO5Ep2pmY5GiA" name="fatalError" specification="_CcA-Wc1tEeO5Ep2pmY5GiA">
                    <ownedParameter xmi:id="_CdioUc1tEeO5Ep2pmY5GiA" name="e" type="_CaeGNc1tEeO5Ep2pmY5GiA"/>
                    <language>java</language>
                    <body>xsdErrorList.add(e);
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdioUs1tEeO5Ep2pmY5GiA" name="warning" specification="_CcA-Xs1tEeO5Ep2pmY5GiA">
                    <ownedParameter xmi:id="_CdioU81tEeO5Ep2pmY5GiA" name="e" type="_CaeGNc1tEeO5Ep2pmY5GiA"/>
                    <language>java</language>
                    <body>xsdErrorList.add(e);
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdioVM1tEeO5Ep2pmY5GiA" name="getXsdErrors" specification="_CU0xMM1tEeO5Ep2pmY5GiA">
                    <ownedParameter xmi:id="_CdioVc1tEeO5Ep2pmY5GiA" type="_CaeGNc1tEeO5Ep2pmY5GiA" isOrdered="true" direction="return">
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CdioVs1tEeO5Ep2pmY5GiA" value="*"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return xsdErrorList;
	</body>
                  </ownedBehavior>
                  <ownedOperation xmi:id="_CU0xMM1tEeO5Ep2pmY5GiA" name="getXsdErrors" method="_CdioVM1tEeO5Ep2pmY5GiA">
                    <ownedParameter xmi:id="_CU0xMc1tEeO5Ep2pmY5GiA" type="_CaeGNc1tEeO5Ep2pmY5GiA" isOrdered="true" direction="return">
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CU0xMs1tEeO5Ep2pmY5GiA" value="*"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_Cb63uc1tEeO5Ep2pmY5GiA" name="XsdValidationErrorHandler" method="_Cdch6c1tEeO5Ep2pmY5GiA">
                    <eAnnotations xmi:id="_CcA-UM1tEeO5Ep2pmY5GiA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_CcA-Uc1tEeO5Ep2pmY5GiA" key="create"/>
                    </eAnnotations>
                    <ownedParameter xmi:id="_Cb63us1tEeO5Ep2pmY5GiA" name="xsdErrorList" type="_CZOwEs1tEeO5Ep2pmY5GiA"/>
                    <ownedParameter xmi:id="_CcA-Us1tEeO5Ep2pmY5GiA" type="_CUuqkM1tEeO5Ep2pmY5GiA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_CcA-VM1tEeO5Ep2pmY5GiA" name="error" method="_Cdch7M1tEeO5Ep2pmY5GiA" raisedException="_CaFrwc1tEeO5Ep2pmY5GiA">
                    <ownedParameter xmi:id="_CcA-Vc1tEeO5Ep2pmY5GiA" name="e" type="_CaeGNc1tEeO5Ep2pmY5GiA"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_CcA-Wc1tEeO5Ep2pmY5GiA" name="fatalError" method="_CdioUM1tEeO5Ep2pmY5GiA" raisedException="_CaFrwc1tEeO5Ep2pmY5GiA">
                    <ownedParameter xmi:id="_CcA-Ws1tEeO5Ep2pmY5GiA" name="e" type="_CaeGNc1tEeO5Ep2pmY5GiA"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_CcA-Xs1tEeO5Ep2pmY5GiA" name="warning" method="_CdioUs1tEeO5Ep2pmY5GiA" raisedException="_CaFrwc1tEeO5Ep2pmY5GiA">
                    <ownedParameter xmi:id="_CcHE8M1tEeO5Ep2pmY5GiA" name="e" type="_CaeGNc1tEeO5Ep2pmY5GiA"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_CVA-cM1tEeO5Ep2pmY5GiA" clientDependency="_CawaH81tEeO5Ep2pmY5GiA" name="SchematronBPMNValidator">
                  <ownedComment xmi:id="_Cd08Pc1tEeO5Ep2pmY5GiA">
                    <body>Implementation of BpmnValidator&#xD;
&#xD;
More information : {@link BpmnValidator}&#xD;
&#xD;
Does the validation process of the xsd and the schematron validation and&#xD;
returns the results of the validation&#xD;
&#xD;
@author Philipp Neugebauer&#xD;
@version 1.0&#xD;
 *</body>
                  </ownedComment>
                  <ownedAttribute xmi:id="_Cc-Amc1tEeO5Ep2pmY5GiA" name="documentBuilderFactory" visibility="private" type="_CZ_lFM1tEeO5Ep2pmY5GiA" association="_CeTdWs1tEeO5Ep2pmY5GiA"/>
                  <ownedAttribute xmi:id="_Cc-Am81tEeO5Ep2pmY5GiA" name="documentBuilder" visibility="private" type="_CZ_lEs1tEeO5Ep2pmY5GiA" association="_CeTdXc1tEeO5Ep2pmY5GiA"/>
                  <ownedAttribute xmi:id="_Cc-Anc1tEeO5Ep2pmY5GiA" name="xPathFactory" visibility="private" type="_CaFrt81tEeO5Ep2pmY5GiA" association="_CeTdYM1tEeO5Ep2pmY5GiA"/>
                  <ownedAttribute xmi:id="_CdEHMM1tEeO5Ep2pmY5GiA" name="xpath" visibility="private" type="_CZ_lGM1tEeO5Ep2pmY5GiA" association="_CeTdY81tEeO5Ep2pmY5GiA"/>
                  <ownedAttribute xmi:id="_CdEHMs1tEeO5Ep2pmY5GiA" name="xPathExpression" visibility="private" type="_CaFrs81tEeO5Ep2pmY5GiA" association="_CeTdZs1tEeO5Ep2pmY5GiA"/>
                  <ownedAttribute xmi:id="_CdEHNM1tEeO5Ep2pmY5GiA" name="preProcessor" visibility="private" type="_CTeGUM1tEeO5Ep2pmY5GiA" association="_CeTdac1tEeO5Ep2pmY5GiA"/>
                  <ownedAttribute xmi:id="_CdEHNs1tEeO5Ep2pmY5GiA" name="xmlLocator" visibility="private" type="_CUoj8M1tEeO5Ep2pmY5GiA" association="_CeZj8c1tEeO5Ep2pmY5GiA"/>
                  <ownedAttribute xmi:id="_CdEHOM1tEeO5Ep2pmY5GiA" name="xsdValidator" visibility="private" type="_CUWQEs1tEeO5Ep2pmY5GiA" association="_CeZj9M1tEeO5Ep2pmY5GiA"/>
                  <ownedAttribute xmi:id="_CdEHOs1tEeO5Ep2pmY5GiA" name="logger" visibility="private" type="_CaFrw81tEeO5Ep2pmY5GiA" association="_CeZj981tEeO5Ep2pmY5GiA"/>
                  <ownedAttribute xmi:id="_CdEHPM1tEeO5Ep2pmY5GiA" name="bpmnNamespace" isLeaf="true" isStatic="true" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_CdEHPc1tEeO5Ep2pmY5GiA" value="&quot;http://www.omg.org/spec/BPMN/20100524/MODEL&quot;"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_CdEHP81tEeO5Ep2pmY5GiA" name="bpmndiNamespace" isLeaf="true" isStatic="true" isReadOnly="true">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <defaultValue xmi:type="uml:LiteralString" xmi:id="_CdEHQM1tEeO5Ep2pmY5GiA" value="&quot;http://www.omg.org/spec/BPMN/20100524/DI&quot;"/>
                  </ownedAttribute>
                  <interfaceRealization xmi:id="_CawaH81tEeO5Ep2pmY5GiA" client="_CVA-cM1tEeO5Ep2pmY5GiA" supplier="_CT2g0M1tEeO5Ep2pmY5GiA" contract="_CT2g0M1tEeO5Ep2pmY5GiA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdioV81tEeO5Ep2pmY5GiA" name="_initializer1" specification="_CVHFEM1tEeO5Ep2pmY5GiA">
                    <language>java</language>
                    <body>documentBuilderFactory = DocumentBuilderFactory.newInstance();&#xD;
		documentBuilderFactory.setNamespaceAware(true);&#xD;
		try {&#xD;
			documentBuilder = documentBuilderFactory.newDocumentBuilder();&#xD;
		} catch (ParserConfigurationException e) {&#xD;
			// ignore&#xD;
		}&#xD;
		xPathFactory = XPathFactory.newInstance();&#xD;
		xpath = xPathFactory.newXPath();&#xD;
		xpath.setNamespaceContext(new BpmnNamespaceContext());&#xD;
		try {&#xD;
			xPathExpression = xpath.compile(&quot;//bpmn:*/@id&quot;);&#xD;
		} catch (XPathExpressionException e) {&#xD;
			// ignore&#xD;
		}&#xD;
		preProcessor = new PreProcessor();&#xD;
		xmlLocator = new XmlLocator();&#xD;
		xsdValidator = new XsdValidator();&#xD;
		logger = (Logger) LoggerFactory.getLogger(&quot;BpmnValidator&quot;);&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdioWM1tEeO5Ep2pmY5GiA" name="setLogLevel" specification="_CcHE9M1tEeO5Ep2pmY5GiA">
                    <ownedParameter xmi:id="_CdioWc1tEeO5Ep2pmY5GiA" name="logLevel" type="_CZzX1c1tEeO5Ep2pmY5GiA"/>
                    <language>java</language>
                    <body>logger.setLevel(logLevel);&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdioWs1tEeO5Ep2pmY5GiA" name="validateFiles" specification="_CcHE-c1tEeO5Ep2pmY5GiA">
                    <ownedParameter xmi:id="_CdioW81tEeO5Ep2pmY5GiA" name="xmlFiles" type="_CZOwEs1tEeO5Ep2pmY5GiA"/>
                    <ownedParameter xmi:id="_CdioXM1tEeO5Ep2pmY5GiA" type="_CRkB0M1tEeO5Ep2pmY5GiA" isOrdered="true" direction="return">
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CdioXc1tEeO5Ep2pmY5GiA" value="*"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>List&lt;ValidationResult> validationResults = new ArrayList&lt;ValidationResult>();&#xD;
		for (File xmlFile : xmlFiles) {&#xD;
			validationResults.add(validate(xmlFile));&#xD;
		}&#xD;
		return validationResults;&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdioXs1tEeO5Ep2pmY5GiA" name="validate" specification="_CcNLks1tEeO5Ep2pmY5GiA">
                    <ownedParameter xmi:id="_CdioX81tEeO5Ep2pmY5GiA" name="xmlFile" type="_CZtRMs1tEeO5Ep2pmY5GiA"/>
                    <ownedParameter xmi:id="_CdioYM1tEeO5Ep2pmY5GiA" type="_CRkB0M1tEeO5Ep2pmY5GiA" direction="return"/>
                    <language>java</language>
                    <body>final ISchematronResource schematronSchema = SchematronResourcePure&#xD;
				.fromClassPath(&quot;validation.xml&quot;);&#xD;
		if (!schematronSchema.isValidSchematron()) {&#xD;
			logger.error(&quot;schematron file is invalid&quot;);&#xD;
			throw new BpmnValidationException(&quot;Invalid Schematron!&quot;);&#xD;
		}&#xD;
&#xD;
		logger.info(&quot;Validating {}&quot;, xmlFile.getName());&#xD;
&#xD;
		ValidationResult validationResult = new ValidationResult();&#xD;
&#xD;
		try {&#xD;
			Document headFileDocument = documentBuilder.parse(xmlFile);&#xD;
			validationResult.getCheckedFiles().add(xmlFile.getAbsolutePath());&#xD;
			File parentFolder = xmlFile.getParentFile();&#xD;
&#xD;
			checkConstraint001(xmlFile, parentFolder, validationResult);&#xD;
			checkConstraint002(xmlFile, parentFolder, validationResult);&#xD;
&#xD;
			List&lt;String[]> namespaceTable = new ArrayList&lt;>();&#xD;
			PreProcessResult preProcessResult = preProcessor.preProcess(&#xD;
					headFileDocument, parentFolder, namespaceTable);&#xD;
&#xD;
			SchematronOutputType schematronOutputType = schematronSchema&#xD;
					.applySchematronValidationToSVRL(new StreamSource(&#xD;
							transformDocumentToInputStream(headFileDocument)));&#xD;
			for (int i = 0; i &lt; schematronOutputType&#xD;
					.getActivePatternAndFiredRuleAndFailedAssertCount(); i++) {&#xD;
				if (schematronOutputType&#xD;
						.getActivePatternAndFiredRuleAndFailedAssertAtIndex(i) instanceof FailedAssert) {&#xD;
					FailedAssert failedAssert = (FailedAssert) schematronOutputType&#xD;
							.getActivePatternAndFiredRuleAndFailedAssertAtIndex(i);&#xD;
					String message = failedAssert.getText().trim();&#xD;
					String constraint = message.substring(0,&#xD;
							message.indexOf('|'));&#xD;
					String errorMessage = message.substring(message&#xD;
							.indexOf('|') + 1);&#xD;
					int line = xmlLocator.findLine(xmlFile,&#xD;
							failedAssert.getLocation());&#xD;
					String fileName = xmlFile.getName();&#xD;
					String location = failedAssert.getLocation();&#xD;
					logger.info(&quot;violation of constraint {} in {} found.&quot;,&#xD;
							constraint, fileName);&#xD;
					if (line == -1) {&#xD;
						try {&#xD;
							String xpathId = &quot;&quot;;&#xD;
							if (failedAssert.getDiagnosticReferenceCount() > 0) {&#xD;
								xpathId = failedAssert.getDiagnosticReference()&#xD;
										.get(0).getText().trim();&#xD;
							}&#xD;
							String[] result = searchForViolationFile(xpathId,&#xD;
									validationResult,&#xD;
									preProcessResult.getNamespaceTable());&#xD;
							fileName = result[0];&#xD;
							line = Integer.valueOf(result[1]);&#xD;
							location = result[2];&#xD;
						} catch (BpmnValidationException e) {&#xD;
							fileName = e.getMessage();&#xD;
						} catch (StringIndexOutOfBoundsException e) {&#xD;
							fileName = &quot;Element couldn't be found!&quot;;&#xD;
						}&#xD;
						logger.info(&#xD;
								&quot;preprocessing needed. violation in {} at {}.&quot;,&#xD;
								fileName, line);&#xD;
					}&#xD;
					validationResult.getViolations().add(&#xD;
							new Violation(constraint, fileName, line, location,&#xD;
									errorMessage));&#xD;
				}&#xD;
			}&#xD;
&#xD;
			for (int i = 0; i &lt; validationResult.getCheckedFiles().size(); i++) {&#xD;
				File f = new File(validationResult.getCheckedFiles().get(i));&#xD;
				validationResult.getCheckedFiles().set(i, f.getName());&#xD;
			}&#xD;
		} catch (SAXException | IOException e) {&#xD;
			logger.error(&quot;file {} couldn't be read. Cause: {}&quot;,&#xD;
					xmlFile.getName(), e.getCause());&#xD;
			throw new BpmnValidationException(&#xD;
					&quot;Given file couldn't be read or doesn't exist!&quot;);&#xD;
		} catch (Exception e) {&#xD;
			logger.error(&quot;exception at schematron validation. Cause: {}&quot;,&#xD;
					e.getCause());&#xD;
			throw new BpmnValidationException(&#xD;
					&quot;Something went wrong during schematron validation!&quot;);&#xD;
		}&#xD;
&#xD;
		validationResult.setValid(validationResult.getViolations().isEmpty());&#xD;
		logger.info(&quot;Validating process successfully done, file is valid: {}&quot;,&#xD;
				validationResult.isValid());&#xD;
&#xD;
		return validationResult;&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdioYc1tEeO5Ep2pmY5GiA" name="transformDocumentToInputStream" specification="_CcNLmM1tEeO5Ep2pmY5GiA">
                    <ownedParameter xmi:id="_CdioYs1tEeO5Ep2pmY5GiA" name="headFileDocument" type="_CZ5efs1tEeO5Ep2pmY5GiA"/>
                    <ownedParameter xmi:id="_CdioY81tEeO5Ep2pmY5GiA" type="_CaqTcs1tEeO5Ep2pmY5GiA" direction="return"/>
                    <language>java</language>
                    <body>ByteArrayOutputStream outputStream = new ByteArrayOutputStream();&#xD;
		TransformerFactory transformerFactory = TransformerFactory&#xD;
				.newInstance();&#xD;
		Transformer transformer = transformerFactory.newTransformer();&#xD;
		transformer&#xD;
				.transform(new DOMSource(headFileDocument), new StreamResult(&#xD;
						new OutputStreamWriter(outputStream, &quot;UTF-8&quot;)));&#xD;
&#xD;
		ByteArrayInputStream inputStream = new ByteArrayInputStream(&#xD;
				outputStream.toByteArray());&#xD;
&#xD;
		return inputStream;&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdioZM1tEeO5Ep2pmY5GiA" name="searchForViolationFile" specification="_CcNLm81tEeO5Ep2pmY5GiA">
                    <ownedParameter xmi:id="_CdioZc1tEeO5Ep2pmY5GiA" name="xpathExpression">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_CdioZs1tEeO5Ep2pmY5GiA" name="validationResult" type="_CRkB0M1tEeO5Ep2pmY5GiA"/>
                    <ownedParameter xmi:id="_CdioZ81tEeO5Ep2pmY5GiA" name="namespaceTable" type="_CZOwEs1tEeO5Ep2pmY5GiA"/>
                    <ownedParameter xmi:id="_CdioaM1tEeO5Ep2pmY5GiA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Cdioac1tEeO5Ep2pmY5GiA" value="*"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>String fileName = &quot;&quot;;&#xD;
		String line = &quot;-1&quot;;&#xD;
		String xpathObjectId = &quot;&quot;;&#xD;
		for (int i = 0; i &lt; validationResult.getCheckedFiles().size()&#xD;
				&amp;&amp; line.equals(&quot;-1&quot;); i++) {&#xD;
			File checkedFile = new File(validationResult.getCheckedFiles().get(&#xD;
					i));&#xD;
			try {&#xD;
				Document document = documentBuilder.parse(checkedFile);&#xD;
				String namespacePrefix = xpathExpression.substring(0,&#xD;
						xpathExpression.indexOf('_'));&#xD;
				String namespace = &quot;&quot;;&#xD;
				for (String[] s : namespaceTable) {&#xD;
					if (s[0].equals(namespacePrefix)) {&#xD;
						namespace = s[1];&#xD;
					}&#xD;
				}&#xD;
				for (String checkedFilePath : validationResult&#xD;
						.getCheckedFiles()) {&#xD;
					checkedFile = new File(checkedFilePath);&#xD;
					try {&#xD;
						document = documentBuilder.parse(checkedFile);&#xD;
						if (document.getDocumentElement()&#xD;
								.getAttribute(&quot;targetNamespace&quot;)&#xD;
								.equals(namespace)) {&#xD;
							xpathObjectId = createIdBpmnExpression(xpathExpression&#xD;
									.substring(xpathExpression.indexOf('_') + 1));&#xD;
							line = String.valueOf(xmlLocator.findLine(&#xD;
									checkedFile, xpathObjectId));&#xD;
							xpathObjectId += &quot;[0]&quot;;&#xD;
							fileName = checkedFile.getName();&#xD;
							break;&#xD;
						}&#xD;
					} catch (SAXException | IOException e) {&#xD;
						logger.error(&quot;file {} couldn't be read. Cause: {}&quot;,&#xD;
								checkedFile.getName(), e.getCause());&#xD;
					}&#xD;
				}&#xD;
			} catch (SAXException | IOException e) {&#xD;
				logger.error(&quot;file {} couldn't be read. Cause: {}&quot;,&#xD;
						checkedFile.getName(), e.getCause());&#xD;
			}&#xD;
		}&#xD;
&#xD;
		if (line.equals(&quot;-1&quot;)) {&#xD;
			throw new BpmnValidationException(&quot;BPMN Element couldn't be found!&quot;);&#xD;
		}&#xD;
&#xD;
		return new String[] { fileName, line, xpathObjectId };&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cdioas1tEeO5Ep2pmY5GiA" name="checkConstraint001" specification="_CcNLo81tEeO5Ep2pmY5GiA">
                    <ownedParameter xmi:id="_Cdioa81tEeO5Ep2pmY5GiA" name="headFile" type="_CZtRMs1tEeO5Ep2pmY5GiA"/>
                    <ownedParameter xmi:id="_CdiobM1tEeO5Ep2pmY5GiA" name="folder" type="_CZtRMs1tEeO5Ep2pmY5GiA"/>
                    <ownedParameter xmi:id="_Cdiobc1tEeO5Ep2pmY5GiA" name="validationResult" type="_CRkB0M1tEeO5Ep2pmY5GiA"/>
                    <language>java</language>
                    <body>try {&#xD;
			xsdValidator.validateAgainstXsd(headFile, validationResult);&#xD;
			Document headFileDocument = documentBuilder.parse(headFile);&#xD;
&#xD;
			ImportedFile[] importedFiles = preProcessor.selectImportedFiles(&#xD;
					headFileDocument, folder, 0);&#xD;
&#xD;
			String constraint = &quot;EXT.001&quot;;&#xD;
			for (int i = 0; i &lt; importedFiles.length; i++) {&#xD;
				if (!importedFiles[i].getFile().exists()) {&#xD;
					String xpathLocation = &quot;//bpmn:import[@location = '&quot;&#xD;
							+ importedFiles[i].getFile().getName() + &quot;']&quot;;&#xD;
					String fileName = importedFiles[i].getFile().getName();&#xD;
					int line = xmlLocator.findLine(headFile, xpathLocation);&#xD;
					validationResult.getViolations().add(&#xD;
							new Violation(constraint, fileName, line,&#xD;
									xpathLocation + &quot;[0]&quot;,&#xD;
									&quot;The imported file does not exist&quot;));&#xD;
					logger.info(&quot;violation of constraint {} in {} found.&quot;,&#xD;
							constraint, fileName);&#xD;
				} else {&#xD;
					checkConstraint001(importedFiles[i].getFile(), folder,&#xD;
							validationResult);&#xD;
				}&#xD;
			}&#xD;
		} catch (SAXException | IOException e) {&#xD;
			logger.error(&quot;file {} couldn't be read. Cause: {}&quot;,&#xD;
					headFile.getName(), e.getCause());&#xD;
		}&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cdiobs1tEeO5Ep2pmY5GiA" name="checkConstraint002" specification="_CcTSMM1tEeO5Ep2pmY5GiA">
                    <ownedParameter xmi:id="_Cdiob81tEeO5Ep2pmY5GiA" name="headFile" type="_CZtRMs1tEeO5Ep2pmY5GiA"/>
                    <ownedParameter xmi:id="_CdiocM1tEeO5Ep2pmY5GiA" name="folder" type="_CZtRMs1tEeO5Ep2pmY5GiA"/>
                    <ownedParameter xmi:id="_Cdiocc1tEeO5Ep2pmY5GiA" name="validationResult" type="_CRkB0M1tEeO5Ep2pmY5GiA"/>
                    <language>java</language>
                    <body>List&lt;File> importedFileList = searchForImports(headFile, folder,&#xD;
				validationResult);&#xD;
&#xD;
		for (int i = 0; i &lt; importedFileList.size(); i++) {&#xD;
			File file1 = importedFileList.get(i);&#xD;
			try {&#xD;
				Document document1 = documentBuilder.parse(file1);&#xD;
				preProcessor.removeBPMNDINode(document1);&#xD;
				String namespace1 = document1.getDocumentElement()&#xD;
						.getAttribute(&quot;targetNamespace&quot;);&#xD;
				for (int j = i + 1; j &lt; importedFileList.size(); j++) {&#xD;
					File file2 = importedFileList.get(j);&#xD;
					try {&#xD;
						Document document2 = documentBuilder.parse(file2);&#xD;
						preProcessor.removeBPMNDINode(document2);&#xD;
						String namespace2 = document2.getDocumentElement()&#xD;
								.getAttribute(&quot;targetNamespace&quot;);&#xD;
						if (namespace1.equals(namespace2)) {&#xD;
							checkNamespacesAndIdDuplicates(file1, file2,&#xD;
									document1, document2, validationResult);&#xD;
						}&#xD;
					} catch (IOException | SAXException e) {&#xD;
						logger.error(&quot;file {} couldn't be read. Cause: {}&quot;,&#xD;
								file2.getName(), e.getCause());&#xD;
					}&#xD;
				}&#xD;
			} catch (IOException | SAXException e) {&#xD;
				logger.error(&quot;file {} couldn't be read. Cause: {}&quot;,&#xD;
						file1.getName(), e.getCause());&#xD;
			}&#xD;
		}&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cdiocs1tEeO5Ep2pmY5GiA" name="searchForImports" specification="_CcTSNM1tEeO5Ep2pmY5GiA">
                    <ownedParameter xmi:id="_Cdioc81tEeO5Ep2pmY5GiA" name="file" type="_CZtRMs1tEeO5Ep2pmY5GiA"/>
                    <ownedParameter xmi:id="_CdiodM1tEeO5Ep2pmY5GiA" name="folder" type="_CZtRMs1tEeO5Ep2pmY5GiA"/>
                    <ownedParameter xmi:id="_Cdiodc1tEeO5Ep2pmY5GiA" name="validationResult" type="_CRkB0M1tEeO5Ep2pmY5GiA"/>
                    <ownedParameter xmi:id="_Cdiods1tEeO5Ep2pmY5GiA" type="_CZtRMs1tEeO5Ep2pmY5GiA" isOrdered="true" direction="return">
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Cdiod81tEeO5Ep2pmY5GiA" value="*"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>List&lt;File> importedFileList = new ArrayList&lt;>();&#xD;
		try {&#xD;
			Document document = documentBuilder.parse(file);&#xD;
			ImportedFile[] importedFiles = preProcessor.selectImportedFiles(&#xD;
					document, folder, 0);&#xD;
			importedFileList.add(file);&#xD;
&#xD;
			for (int i = 0; i &lt; importedFiles.length; i++) {&#xD;
				if (importedFiles[i].getFile().exists()) {&#xD;
					validationResult.getCheckedFiles().add(&#xD;
							importedFiles[i].getFile().getAbsolutePath());&#xD;
					importedFileList.addAll(searchForImports(&#xD;
							importedFiles[i].getFile(), folder,&#xD;
							validationResult));&#xD;
				}&#xD;
			}&#xD;
		} catch (IOException | SAXException e) {&#xD;
			logger.error(&quot;file {} couldn't be read. Cause: {}&quot;, file.getName(),&#xD;
					e.getCause());&#xD;
		}&#xD;
&#xD;
		return importedFileList;&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdioeM1tEeO5Ep2pmY5GiA" name="checkNamespacesAndIdDuplicates" specification="_CcTSOs1tEeO5Ep2pmY5GiA">
                    <ownedParameter xmi:id="_Cdioec1tEeO5Ep2pmY5GiA" name="file1" type="_CZtRMs1tEeO5Ep2pmY5GiA"/>
                    <ownedParameter xmi:id="_Cdioes1tEeO5Ep2pmY5GiA" name="file2" type="_CZtRMs1tEeO5Ep2pmY5GiA"/>
                    <ownedParameter xmi:id="_Cdioe81tEeO5Ep2pmY5GiA" name="document1" type="_CZ5efs1tEeO5Ep2pmY5GiA"/>
                    <ownedParameter xmi:id="_CdiofM1tEeO5Ep2pmY5GiA" name="document2" type="_CZ5efs1tEeO5Ep2pmY5GiA"/>
                    <ownedParameter xmi:id="_Cdiofc1tEeO5Ep2pmY5GiA" name="validationResult" type="_CRkB0M1tEeO5Ep2pmY5GiA"/>
                    <language>java</language>
                    <body>NodeList foundNodes1 = (NodeList) xPathExpression.evaluate(document1,&#xD;
				XPathConstants.NODESET);&#xD;
		NodeList foundNodes2 = (NodeList) xPathExpression.evaluate(document2,&#xD;
				XPathConstants.NODESET);&#xD;
		String constraint = &quot;EXT.002&quot;;&#xD;
		for (int k = 1; k &lt; foundNodes1.getLength(); k++) {&#xD;
			String importedFile1Id = foundNodes1.item(k).getNodeValue();&#xD;
			for (int l = 1; l &lt; foundNodes2.getLength(); l++) {&#xD;
				String importedFile2Id = foundNodes2.item(l).getNodeValue();&#xD;
				if (importedFile1Id.equals(importedFile2Id)) {&#xD;
					String xpathLocation = createIdBpmnExpression(importedFile1Id);&#xD;
					validationResult.getViolations().add(&#xD;
							new Violation(constraint, file1.getName(),&#xD;
									xmlLocator.findLine(file1, xpathLocation),&#xD;
									xpathLocation + &quot;[0]&quot;,&#xD;
									&quot;Files have id duplicates&quot;));&#xD;
					validationResult.getViolations().add(&#xD;
							new Violation(constraint, file2.getName(),&#xD;
									xmlLocator.findLine(file2, xpathLocation),&#xD;
									xpathLocation + &quot;[0]&quot;,&#xD;
									&quot;Files have id duplicates&quot;));&#xD;
					logger.info(&quot;violation of constraint {} found.&quot;, constraint);&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cdiofs1tEeO5Ep2pmY5GiA" name="createIdBpmnExpression" specification="_CVNLsM1tEeO5Ep2pmY5GiA">
                    <ownedParameter xmi:id="_Cdiof81tEeO5Ep2pmY5GiA" name="id">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_CdiogM1tEeO5Ep2pmY5GiA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return &quot;//bpmn:*[@id = '&quot; + id + &quot;']&quot;;&#xD;
	</body>
                  </ownedBehavior>
                  <ownedOperation xmi:id="_CVHFEM1tEeO5Ep2pmY5GiA" name="_initializer1" method="_CdioV81tEeO5Ep2pmY5GiA">
                    <eAnnotations xmi:id="_CVHFEc1tEeO5Ep2pmY5GiA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_CVHFEs1tEeO5Ep2pmY5GiA" key="init"/>
                    </eAnnotations>
                  </ownedOperation>
                  <ownedOperation xmi:id="_CVNLsM1tEeO5Ep2pmY5GiA" name="createIdBpmnExpression" visibility="private" method="_Cdiofs1tEeO5Ep2pmY5GiA">
                    <ownedComment xmi:id="_Cd08RM1tEeO5Ep2pmY5GiA">
                      <body>creates a xpath expression for finding the id&#xD;
	 * &#xD;
	 * @param id&#xD;
	 *            the id, to which the expression should refer&#xD;
	 * @return the xpath expression, which refers the given id</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_CVNLsc1tEeO5Ep2pmY5GiA" name="id">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_CVNLss1tEeO5Ep2pmY5GiA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_CcHE9M1tEeO5Ep2pmY5GiA" name="setLogLevel" method="_CdioWM1tEeO5Ep2pmY5GiA">
                    <ownedParameter xmi:id="_CcHE9c1tEeO5Ep2pmY5GiA" name="logLevel" type="_CZzX1c1tEeO5Ep2pmY5GiA"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_CcHE-c1tEeO5Ep2pmY5GiA" name="validateFiles" method="_CdioWs1tEeO5Ep2pmY5GiA" raisedException="_CS5ekM1tEeO5Ep2pmY5GiA">
                    <ownedParameter xmi:id="_CcHE-s1tEeO5Ep2pmY5GiA" name="xmlFiles" type="_CZOwEs1tEeO5Ep2pmY5GiA"/>
                    <ownedParameter xmi:id="_CcHE-81tEeO5Ep2pmY5GiA" type="_CRkB0M1tEeO5Ep2pmY5GiA" isOrdered="true" direction="return">
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CcHE_M1tEeO5Ep2pmY5GiA" value="*"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_CcNLks1tEeO5Ep2pmY5GiA" name="validate" method="_CdioXs1tEeO5Ep2pmY5GiA" raisedException="_CS5ekM1tEeO5Ep2pmY5GiA">
                    <ownedParameter xmi:id="_CcNLk81tEeO5Ep2pmY5GiA" name="xmlFile" type="_CZtRMs1tEeO5Ep2pmY5GiA"/>
                    <ownedParameter xmi:id="_CcNLlM1tEeO5Ep2pmY5GiA" type="_CRkB0M1tEeO5Ep2pmY5GiA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_CcNLmM1tEeO5Ep2pmY5GiA" name="transformDocumentToInputStream" visibility="private" method="_CdioYc1tEeO5Ep2pmY5GiA" raisedException="_CawaFc1tEeO5Ep2pmY5GiA _CZ5eds1tEeO5Ep2pmY5GiA">
                    <ownedComment xmi:id="_Cd08Ps1tEeO5Ep2pmY5GiA">
                      <body>transforms the given headFileDocument to an inputstream, so that it can&#xD;
	 * be used for the schematron validation process&#xD;
	 * &#xD;
	 * @param headFileDocument&#xD;
	 * @return input stream with the head file document&#xD;
	 * @throws UnsupportedEncodingException&#xD;
	 *             if the encoding isn't supported&#xD;
	 * @throws TransformerException&#xD;
	 *             if anything fails during transformation process</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_CcNLmc1tEeO5Ep2pmY5GiA" name="headFileDocument" type="_CZ5efs1tEeO5Ep2pmY5GiA"/>
                    <ownedParameter xmi:id="_CcNLms1tEeO5Ep2pmY5GiA" type="_CaqTcs1tEeO5Ep2pmY5GiA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_CcNLm81tEeO5Ep2pmY5GiA" name="searchForViolationFile" visibility="private" method="_CdioZM1tEeO5Ep2pmY5GiA" raisedException="_CS5ekM1tEeO5Ep2pmY5GiA">
                    <ownedComment xmi:id="_Cd08P81tEeO5Ep2pmY5GiA">
                      <body>searches for the file and line, where the violation occured&#xD;
	 * &#xD;
	 * @param xpathExpression&#xD;
	 *            the expression, through which the file and line should be&#xD;
	 *            identified&#xD;
	 * @param validationResult&#xD;
	 *            for getting all checked files&#xD;
	 * @param namespaceTable&#xD;
	 *            to identify the file, where the violation occured&#xD;
	 * @return string array with filename, line and xpath expression to find the&#xD;
	 *         element&#xD;
	 * @throws BpmnValidationException&#xD;
	 *             if no element can be found</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_CcNLnM1tEeO5Ep2pmY5GiA" name="xpathExpression">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_CcNLnc1tEeO5Ep2pmY5GiA" name="validationResult" type="_CRkB0M1tEeO5Ep2pmY5GiA"/>
                    <ownedParameter xmi:id="_CcNLns1tEeO5Ep2pmY5GiA" name="namespaceTable" type="_CZOwEs1tEeO5Ep2pmY5GiA"/>
                    <ownedParameter xmi:id="_CcNLn81tEeO5Ep2pmY5GiA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CcNLoM1tEeO5Ep2pmY5GiA" value="*"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_CcNLo81tEeO5Ep2pmY5GiA" name="checkConstraint001" visibility="private" method="_Cdioas1tEeO5Ep2pmY5GiA">
                    <ownedComment xmi:id="_Cd08QM1tEeO5Ep2pmY5GiA">
                      <body>checks, if there are violations of the EXT.001 constraint&#xD;
	 * &#xD;
	 * @param headFile&#xD;
	 *            the file which should be checked&#xD;
	 * @param folder&#xD;
	 *            the parent folder of the file&#xD;
	 * @param validationResult&#xD;
	 *            the current validation result of validating process for adding&#xD;
	 *            found violations</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_CcNLpM1tEeO5Ep2pmY5GiA" name="headFile" type="_CZtRMs1tEeO5Ep2pmY5GiA"/>
                    <ownedParameter xmi:id="_CcNLpc1tEeO5Ep2pmY5GiA" name="folder" type="_CZtRMs1tEeO5Ep2pmY5GiA"/>
                    <ownedParameter xmi:id="_CcNLps1tEeO5Ep2pmY5GiA" name="validationResult" type="_CRkB0M1tEeO5Ep2pmY5GiA"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_CcTSMM1tEeO5Ep2pmY5GiA" name="checkConstraint002" visibility="private" method="_Cdiobs1tEeO5Ep2pmY5GiA" raisedException="_CaFrtc1tEeO5Ep2pmY5GiA">
                    <ownedComment xmi:id="_Cd08Qc1tEeO5Ep2pmY5GiA">
                      <body>checks, if there are violations of the EXT.002 constraint&#xD;
	 * &#xD;
	 * @param headFile&#xD;
	 *            the file which should be checked&#xD;
	 * @param folder&#xD;
	 *            the parent folder of the file&#xD;
	 * @param validationResult&#xD;
	 *            the current validation result of validating process for adding&#xD;
	 *            found violations&#xD;
	 * @throws XPathExpressionException&#xD;
	 *             if there's an invalid xpath expression used</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_CcTSMc1tEeO5Ep2pmY5GiA" name="headFile" type="_CZtRMs1tEeO5Ep2pmY5GiA"/>
                    <ownedParameter xmi:id="_CcTSMs1tEeO5Ep2pmY5GiA" name="folder" type="_CZtRMs1tEeO5Ep2pmY5GiA"/>
                    <ownedParameter xmi:id="_CcTSM81tEeO5Ep2pmY5GiA" name="validationResult" type="_CRkB0M1tEeO5Ep2pmY5GiA"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_CcTSNM1tEeO5Ep2pmY5GiA" name="searchForImports" visibility="private" method="_Cdiocs1tEeO5Ep2pmY5GiA">
                    <ownedComment xmi:id="_Cd08Qs1tEeO5Ep2pmY5GiA">
                      <body>searches for all existing files, which are imported in the given file and&#xD;
	 * their imports and so on&#xD;
	 * &#xD;
	 * @param file&#xD;
	 *            where the imports are searched&#xD;
	 * @param folder&#xD;
	 *            parent folder of file&#xD;
	 * @param validationResult&#xD;
	 *            to add all imported files to the checked file list&#xD;
	 * @return List&lt;File> including all imported files in file</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_CcTSNc1tEeO5Ep2pmY5GiA" name="file" type="_CZtRMs1tEeO5Ep2pmY5GiA"/>
                    <ownedParameter xmi:id="_CcTSNs1tEeO5Ep2pmY5GiA" name="folder" type="_CZtRMs1tEeO5Ep2pmY5GiA"/>
                    <ownedParameter xmi:id="_CcTSN81tEeO5Ep2pmY5GiA" name="validationResult" type="_CRkB0M1tEeO5Ep2pmY5GiA"/>
                    <ownedParameter xmi:id="_CcTSOM1tEeO5Ep2pmY5GiA" type="_CZtRMs1tEeO5Ep2pmY5GiA" isOrdered="true" direction="return">
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CcTSOc1tEeO5Ep2pmY5GiA" value="*"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_CcTSOs1tEeO5Ep2pmY5GiA" name="checkNamespacesAndIdDuplicates" visibility="private" method="_CdioeM1tEeO5Ep2pmY5GiA" raisedException="_CaFrtc1tEeO5Ep2pmY5GiA">
                    <ownedComment xmi:id="_Cd08Q81tEeO5Ep2pmY5GiA">
                      <body>checks, if there are namespace and id duplicates in these two checked&#xD;
	 * files&#xD;
	 * &#xD;
	 * @param file1&#xD;
	 *            first file to check&#xD;
	 * @param file2&#xD;
	 *            second file to check&#xD;
	 * @param document1&#xD;
	 *            parsed file1&#xD;
	 * @param document2&#xD;
	 *            parsed file2&#xD;
	 * @param validationResult&#xD;
	 *            for adding violations to the current validation result&#xD;
	 * @throws XPathExpressionException&#xD;
	 *             if there are invalid xpath expressions</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_CcTSO81tEeO5Ep2pmY5GiA" name="file1" type="_CZtRMs1tEeO5Ep2pmY5GiA"/>
                    <ownedParameter xmi:id="_CcTSPM1tEeO5Ep2pmY5GiA" name="file2" type="_CZtRMs1tEeO5Ep2pmY5GiA"/>
                    <ownedParameter xmi:id="_CcTSPc1tEeO5Ep2pmY5GiA" name="document1" type="_CZ5efs1tEeO5Ep2pmY5GiA"/>
                    <ownedParameter xmi:id="_CcTSPs1tEeO5Ep2pmY5GiA" name="document2" type="_CZ5efs1tEeO5Ep2pmY5GiA"/>
                    <ownedParameter xmi:id="_CcTSP81tEeO5Ep2pmY5GiA" name="validationResult" type="_CRkB0M1tEeO5Ep2pmY5GiA"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_CVxzcM1tEeO5Ep2pmY5GiA" clientDependency="_CcTSQM1tEeO5Ep2pmY5GiA" name="Input">
                  <ownedComment xmi:id="_Cd08Rc1tEeO5Ep2pmY5GiA">
                    <body>Customized LSInput in order to provide access to an resolved resource.&#xD;
&#xD;
Needed for &lt;xs:include>-resolution when generating a {@link javax.xml.validation.Schema} when using&#xD;
getClass().getResourceAsStream(&quot;path/to/file.xsd&quot;)&#xD;
&#xD;
@author Matthias Geiger&#xD;
@version 1.0&#xD;
@see LSInput&#xD;
@see LSResourceResolver&#xD;
@see ResourceResolver</body>
                  </ownedComment>
                  <ownedAttribute xmi:id="_CdKN0M1tEeO5Ep2pmY5GiA" name="publicId">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_CdKN2s1tEeO5Ep2pmY5GiA" name="systemId">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_CdQUcs1tEeO5Ep2pmY5GiA" name="inputStream" type="_Ca8nUM1tEeO5Ep2pmY5GiA" association="_Cd08Rs1tEeO5Ep2pmY5GiA"/>
                  <interfaceRealization xmi:id="_CcTSQM1tEeO5Ep2pmY5GiA" client="_CVxzcM1tEeO5Ep2pmY5GiA" supplier="_CaX_kc1tEeO5Ep2pmY5GiA" contract="_CaX_kc1tEeO5Ep2pmY5GiA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cdou-M1tEeO5Ep2pmY5GiA" name="Input" specification="_CcTSQc1tEeO5Ep2pmY5GiA">
                    <ownedParameter xmi:id="_Cdou-c1tEeO5Ep2pmY5GiA" name="publicId">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_Cdou-s1tEeO5Ep2pmY5GiA" name="sysId">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_Cdou-81tEeO5Ep2pmY5GiA" name="input" type="_CaR49M1tEeO5Ep2pmY5GiA"/>
                    <ownedParameter xmi:id="_Cdou_M1tEeO5Ep2pmY5GiA" type="_CVxzcM1tEeO5Ep2pmY5GiA" direction="return"/>
                    <language>java</language>
                    <body>this.publicId = publicId;&#xD;
		this.systemId = sysId;&#xD;
		this.inputStream = new BufferedInputStream(input);&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cdou_c1tEeO5Ep2pmY5GiA" name="getBaseURI" specification="_CV36EM1tEeO5Ep2pmY5GiA">
                    <ownedParameter xmi:id="_Cdou_s1tEeO5Ep2pmY5GiA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return null;&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cdou_81tEeO5Ep2pmY5GiA" name="getByteStream" specification="_CV36Fc1tEeO5Ep2pmY5GiA">
                    <ownedParameter xmi:id="_CdovAM1tEeO5Ep2pmY5GiA" type="_CaR49M1tEeO5Ep2pmY5GiA" direction="return"/>
                    <language>java</language>
                    <body>return null;&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdovAc1tEeO5Ep2pmY5GiA" name="getCertifiedText" specification="_CV-Ass1tEeO5Ep2pmY5GiA">
                    <ownedParameter xmi:id="_CdovAs1tEeO5Ep2pmY5GiA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return false;&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdovA81tEeO5Ep2pmY5GiA" name="getCharacterStream" specification="_CV-At81tEeO5Ep2pmY5GiA">
                    <ownedParameter xmi:id="_CdovBM1tEeO5Ep2pmY5GiA" type="_CbCt8M1tEeO5Ep2pmY5GiA" direction="return"/>
                    <language>java</language>
                    <body>return null;&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdovBc1tEeO5Ep2pmY5GiA" name="getEncoding" specification="_CV-Au81tEeO5Ep2pmY5GiA">
                    <ownedParameter xmi:id="_CdovBs1tEeO5Ep2pmY5GiA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>return null;&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdovB81tEeO5Ep2pmY5GiA" name="getStringData" specification="_CWEHU81tEeO5Ep2pmY5GiA">
                    <ownedParameter xmi:id="_CdovCM1tEeO5Ep2pmY5GiA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>synchronized (inputStream) {&#xD;
			try {&#xD;
				byte[] input = new byte[inputStream.available()];&#xD;
				inputStream.read(input);&#xD;
				return new String(input);&#xD;
			} catch (IOException e) {&#xD;
				e.printStackTrace();&#xD;
				System.out.println(&quot;Exception &quot; + e);&#xD;
				return null;&#xD;
			}&#xD;
		}&#xD;
	</body>
                  </ownedBehavior>
                  <ownedOperation xmi:id="_CV36EM1tEeO5Ep2pmY5GiA" name="getBaseURI" method="_Cdou_c1tEeO5Ep2pmY5GiA">
                    <ownedParameter xmi:id="_CV36Ec1tEeO5Ep2pmY5GiA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_CV36Fc1tEeO5Ep2pmY5GiA" name="getByteStream" method="_Cdou_81tEeO5Ep2pmY5GiA">
                    <ownedParameter xmi:id="_CcZY1M1tEeO5Ep2pmY5GiA" type="_CaR49M1tEeO5Ep2pmY5GiA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_CV-Ass1tEeO5Ep2pmY5GiA" name="getCertifiedText" method="_CdovAc1tEeO5Ep2pmY5GiA">
                    <ownedParameter xmi:id="_CV-As81tEeO5Ep2pmY5GiA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_CV-At81tEeO5Ep2pmY5GiA" name="getCharacterStream" method="_CdovA81tEeO5Ep2pmY5GiA">
                    <ownedParameter xmi:id="_CcZY1c1tEeO5Ep2pmY5GiA" type="_CbCt8M1tEeO5Ep2pmY5GiA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_CV-Au81tEeO5Ep2pmY5GiA" name="getEncoding" method="_CdovBc1tEeO5Ep2pmY5GiA">
                    <ownedParameter xmi:id="_CV-AvM1tEeO5Ep2pmY5GiA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_CWEHU81tEeO5Ep2pmY5GiA" name="getStringData" method="_CdovB81tEeO5Ep2pmY5GiA">
                    <ownedParameter xmi:id="_CWEHVM1tEeO5Ep2pmY5GiA" direction="return">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_CWEHWM1tEeO5Ep2pmY5GiA" name="setBaseURI">
                    <ownedParameter xmi:id="_CWEHWc1tEeO5Ep2pmY5GiA" name="baseURI">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_CWKN8s1tEeO5Ep2pmY5GiA" name="setCertifiedText">
                    <ownedParameter xmi:id="_CWKN881tEeO5Ep2pmY5GiA" name="certifiedText">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#boolean"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_CWQUkM1tEeO5Ep2pmY5GiA" name="setEncoding">
                    <ownedParameter xmi:id="_CWQUkc1tEeO5Ep2pmY5GiA" name="encoding">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_CWQUlc1tEeO5Ep2pmY5GiA" name="setStringData">
                    <ownedParameter xmi:id="_CWQUls1tEeO5Ep2pmY5GiA" name="stringData">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_CcTSQc1tEeO5Ep2pmY5GiA" name="Input" method="_Cdou-M1tEeO5Ep2pmY5GiA">
                    <eAnnotations xmi:id="_CcZY0c1tEeO5Ep2pmY5GiA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_CcZY0s1tEeO5Ep2pmY5GiA" key="create"/>
                    </eAnnotations>
                    <ownedComment xmi:id="_Cd08SM1tEeO5Ep2pmY5GiA">
                      <body>Constructor to generate a customized input source Input using an InputStream&#xD;
	 * @param publicId&#xD;
	 * @param sysId&#xD;
	 * @param input</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_CcTSQs1tEeO5Ep2pmY5GiA" name="publicId">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_CcTSQ81tEeO5Ep2pmY5GiA" name="sysId">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_CcZY0M1tEeO5Ep2pmY5GiA" name="input" type="_CaR49M1tEeO5Ep2pmY5GiA"/>
                    <ownedParameter xmi:id="_CcZY081tEeO5Ep2pmY5GiA" type="_CVxzcM1tEeO5Ep2pmY5GiA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_CcZY1s1tEeO5Ep2pmY5GiA" name="setByteStream">
                    <ownedParameter xmi:id="_CcZY181tEeO5Ep2pmY5GiA" name="byteStream" type="_CaR49M1tEeO5Ep2pmY5GiA"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_CcZY281tEeO5Ep2pmY5GiA" name="setCharacterStream">
                    <ownedParameter xmi:id="_CcZY3M1tEeO5Ep2pmY5GiA" name="characterStream" type="_CbCt8M1tEeO5Ep2pmY5GiA"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Association" xmi:id="_Cd08Rs1tEeO5Ep2pmY5GiA" name="" memberEnd="_CdQUcs1tEeO5Ep2pmY5GiA _Cd08R81tEeO5Ep2pmY5GiA">
                  <ownedEnd xmi:id="_Cd08R81tEeO5Ep2pmY5GiA" name="" type="_CVxzcM1tEeO5Ep2pmY5GiA" association="_Cd08Rs1tEeO5Ep2pmY5GiA"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Association" xmi:id="_CeNWvc1tEeO5Ep2pmY5GiA" name="" memberEnd="_CeNWvs1tEeO5Ep2pmY5GiA _Cc35981tEeO5Ep2pmY5GiA">
                  <ownedEnd xmi:id="_CeNWvs1tEeO5Ep2pmY5GiA" name="" type="_CUWQEs1tEeO5Ep2pmY5GiA" association="_CeNWvc1tEeO5Ep2pmY5GiA"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Association" xmi:id="_CeNWwM1tEeO5Ep2pmY5GiA" name="" memberEnd="_CeNWwc1tEeO5Ep2pmY5GiA _Cc35-c1tEeO5Ep2pmY5GiA">
                  <ownedEnd xmi:id="_CeNWwc1tEeO5Ep2pmY5GiA" name="" type="_CUWQEs1tEeO5Ep2pmY5GiA" association="_CeNWwM1tEeO5Ep2pmY5GiA"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Association" xmi:id="_CeNWw81tEeO5Ep2pmY5GiA" name="" memberEnd="_CeNWxM1tEeO5Ep2pmY5GiA _Cc35-81tEeO5Ep2pmY5GiA">
                  <ownedEnd xmi:id="_CeNWxM1tEeO5Ep2pmY5GiA" name="" type="_CUWQEs1tEeO5Ep2pmY5GiA" association="_CeNWw81tEeO5Ep2pmY5GiA"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Association" xmi:id="_CeNWxs1tEeO5Ep2pmY5GiA" name="" memberEnd="_CeNWx81tEeO5Ep2pmY5GiA _Cc35_c1tEeO5Ep2pmY5GiA">
                  <ownedEnd xmi:id="_CeNWx81tEeO5Ep2pmY5GiA" name="" type="_CUoj8M1tEeO5Ep2pmY5GiA" association="_CeNWxs1tEeO5Ep2pmY5GiA"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Association" xmi:id="_CeTdUc1tEeO5Ep2pmY5GiA" name="" memberEnd="_CeTdUs1tEeO5Ep2pmY5GiA _Cc-Akc1tEeO5Ep2pmY5GiA">
                  <ownedEnd xmi:id="_CeTdUs1tEeO5Ep2pmY5GiA" name="" type="_CUoj8M1tEeO5Ep2pmY5GiA" association="_CeTdUc1tEeO5Ep2pmY5GiA"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Association" xmi:id="_CeTdVM1tEeO5Ep2pmY5GiA" name="" memberEnd="_CeTdVc1tEeO5Ep2pmY5GiA _Cc-Ak81tEeO5Ep2pmY5GiA">
                  <ownedEnd xmi:id="_CeTdVc1tEeO5Ep2pmY5GiA" name="" type="_CUoj8M1tEeO5Ep2pmY5GiA" association="_CeTdVM1tEeO5Ep2pmY5GiA"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Association" xmi:id="_CeTdV81tEeO5Ep2pmY5GiA" name="" memberEnd="_CeTdWM1tEeO5Ep2pmY5GiA _Cc-Alc1tEeO5Ep2pmY5GiA">
                  <ownedEnd xmi:id="_CeTdWM1tEeO5Ep2pmY5GiA" name="" type="_CUuqkM1tEeO5Ep2pmY5GiA" association="_CeTdV81tEeO5Ep2pmY5GiA"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Association" xmi:id="_CeTdWs1tEeO5Ep2pmY5GiA" name="" memberEnd="_CeTdW81tEeO5Ep2pmY5GiA _Cc-Amc1tEeO5Ep2pmY5GiA">
                  <ownedEnd xmi:id="_CeTdW81tEeO5Ep2pmY5GiA" name="" type="_CVA-cM1tEeO5Ep2pmY5GiA" association="_CeTdWs1tEeO5Ep2pmY5GiA"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Association" xmi:id="_CeTdXc1tEeO5Ep2pmY5GiA" name="" memberEnd="_CeTdXs1tEeO5Ep2pmY5GiA _Cc-Am81tEeO5Ep2pmY5GiA">
                  <ownedEnd xmi:id="_CeTdXs1tEeO5Ep2pmY5GiA" name="" type="_CVA-cM1tEeO5Ep2pmY5GiA" association="_CeTdXc1tEeO5Ep2pmY5GiA"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Association" xmi:id="_CeTdYM1tEeO5Ep2pmY5GiA" name="" memberEnd="_CeTdYc1tEeO5Ep2pmY5GiA _Cc-Anc1tEeO5Ep2pmY5GiA">
                  <ownedEnd xmi:id="_CeTdYc1tEeO5Ep2pmY5GiA" name="" type="_CVA-cM1tEeO5Ep2pmY5GiA" association="_CeTdYM1tEeO5Ep2pmY5GiA"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Association" xmi:id="_CeTdY81tEeO5Ep2pmY5GiA" name="" memberEnd="_CeTdZM1tEeO5Ep2pmY5GiA _CdEHMM1tEeO5Ep2pmY5GiA">
                  <ownedEnd xmi:id="_CeTdZM1tEeO5Ep2pmY5GiA" name="" type="_CVA-cM1tEeO5Ep2pmY5GiA" association="_CeTdY81tEeO5Ep2pmY5GiA"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Association" xmi:id="_CeTdZs1tEeO5Ep2pmY5GiA" name="" memberEnd="_CeTdZ81tEeO5Ep2pmY5GiA _CdEHMs1tEeO5Ep2pmY5GiA">
                  <ownedEnd xmi:id="_CeTdZ81tEeO5Ep2pmY5GiA" name="" type="_CVA-cM1tEeO5Ep2pmY5GiA" association="_CeTdZs1tEeO5Ep2pmY5GiA"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Association" xmi:id="_CeTdac1tEeO5Ep2pmY5GiA" name="" memberEnd="_CeTdas1tEeO5Ep2pmY5GiA _CdEHNM1tEeO5Ep2pmY5GiA">
                  <ownedEnd xmi:id="_CeTdas1tEeO5Ep2pmY5GiA" name="" type="_CVA-cM1tEeO5Ep2pmY5GiA" association="_CeTdac1tEeO5Ep2pmY5GiA"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Association" xmi:id="_CeZj8c1tEeO5Ep2pmY5GiA" name="" memberEnd="_CeZj8s1tEeO5Ep2pmY5GiA _CdEHNs1tEeO5Ep2pmY5GiA">
                  <ownedEnd xmi:id="_CeZj8s1tEeO5Ep2pmY5GiA" name="" type="_CVA-cM1tEeO5Ep2pmY5GiA" association="_CeZj8c1tEeO5Ep2pmY5GiA"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Association" xmi:id="_CeZj9M1tEeO5Ep2pmY5GiA" name="" memberEnd="_CeZj9c1tEeO5Ep2pmY5GiA _CdEHOM1tEeO5Ep2pmY5GiA">
                  <ownedEnd xmi:id="_CeZj9c1tEeO5Ep2pmY5GiA" name="" type="_CVA-cM1tEeO5Ep2pmY5GiA" association="_CeZj9M1tEeO5Ep2pmY5GiA"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Association" xmi:id="_CeZj981tEeO5Ep2pmY5GiA" name="" memberEnd="_CeZj-M1tEeO5Ep2pmY5GiA _CdEHOs1tEeO5Ep2pmY5GiA">
                  <ownedEnd xmi:id="_CeZj-M1tEeO5Ep2pmY5GiA" name="" type="_CVA-cM1tEeO5Ep2pmY5GiA" association="_CeZj981tEeO5Ep2pmY5GiA"/>
                </packagedElement>
              </packagedElement>
              <packagedElement xmi:type="uml:Package" xmi:id="_CJCX-c1tEeO5Ep2pmY5GiA" name="xml">
                <packagedElement xmi:type="uml:Class" xmi:id="_CUD8MM1tEeO5Ep2pmY5GiA" name="XmlWriter">
                  <ownedComment xmi:id="_Cd08NM1tEeO5Ep2pmY5GiA">
                    <body>This class is used for writing xml files via jaxb&#xD;
&#xD;
@author Philipp Neugebauer&#xD;
@version 1.0&#xD;
 *</body>
                  </ownedComment>
                  <ownedAttribute xmi:id="_Cc358c1tEeO5Ep2pmY5GiA" name="context" visibility="private" type="_CaR48M1tEeO5Ep2pmY5GiA" association="_CeNWtM1tEeO5Ep2pmY5GiA"/>
                  <ownedAttribute xmi:id="_Cc35881tEeO5Ep2pmY5GiA" name="marshaller" visibility="private" type="_CaR48s1tEeO5Ep2pmY5GiA" association="_CeNWt81tEeO5Ep2pmY5GiA"/>
                  <ownedAttribute xmi:id="_Cc359c1tEeO5Ep2pmY5GiA" name="logger" visibility="private" type="_CaFrw81tEeO5Ep2pmY5GiA" association="_CeNWus1tEeO5Ep2pmY5GiA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cdch0M1tEeO5Ep2pmY5GiA" name="XmlWriter" specification="_CUG_gM1tEeO5Ep2pmY5GiA">
                    <ownedParameter xmi:id="_Cdch0c1tEeO5Ep2pmY5GiA" type="_CUD8MM1tEeO5Ep2pmY5GiA" direction="return"/>
                    <language>java</language>
                    <body>logger = (Logger) LoggerFactory.getLogger(&quot;BpmnValidator&quot;);&#xD;
		try {&#xD;
			context = JAXBContext.newInstance(ValidationResult.class);&#xD;
			marshaller = context.createMarshaller();&#xD;
			marshaller.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, true);&#xD;
		} catch (JAXBException e) {&#xD;
			logger.error(&quot;jaxb writer initialization failed: {}&quot;, e.getCause());&#xD;
		}&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cdch0s1tEeO5Ep2pmY5GiA" name="writeResult" specification="_Cb3NUM1tEeO5Ep2pmY5GiA">
                    <ownedParameter xmi:id="_Cdch081tEeO5Ep2pmY5GiA" name="result" type="_CRkB0M1tEeO5Ep2pmY5GiA"/>
                    <ownedParameter xmi:id="_Cdch1M1tEeO5Ep2pmY5GiA" name="file" type="_CZtRMs1tEeO5Ep2pmY5GiA"/>
                    <language>java</language>
                    <body>marshaller.marshal(result, file);&#xD;
	</body>
                  </ownedBehavior>
                  <ownedOperation xmi:id="_CUG_gM1tEeO5Ep2pmY5GiA" name="XmlWriter" method="_Cdch0M1tEeO5Ep2pmY5GiA">
                    <eAnnotations xmi:id="_CUG_gc1tEeO5Ep2pmY5GiA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_CUG_gs1tEeO5Ep2pmY5GiA" key="create"/>
                    </eAnnotations>
                    <ownedParameter xmi:id="_CUHmkM1tEeO5Ep2pmY5GiA" type="_CUD8MM1tEeO5Ep2pmY5GiA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_Cb3NUM1tEeO5Ep2pmY5GiA" name="writeResult" method="_Cdch0s1tEeO5Ep2pmY5GiA" raisedException="_CZzX081tEeO5Ep2pmY5GiA">
                    <ownedComment xmi:id="_Cd08Nc1tEeO5Ep2pmY5GiA">
                      <body>writes the result to the given file&#xD;
	 * &#xD;
	 * @param result&#xD;
	 *            the validation result, which should be writen to a file&#xD;
	 * @param file&#xD;
	 *            the file, where the validation result should be written to&#xD;
	 * @throws JAXBException&#xD;
	 *             if an error occurs during xml writing process</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_Cb3NUc1tEeO5Ep2pmY5GiA" name="result" type="_CRkB0M1tEeO5Ep2pmY5GiA"/>
                    <ownedParameter xmi:id="_Cb30YM1tEeO5Ep2pmY5GiA" name="file" type="_CZtRMs1tEeO5Ep2pmY5GiA"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Association" xmi:id="_CeNWtM1tEeO5Ep2pmY5GiA" name="" memberEnd="_CeNWtc1tEeO5Ep2pmY5GiA _Cc358c1tEeO5Ep2pmY5GiA">
                  <ownedEnd xmi:id="_CeNWtc1tEeO5Ep2pmY5GiA" name="" type="_CUD8MM1tEeO5Ep2pmY5GiA" association="_CeNWtM1tEeO5Ep2pmY5GiA"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Association" xmi:id="_CeNWt81tEeO5Ep2pmY5GiA" name="" memberEnd="_CeNWuM1tEeO5Ep2pmY5GiA _Cc35881tEeO5Ep2pmY5GiA">
                  <ownedEnd xmi:id="_CeNWuM1tEeO5Ep2pmY5GiA" name="" type="_CUD8MM1tEeO5Ep2pmY5GiA" association="_CeNWt81tEeO5Ep2pmY5GiA"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Association" xmi:id="_CeNWus1tEeO5Ep2pmY5GiA" name="" memberEnd="_CeNWu81tEeO5Ep2pmY5GiA _Cc359c1tEeO5Ep2pmY5GiA">
                  <ownedEnd xmi:id="_CeNWu81tEeO5Ep2pmY5GiA" name="" type="_CUD8MM1tEeO5Ep2pmY5GiA" association="_CeNWus1tEeO5Ep2pmY5GiA"/>
                </packagedElement>
              </packagedElement>
              <packagedElement xmi:type="uml:Package" xmi:id="_CJIekM1tEeO5Ep2pmY5GiA" name="api">
                <packagedElement xmi:type="uml:Class" xmi:id="_CSnKsM1tEeO5Ep2pmY5GiA" name="BpmnValidatorFactory">
                  <ownedComment xmi:id="_Cdu1sM1tEeO5Ep2pmY5GiA">
                    <body>The class is used as api interface to get an instance of the bpmn validator
to have the chance for validating files from another project

@author Philipp Neugebauer
@version 1.0</body>
                  </ownedComment>
                  <ownedAttribute xmi:id="_CcrstM1tEeO5Ep2pmY5GiA" name="bpmnValidator" visibility="private" isStatic="true" type="_CT2g0M1tEeO5Ep2pmY5GiA" association="_CeBJc81tEeO5Ep2pmY5GiA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdWbKc1tEeO5Ep2pmY5GiA" name="_initializer1" specification="_CSnKsc1tEeO5Ep2pmY5GiA">
                    <language>java</language>
                    <body>bpmnValidator = new SchematronBPMNValidator();
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdWbKs1tEeO5Ep2pmY5GiA" name="getValidatorInstance" specification="_CSnKtc1tEeO5Ep2pmY5GiA">
                    <ownedParameter xmi:id="_CdWbK81tEeO5Ep2pmY5GiA" type="_CT2g0M1tEeO5Ep2pmY5GiA" direction="return"/>
                    <language>java</language>
                    <body>return bpmnValidator;
	</body>
                  </ownedBehavior>
                  <ownedOperation xmi:id="_CSnKsc1tEeO5Ep2pmY5GiA" name="_initializer1" isStatic="true" method="_CdWbKc1tEeO5Ep2pmY5GiA">
                    <eAnnotations xmi:id="_CSnKss1tEeO5Ep2pmY5GiA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_CSnKs81tEeO5Ep2pmY5GiA" key="init"/>
                    </eAnnotations>
                  </ownedOperation>
                  <ownedOperation xmi:id="_CSnKtc1tEeO5Ep2pmY5GiA" name="getValidatorInstance" isStatic="true" method="_CdWbKs1tEeO5Ep2pmY5GiA">
                    <ownedComment xmi:id="_Cdu1sc1tEeO5Ep2pmY5GiA">
                      <body>
	 * @return the instance of the bpmn validator</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_CZzX181tEeO5Ep2pmY5GiA" type="_CT2g0M1tEeO5Ep2pmY5GiA" direction="return"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Association" xmi:id="_CeBJc81tEeO5Ep2pmY5GiA" name="" memberEnd="_CeBJdM1tEeO5Ep2pmY5GiA _CcrstM1tEeO5Ep2pmY5GiA">
                  <ownedEnd xmi:id="_CeBJdM1tEeO5Ep2pmY5GiA" name="" type="_CSnKsM1tEeO5Ep2pmY5GiA" association="_CeBJc81tEeO5Ep2pmY5GiA"/>
                </packagedElement>
              </packagedElement>
              <packagedElement xmi:type="uml:Package" xmi:id="_CJg5EM1tEeO5Ep2pmY5GiA" name="preprocessing">
                <packagedElement xmi:type="uml:Class" xmi:id="_CTFr0M1tEeO5Ep2pmY5GiA" name="ImportedFile">
                  <ownedComment xmi:id="_Cdu1t81tEeO5Ep2pmY5GiA">
                    <body>Just a helper class for avoiding the usage of object arrays and making the
code better readable. Is returned as result from
preprocessor.selectImportedFiles()

@author Philipp Neugebauer
@version 1.0
 *</body>
                  </ownedComment>
                  <ownedAttribute xmi:id="_CcrsvM1tEeO5Ep2pmY5GiA" name="file" type="_CZtRMs1tEeO5Ep2pmY5GiA" association="_Cdu1uM1tEeO5Ep2pmY5GiA"/>
                  <ownedAttribute xmi:id="_Ccrsvc1tEeO5Ep2pmY5GiA" name="prefix">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedAttribute>
                  <ownedAttribute xmi:id="_Ccrsvs1tEeO5Ep2pmY5GiA" name="namespace">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                  </ownedAttribute>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cdchss1tEeO5Ep2pmY5GiA" name="ImportedFile" specification="_CbkSYM1tEeO5Ep2pmY5GiA">
                    <ownedParameter xmi:id="_Cdchs81tEeO5Ep2pmY5GiA" name="file" type="_CZtRMs1tEeO5Ep2pmY5GiA"/>
                    <ownedParameter xmi:id="_CdchtM1tEeO5Ep2pmY5GiA" name="prefix">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_Cdchtc1tEeO5Ep2pmY5GiA" name="namespace">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_Cdchts1tEeO5Ep2pmY5GiA" type="_CTFr0M1tEeO5Ep2pmY5GiA" direction="return"/>
                    <language>java</language>
                    <body>this.file = file;
		this.prefix = prefix;
		this.namespace = namespace;
	</body>
                  </ownedBehavior>
                  <ownedOperation xmi:id="_CTLycM1tEeO5Ep2pmY5GiA" name="ImportedFile">
                    <eAnnotations xmi:id="_CTLycc1tEeO5Ep2pmY5GiA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_CTLycs1tEeO5Ep2pmY5GiA" key="create"/>
                    </eAnnotations>
                    <ownedParameter xmi:id="_CTLydM1tEeO5Ep2pmY5GiA" type="_CTFr0M1tEeO5Ep2pmY5GiA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_CbkSYM1tEeO5Ep2pmY5GiA" name="ImportedFile" method="_Cdchss1tEeO5Ep2pmY5GiA">
                    <eAnnotations xmi:id="_Cbk5cM1tEeO5Ep2pmY5GiA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_Cbk5cc1tEeO5Ep2pmY5GiA" key="create"/>
                    </eAnnotations>
                    <ownedParameter xmi:id="_CbkSYc1tEeO5Ep2pmY5GiA" name="file" type="_CZtRMs1tEeO5Ep2pmY5GiA"/>
                    <ownedParameter xmi:id="_CbkSYs1tEeO5Ep2pmY5GiA" name="prefix">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_CbkSY81tEeO5Ep2pmY5GiA" name="namespace">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_Cbk5cs1tEeO5Ep2pmY5GiA" type="_CTFr0M1tEeO5Ep2pmY5GiA" direction="return"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_CTR5EM1tEeO5Ep2pmY5GiA" name="PreProcessResult">
                  <ownedComment xmi:id="_Cdu1us1tEeO5Ep2pmY5GiA">
                    <body>Just a helper class for avoiding the usage of object arrays and making the
code better readable. Is returned as result from preprocessor.preprocess()

@author Philipp Neugebauer
@version 1.0
 *</body>
                  </ownedComment>
                  <ownedAttribute xmi:id="_CcxzUM1tEeO5Ep2pmY5GiA" name="documentResult" type="_CZ5efs1tEeO5Ep2pmY5GiA" association="_Cdu1u81tEeO5Ep2pmY5GiA"/>
                  <ownedAttribute xmi:id="_CcxzUc1tEeO5Ep2pmY5GiA" name="namespaceTable" type="_CZOwEs1tEeO5Ep2pmY5GiA" association="_CeHQFs1tEeO5Ep2pmY5GiA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cdcht81tEeO5Ep2pmY5GiA" name="PreProcessResult" specification="_CbmuoM1tEeO5Ep2pmY5GiA">
                    <ownedParameter xmi:id="_CdchuM1tEeO5Ep2pmY5GiA" name="documentResult" type="_CZ5efs1tEeO5Ep2pmY5GiA"/>
                    <ownedParameter xmi:id="_Cdchuc1tEeO5Ep2pmY5GiA" name="namespaceTable" type="_CZOwEs1tEeO5Ep2pmY5GiA"/>
                    <ownedParameter xmi:id="_Cdchus1tEeO5Ep2pmY5GiA" type="_CTR5EM1tEeO5Ep2pmY5GiA" direction="return"/>
                    <language>java</language>
                    <body>this.documentResult = documentResult;
		this.namespaceTable = namespaceTable;
	</body>
                  </ownedBehavior>
                  <ownedOperation xmi:id="_CbmuoM1tEeO5Ep2pmY5GiA" name="PreProcessResult" method="_Cdcht81tEeO5Ep2pmY5GiA">
                    <eAnnotations xmi:id="_CbnVsM1tEeO5Ep2pmY5GiA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_CbnVsc1tEeO5Ep2pmY5GiA" key="create"/>
                    </eAnnotations>
                    <ownedParameter xmi:id="_Cbmuoc1tEeO5Ep2pmY5GiA" name="documentResult" type="_CZ5efs1tEeO5Ep2pmY5GiA"/>
                    <ownedParameter xmi:id="_Cbmuos1tEeO5Ep2pmY5GiA" name="namespaceTable" type="_CZOwEs1tEeO5Ep2pmY5GiA"/>
                    <ownedParameter xmi:id="_CbnVss1tEeO5Ep2pmY5GiA" type="_CTR5EM1tEeO5Ep2pmY5GiA" direction="return"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Class" xmi:id="_CTeGUM1tEeO5Ep2pmY5GiA" name="PreProcessor">
                  <ownedComment xmi:id="_Cdu1vc1tEeO5Ep2pmY5GiA">
                    <body>Does the preprocessing step for creating only one document contenting&#xD;
everything and a namespace table&#xD;
&#xD;
@author Philipp Neugebauer&#xD;
@version 1.0&#xD;
 *</body>
                  </ownedComment>
                  <ownedAttribute xmi:id="_CcxzU81tEeO5Ep2pmY5GiA" name="documentBuilderFactory" visibility="private" type="_CZ_lFM1tEeO5Ep2pmY5GiA" association="_CeHQGc1tEeO5Ep2pmY5GiA"/>
                  <ownedAttribute xmi:id="_CcxzVc1tEeO5Ep2pmY5GiA" name="documentBuilder" visibility="private" type="_CZ_lEs1tEeO5Ep2pmY5GiA" association="_CeHQHM1tEeO5Ep2pmY5GiA"/>
                  <ownedAttribute xmi:id="_CcxzV81tEeO5Ep2pmY5GiA" name="xPathFactory" visibility="private" type="_CaFrt81tEeO5Ep2pmY5GiA" association="_CeHQH81tEeO5Ep2pmY5GiA"/>
                  <ownedAttribute xmi:id="_CcxzWc1tEeO5Ep2pmY5GiA" name="xpath" visibility="private" type="_CZ_lGM1tEeO5Ep2pmY5GiA" association="_CeHQIs1tEeO5Ep2pmY5GiA"/>
                  <ownedAttribute xmi:id="_CcxzW81tEeO5Ep2pmY5GiA" name="logger" visibility="private" type="_CaFrw81tEeO5Ep2pmY5GiA" association="_CeNWsc1tEeO5Ep2pmY5GiA"/>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cdchu81tEeO5Ep2pmY5GiA" name="_initializer1" specification="_CTeGUc1tEeO5Ep2pmY5GiA">
                    <language>java</language>
                    <body>documentBuilderFactory = DocumentBuilderFactory.newInstance();&#xD;
		documentBuilderFactory.setNamespaceAware(true);&#xD;
		try {&#xD;
			documentBuilder = documentBuilderFactory.newDocumentBuilder();&#xD;
		} catch (ParserConfigurationException e) {&#xD;
			// ignore&#xD;
		}&#xD;
		xPathFactory = XPathFactory.newInstance();&#xD;
		xpath = xPathFactory.newXPath();&#xD;
		xpath.setNamespaceContext(new BpmnNamespaceContext());&#xD;
		logger = (Logger) LoggerFactory.getLogger(&quot;BpmnValidator&quot;);&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdchvM1tEeO5Ep2pmY5GiA" name="preProcess" specification="_CbrnIM1tEeO5Ep2pmY5GiA">
                    <ownedParameter xmi:id="_Cdchvc1tEeO5Ep2pmY5GiA" name="headFileDocument" type="_CZ5efs1tEeO5Ep2pmY5GiA"/>
                    <ownedParameter xmi:id="_Cdchvs1tEeO5Ep2pmY5GiA" name="folder" type="_CZtRMs1tEeO5Ep2pmY5GiA"/>
                    <ownedParameter xmi:id="_Cdchv81tEeO5Ep2pmY5GiA" name="namespaceTable" type="_CZOwEs1tEeO5Ep2pmY5GiA"/>
                    <ownedParameter xmi:id="_CdchwM1tEeO5Ep2pmY5GiA" type="_CTR5EM1tEeO5Ep2pmY5GiA" direction="return"/>
                    <language>java</language>
                    <body>ImportedFile[] importedFiles = selectImportedFiles(headFileDocument,&#xD;
				folder, namespaceTable.size());&#xD;
		removeBPMNDINode(headFileDocument);&#xD;
		logger.info(&quot;preprocessing step started&quot;);&#xD;
&#xD;
		XPathExpression xPathChangeNamespaceIds = xpath&#xD;
				.compile(&quot;//bpmn:*/@sourceRef | //bpmn:*/@targetRef | //bpmn:*/@calledElement | //bpmn:*/@processRef | //bpmn:*/@dataStoreRef | //bpmn:*/@categoryValueRef | //bpmn:*/eventDefinitionRef&quot;);&#xD;
		NodeList foundNodesHeadFile = (NodeList) xPathChangeNamespaceIds&#xD;
				.evaluate(headFileDocument, XPathConstants.NODESET);&#xD;
&#xD;
		for (int j = 0; j &lt; foundNodesHeadFile.getLength(); j++) {&#xD;
			Node idNode = foundNodesHeadFile.item(j);&#xD;
			if (idNode.getTextContent().indexOf(&quot;:&quot;) != -1) {&#xD;
				String prefix = idNode.getTextContent().substring(0,&#xD;
						idNode.getTextContent().indexOf(&quot;:&quot;));&#xD;
				String namespace = headFileDocument.getDocumentElement()&#xD;
						.lookupNamespaceURI(prefix);&#xD;
				String newPrefix = &quot;&quot;;&#xD;
				for (ImportedFile importedFile : importedFiles) {&#xD;
					if (namespace.equals(importedFile.getNamespace())) {&#xD;
						newPrefix = importedFile.getPrefix();&#xD;
					}&#xD;
				}&#xD;
				logger.debug(&quot;new prefix will be set {}&quot;, newPrefix);&#xD;
				idNode.setTextContent(idNode.getTextContent().replace(&#xD;
						prefix + &quot;:&quot;, newPrefix + &quot;_&quot;));&#xD;
			}&#xD;
		}&#xD;
&#xD;
		for (int i = 0; i &lt; importedFiles.length; i++) {&#xD;
			if (importedFiles[i].getFile().exists()) {&#xD;
				try {&#xD;
					Document importedDocument = documentBuilder&#xD;
							.parse(importedFiles[i].getFile());&#xD;
&#xD;
					Element importDefinitionsNode = importedDocument&#xD;
							.getDocumentElement();&#xD;
					removeBPMNDINode(importedDocument);&#xD;
&#xD;
					boolean exists = false;&#xD;
					for (String[] s : namespaceTable) {&#xD;
						if (s[1].equals(importedFiles[i].getNamespace())) {&#xD;
							exists = true;&#xD;
						}&#xD;
					}&#xD;
					logger.debug(&quot;namespace of file read: {}&quot;,&#xD;
							importedFiles[i].getNamespace());&#xD;
					if (!exists) {&#xD;
						namespaceTable.add(new String[] {&#xD;
								importedFiles[i].getPrefix(),&#xD;
								importedFiles[i].getNamespace() });&#xD;
					}&#xD;
					XPathExpression xPathReplaceIds = xpath&#xD;
							.compile(&quot;//bpmn:*/@id | //bpmn:*/@sourceRef | //bpmn:*/@targetRef | //bpmn:*/@processRef | //bpmn:*/@dataStoreRef | //bpmn:*/@categoryValueRef | //bpmn:*/eventDefinitionRef | //bpmn:incoming | //bpmn:outgoing | //bpmn:dataInputRefs | //bpmn:dataOutputRefs&quot;);&#xD;
					renameIds(xPathReplaceIds, importedDocument,&#xD;
							importedFiles[i].getPrefix());&#xD;
&#xD;
					preProcess(importedDocument, folder, namespaceTable);&#xD;
&#xD;
					logger.info(&quot;integration of document will be done now&quot;);&#xD;
&#xD;
					addNodesToDocument(importDefinitionsNode, headFileDocument);&#xD;
				} catch (SAXException | IOException e) {&#xD;
					logger.error(&quot;imported file couldn't be read. Cause: {}&quot;,&#xD;
							e.getCause());&#xD;
				}&#xD;
			}&#xD;
		}&#xD;
&#xD;
		PreProcessResult result = new PreProcessResult(headFileDocument,&#xD;
				namespaceTable);&#xD;
&#xD;
		return result;&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cdchwc1tEeO5Ep2pmY5GiA" name="renameIds" specification="_CbuqcM1tEeO5Ep2pmY5GiA">
                    <ownedParameter xmi:id="_Cdchws1tEeO5Ep2pmY5GiA" name="xpathExpression" type="_CaFrs81tEeO5Ep2pmY5GiA"/>
                    <ownedParameter xmi:id="_Cdchw81tEeO5Ep2pmY5GiA" name="document" type="_CZ5efs1tEeO5Ep2pmY5GiA"/>
                    <ownedParameter xmi:id="_CdchxM1tEeO5Ep2pmY5GiA" name="namespacePrefix">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>NodeList foundNodesImportedFile = (NodeList) xpathExpression.evaluate(&#xD;
				document, XPathConstants.NODESET);&#xD;
		for (int j = 0; j &lt; foundNodesImportedFile.getLength(); j++) {&#xD;
			Node idNode = foundNodesImportedFile.item(j);&#xD;
			String newId = namespacePrefix + &quot;_&quot; + idNode.getTextContent();&#xD;
			idNode.setTextContent(newId);&#xD;
		}&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cdchxc1tEeO5Ep2pmY5GiA" name="selectImportedFiles" specification="_CbvRgM1tEeO5Ep2pmY5GiA">
                    <ownedParameter xmi:id="_Cdchxs1tEeO5Ep2pmY5GiA" name="document" type="_CZ5efs1tEeO5Ep2pmY5GiA"/>
                    <ownedParameter xmi:id="_Cdchx81tEeO5Ep2pmY5GiA" name="folder" type="_CZtRMs1tEeO5Ep2pmY5GiA"/>
                    <ownedParameter xmi:id="_CdchyM1tEeO5Ep2pmY5GiA" name="size">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_Cdchyc1tEeO5Ep2pmY5GiA" type="_CTFr0M1tEeO5Ep2pmY5GiA" direction="return">
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Cdchys1tEeO5Ep2pmY5GiA" value="*"/>
                    </ownedParameter>
                    <language>java</language>
                    <body>NodeList importedFilesList = document.getElementsByTagNameNS(&#xD;
				SchematronBPMNValidator.bpmnNamespace, &quot;import&quot;);&#xD;
		ImportedFile[] importedFiles = new ImportedFile[importedFilesList&#xD;
				.getLength()];&#xD;
&#xD;
		for (int i = 0; i &lt; importedFilesList.getLength(); i++) {&#xD;
			Node importedFileNode = importedFilesList.item(i);&#xD;
			ImportedFile importedFile = new ImportedFile();&#xD;
			File file = new File(importedFileNode.getAttributes()&#xD;
					.getNamedItem(&quot;location&quot;).getTextContent());&#xD;
			if (file.isAbsolute()) {&#xD;
				importedFile.setFile(file);&#xD;
			} else {&#xD;
				importedFile.setFile(new File(folder.getPath()&#xD;
						+ File.separator&#xD;
						+ importedFileNode.getAttributes()&#xD;
								.getNamedItem(&quot;location&quot;).getTextContent()));&#xD;
			}&#xD;
			importedFile.setPrefix(&quot;ns&quot; + (i + size));&#xD;
			importedFile.setNamespace(importedFileNode.getAttributes()&#xD;
					.getNamedItem(&quot;namespace&quot;).getTextContent());&#xD;
			importedFiles[i] = importedFile;&#xD;
		}&#xD;
&#xD;
		return importedFiles;&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cdchy81tEeO5Ep2pmY5GiA" name="addNodesToDocument" specification="_CbxGsM1tEeO5Ep2pmY5GiA">
                    <ownedParameter xmi:id="_CdchzM1tEeO5Ep2pmY5GiA" name="importDefinitionsNode" type="_CaFrvc1tEeO5Ep2pmY5GiA"/>
                    <ownedParameter xmi:id="_Cdchzc1tEeO5Ep2pmY5GiA" name="headFileDocument" type="_CZ5efs1tEeO5Ep2pmY5GiA"/>
                    <language>java</language>
                    <body>Element definitionsNode = headFileDocument.getDocumentElement();&#xD;
&#xD;
		for (int j = 0; j &lt; importDefinitionsNode.getChildNodes().getLength(); j++) {&#xD;
			Node importedNode = headFileDocument.importNode(&#xD;
					importDefinitionsNode.getChildNodes().item(j), true);&#xD;
			definitionsNode.appendChild(importedNode);&#xD;
		}&#xD;
	</body>
                  </ownedBehavior>
                  <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_Cdchzs1tEeO5Ep2pmY5GiA" name="removeBPMNDINode" specification="_CbxtwM1tEeO5Ep2pmY5GiA">
                    <ownedParameter xmi:id="_Cdchz81tEeO5Ep2pmY5GiA" name="headFileDocument" type="_CZ5efs1tEeO5Ep2pmY5GiA"/>
                    <language>java</language>
                    <body>Element definitionsNode = headFileDocument.getDocumentElement();&#xD;
		NodeList bpmnDiagramNode = headFileDocument.getElementsByTagNameNS(&#xD;
				SchematronBPMNValidator.bpmndiNamespace, &quot;BPMNDiagram&quot;);&#xD;
		if (bpmnDiagramNode.getLength() > 0) {&#xD;
			definitionsNode.removeChild(bpmnDiagramNode.item(0));&#xD;
		}&#xD;
	</body>
                  </ownedBehavior>
                  <ownedOperation xmi:id="_CTeGUc1tEeO5Ep2pmY5GiA" name="_initializer1" method="_Cdchu81tEeO5Ep2pmY5GiA">
                    <eAnnotations xmi:id="_CTeGUs1tEeO5Ep2pmY5GiA" source="http://www.eclipse.org/uml2/2.0.0/UML">
                      <details xmi:id="_CTeGU81tEeO5Ep2pmY5GiA" key="init"/>
                    </eAnnotations>
                  </ownedOperation>
                  <ownedOperation xmi:id="_CbrnIM1tEeO5Ep2pmY5GiA" name="preProcess" method="_CdchvM1tEeO5Ep2pmY5GiA" raisedException="_CaFrtc1tEeO5Ep2pmY5GiA">
                    <ownedComment xmi:id="_Cdu1vs1tEeO5Ep2pmY5GiA">
                      <body>&#xD;
	 * does the preprocess step for creating one document including the content&#xD;
	 * of all imported files of the document and a table with the namespaces and&#xD;
	 * unique prefixes of all imports&#xD;
	 * &#xD;
	 * @param headFileDocument&#xD;
	 *            the head document, where all nodes will be added then&#xD;
	 * @param folder&#xD;
	 *            the folder of the headFileDocument&#xD;
	 * @param namespaceTable&#xD;
	 *            the list with all already found namespaces and their new&#xD;
	 *            unique prefixes&#xD;
	 * @return the preprocess result with the preprocessed one document having&#xD;
	 *         all content and the namespace table with all found namespaces and&#xD;
	 *         their unique prefixes&#xD;
	 * @throws XPathExpressionException&#xD;
	 *             if a xpath expression is invalid</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_CbsOMM1tEeO5Ep2pmY5GiA" name="headFileDocument" type="_CZ5efs1tEeO5Ep2pmY5GiA"/>
                    <ownedParameter xmi:id="_CbsOMc1tEeO5Ep2pmY5GiA" name="folder" type="_CZtRMs1tEeO5Ep2pmY5GiA"/>
                    <ownedParameter xmi:id="_CbsOMs1tEeO5Ep2pmY5GiA" name="namespaceTable" type="_CZOwEs1tEeO5Ep2pmY5GiA"/>
                    <ownedParameter xmi:id="_Cbs1QM1tEeO5Ep2pmY5GiA" type="_CTR5EM1tEeO5Ep2pmY5GiA" direction="return"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_CbuqcM1tEeO5Ep2pmY5GiA" name="renameIds" visibility="private" method="_Cdchwc1tEeO5Ep2pmY5GiA" raisedException="_CaFrtc1tEeO5Ep2pmY5GiA">
                    <ownedComment xmi:id="_Cdu1v81tEeO5Ep2pmY5GiA">
                      <body>adds to all nodes new and unique prefixes in the given document for the&#xD;
	 * validation process and violation searching&#xD;
	 * &#xD;
	 * @param xpathExpression&#xD;
	 * @param document&#xD;
	 * @param namespacePrefix&#xD;
	 * @throws XPathExpressionException</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_Cbuqcc1tEeO5Ep2pmY5GiA" name="xpathExpression" type="_CaFrs81tEeO5Ep2pmY5GiA"/>
                    <ownedParameter xmi:id="_Cbuqcs1tEeO5Ep2pmY5GiA" name="document" type="_CZ5efs1tEeO5Ep2pmY5GiA"/>
                    <ownedParameter xmi:id="_Cbuqc81tEeO5Ep2pmY5GiA" name="namespacePrefix">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_CbvRgM1tEeO5Ep2pmY5GiA" name="selectImportedFiles" method="_Cdchxc1tEeO5Ep2pmY5GiA">
                    <ownedComment xmi:id="_Cdu1wM1tEeO5Ep2pmY5GiA">
                      <body>collects all imported files with bpmn namespace in the given document&#xD;
	 * &#xD;
	 * @param document&#xD;
	 *            the document, from which the imports are collected&#xD;
	 * @param folder&#xD;
	 *            the parent folder of the document&#xD;
	 * @param size&#xD;
	 *            the number of already collected imports for ensuring unique&#xD;
	 *            namespace prefixes&#xD;
	 * @return an array of importedFile including all bpmn imports with the&#xD;
	 *         absolute path, the new namespace prefix and the namespace</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_Cbv4kM1tEeO5Ep2pmY5GiA" name="document" type="_CZ5efs1tEeO5Ep2pmY5GiA"/>
                    <ownedParameter xmi:id="_Cbv4kc1tEeO5Ep2pmY5GiA" name="folder" type="_CZtRMs1tEeO5Ep2pmY5GiA"/>
                    <ownedParameter xmi:id="_Cbv4ks1tEeO5Ep2pmY5GiA" name="size">
                      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
                    </ownedParameter>
                    <ownedParameter xmi:id="_Cbv4k81tEeO5Ep2pmY5GiA" type="_CTFr0M1tEeO5Ep2pmY5GiA" direction="return">
                      <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_Cbv4lM1tEeO5Ep2pmY5GiA" value="*"/>
                    </ownedParameter>
                  </ownedOperation>
                  <ownedOperation xmi:id="_CbxGsM1tEeO5Ep2pmY5GiA" name="addNodesToDocument" visibility="private" method="_Cdchy81tEeO5Ep2pmY5GiA">
                    <ownedComment xmi:id="_Cdu1wc1tEeO5Ep2pmY5GiA">
                      <body>adds the childs of importDefinitionsNode to the definitionsNode of the&#xD;
	 * given headFileDocument&#xD;
	 * &#xD;
	 * @param importDefinitionsNode&#xD;
	 *            the definitionsNode of the document, which should be added to&#xD;
	 *            the headFileDocument&#xD;
	 * @param headFileDocument&#xD;
	 *            the document, where the nodes should be added&#xD;
	 *</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_CbxGsc1tEeO5Ep2pmY5GiA" name="importDefinitionsNode" type="_CaFrvc1tEeO5Ep2pmY5GiA"/>
                    <ownedParameter xmi:id="_CbxGss1tEeO5Ep2pmY5GiA" name="headFileDocument" type="_CZ5efs1tEeO5Ep2pmY5GiA"/>
                  </ownedOperation>
                  <ownedOperation xmi:id="_CbxtwM1tEeO5Ep2pmY5GiA" name="removeBPMNDINode" method="_Cdchzs1tEeO5Ep2pmY5GiA">
                    <ownedComment xmi:id="_Cdu1ws1tEeO5Ep2pmY5GiA">
                      <body>removes all BPMNDiagram Nodes from the given file&#xD;
	 * &#xD;
	 * @param headFileDocument&#xD;
	 *            the document, where the BPMNDiagram Nodes should be deleted&#xD;
	 *            from</body>
                    </ownedComment>
                    <ownedParameter xmi:id="_Cbxtwc1tEeO5Ep2pmY5GiA" name="headFileDocument" type="_CZ5efs1tEeO5Ep2pmY5GiA"/>
                  </ownedOperation>
                </packagedElement>
                <packagedElement xmi:type="uml:Association" xmi:id="_Cdu1uM1tEeO5Ep2pmY5GiA" name="" memberEnd="_CcrsvM1tEeO5Ep2pmY5GiA _Cdu1uc1tEeO5Ep2pmY5GiA">
                  <ownedEnd xmi:id="_Cdu1uc1tEeO5Ep2pmY5GiA" name="" type="_CTFr0M1tEeO5Ep2pmY5GiA" association="_Cdu1uM1tEeO5Ep2pmY5GiA"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Association" xmi:id="_Cdu1u81tEeO5Ep2pmY5GiA" name="" memberEnd="_CcxzUM1tEeO5Ep2pmY5GiA _Cdu1vM1tEeO5Ep2pmY5GiA">
                  <ownedEnd xmi:id="_Cdu1vM1tEeO5Ep2pmY5GiA" name="" type="_CTR5EM1tEeO5Ep2pmY5GiA" association="_Cdu1u81tEeO5Ep2pmY5GiA"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Association" xmi:id="_CeHQFs1tEeO5Ep2pmY5GiA" name="" memberEnd="_CeHQF81tEeO5Ep2pmY5GiA _CcxzUc1tEeO5Ep2pmY5GiA">
                  <ownedEnd xmi:id="_CeHQF81tEeO5Ep2pmY5GiA" name="" type="_CTR5EM1tEeO5Ep2pmY5GiA" association="_CeHQFs1tEeO5Ep2pmY5GiA"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Association" xmi:id="_CeHQGc1tEeO5Ep2pmY5GiA" name="" memberEnd="_CeHQGs1tEeO5Ep2pmY5GiA _CcxzU81tEeO5Ep2pmY5GiA">
                  <ownedEnd xmi:id="_CeHQGs1tEeO5Ep2pmY5GiA" name="" type="_CTeGUM1tEeO5Ep2pmY5GiA" association="_CeHQGc1tEeO5Ep2pmY5GiA"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Association" xmi:id="_CeHQHM1tEeO5Ep2pmY5GiA" name="" memberEnd="_CeHQHc1tEeO5Ep2pmY5GiA _CcxzVc1tEeO5Ep2pmY5GiA">
                  <ownedEnd xmi:id="_CeHQHc1tEeO5Ep2pmY5GiA" name="" type="_CTeGUM1tEeO5Ep2pmY5GiA" association="_CeHQHM1tEeO5Ep2pmY5GiA"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Association" xmi:id="_CeHQH81tEeO5Ep2pmY5GiA" name="" memberEnd="_CeHQIM1tEeO5Ep2pmY5GiA _CcxzV81tEeO5Ep2pmY5GiA">
                  <ownedEnd xmi:id="_CeHQIM1tEeO5Ep2pmY5GiA" name="" type="_CTeGUM1tEeO5Ep2pmY5GiA" association="_CeHQH81tEeO5Ep2pmY5GiA"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Association" xmi:id="_CeHQIs1tEeO5Ep2pmY5GiA" name="" memberEnd="_CeHQI81tEeO5Ep2pmY5GiA _CcxzWc1tEeO5Ep2pmY5GiA">
                  <ownedEnd xmi:id="_CeHQI81tEeO5Ep2pmY5GiA" name="" type="_CTeGUM1tEeO5Ep2pmY5GiA" association="_CeHQIs1tEeO5Ep2pmY5GiA"/>
                </packagedElement>
                <packagedElement xmi:type="uml:Association" xmi:id="_CeNWsc1tEeO5Ep2pmY5GiA" name="" memberEnd="_CeNWss1tEeO5Ep2pmY5GiA _CcxzW81tEeO5Ep2pmY5GiA">
                  <ownedEnd xmi:id="_CeNWss1tEeO5Ep2pmY5GiA" name="" type="_CTeGUM1tEeO5Ep2pmY5GiA" association="_CeNWsc1tEeO5Ep2pmY5GiA"/>
                </packagedElement>
              </packagedElement>
              <packagedElement xmi:type="uml:Class" xmi:id="_CShEEM1tEeO5Ep2pmY5GiA" name="Main">
                <ownedBehavior xmi:type="uml:OpaqueBehavior" xmi:id="_CdWbJs1tEeO5Ep2pmY5GiA" name="main" specification="_CShEEc1tEeO5Ep2pmY5GiA">
                  <ownedParameter xmi:id="_CdWbJ81tEeO5Ep2pmY5GiA" name="args">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CdWbKM1tEeO5Ep2pmY5GiA" value="*"/>
                  </ownedParameter>
                  <language>java</language>
                  <body>SchematronBPMNValidator validator = new SchematronBPMNValidator();&#xD;
		ArrayList&lt;String> argsAsList = new ArrayList&lt;>(Arrays.asList(args));&#xD;
		if (argsAsList.contains(&quot;--debug&quot;)) {&#xD;
			validator.setLogLevel(Level.DEBUG);&#xD;
			argsAsList.remove(&quot;--debug&quot;);&#xD;
		}&#xD;
&#xD;
		XmlWriter xmlWriter = new XmlWriter();&#xD;
&#xD;
		// TODO: parallelization with executor framework?&#xD;
		if (argsAsList.size() > 0) {&#xD;
			for (String parameter : argsAsList) {&#xD;
				try {&#xD;
					File file = new File(parameter);&#xD;
					ValidationResult result = validator.validate(file);&#xD;
					xmlWriter.writeResult(result,&#xD;
							new File(file.getParentFile() + File.separator&#xD;
									+ &quot;validation_result_&quot; + file.getName()&#xD;
									+ &quot;.xml&quot;));&#xD;
				} catch (BpmnValidationException e) {&#xD;
					System.err.println(e.getMessage());&#xD;
				} catch (JAXBException e) {&#xD;
					System.err.println(&quot;result couldn't be written in xml!&quot;);&#xD;
				}&#xD;
			}&#xD;
		} else {&#xD;
			System.err.println(&quot;There must be files to check!&quot;);&#xD;
			System.exit(-1);&#xD;
		}&#xD;
&#xD;
	</body>
                </ownedBehavior>
                <ownedOperation xmi:id="_CShEEc1tEeO5Ep2pmY5GiA" name="main" isStatic="true" method="_CdWbJs1tEeO5Ep2pmY5GiA">
                  <ownedParameter xmi:id="_CShEEs1tEeO5Ep2pmY5GiA" name="args">
                    <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
                    <upperValue xmi:type="uml:LiteralUnlimitedNatural" xmi:id="_CShEE81tEeO5Ep2pmY5GiA" value="*"/>
                  </ownedParameter>
                </ownedOperation>
              </packagedElement>
            </packagedElement>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_CIwEE81tEeO5Ep2pmY5GiA" name="java">
      <packagedElement xmi:type="uml:Package" xmi:id="_CIwEFM1tEeO5Ep2pmY5GiA" name="util">
        <packagedElement xmi:type="uml:Class" xmi:id="_CZOwEM1tEeO5Ep2pmY5GiA" name="ArrayList"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_CZOwEs1tEeO5Ep2pmY5GiA" name="List"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_CZzX0c1tEeO5Ep2pmY5GiA" name="Arrays"/>
        <packagedElement xmi:type="uml:Interface" xmi:id="_CZzX2M1tEeO5Ep2pmY5GiA" name="Iterator"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_CJCX8c1tEeO5Ep2pmY5GiA" name="io">
        <packagedElement xmi:type="uml:Class" xmi:id="_CZtRMs1tEeO5Ep2pmY5GiA" name="File"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_CZ_lEM1tEeO5Ep2pmY5GiA" name="IOException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_CaR49M1tEeO5Ep2pmY5GiA" name="InputStream"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_CaX_lc1tEeO5Ep2pmY5GiA" name="FileNotFoundException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_CaqTcs1tEeO5Ep2pmY5GiA" name="ByteArrayInputStream"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_CawaEc1tEeO5Ep2pmY5GiA" name="ByteArrayOutputStream"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_CawaE81tEeO5Ep2pmY5GiA" name="OutputStreamWriter"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_CawaFc1tEeO5Ep2pmY5GiA" name="UnsupportedEncodingException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_Ca8nUM1tEeO5Ep2pmY5GiA" name="BufferedInputStream"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_CbCt8M1tEeO5Ep2pmY5GiA" name="Reader"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_Cbc9oM1tEeO5Ep2pmY5GiA" name="lang">
        <packagedElement xmi:type="uml:Class" xmi:id="_Cbc9oc1tEeO5Ep2pmY5GiA" name="Exception"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_CIwEFc1tEeO5Ep2pmY5GiA" name="javax">
      <packagedElement xmi:type="uml:Package" xmi:id="_CIwEFs1tEeO5Ep2pmY5GiA" name="xml">
        <packagedElement xmi:type="uml:Package" xmi:id="_CIwEF81tEeO5Ep2pmY5GiA" name="bind">
          <packagedElement xmi:type="uml:Package" xmi:id="_CIwEGM1tEeO5Ep2pmY5GiA" name="annotation">
            <packagedElement xmi:type="uml:Enumeration" xmi:id="_CZOwFM1tEeO5Ep2pmY5GiA" name="XmlAccessType"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_CZOwFs1tEeO5Ep2pmY5GiA" name="XmlAccessorType"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_CZOwGM1tEeO5Ep2pmY5GiA" name="XmlElement"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_CZOwGs1tEeO5Ep2pmY5GiA" name="XmlElementWrapper"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_CZOwHM1tEeO5Ep2pmY5GiA" name="XmlElements"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_CZOwHs1tEeO5Ep2pmY5GiA" name="XmlRootElement"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_CZOwIM1tEeO5Ep2pmY5GiA" name="XmlType"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_CZtRMM1tEeO5Ep2pmY5GiA" name="XmlAttribute"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_CZzX081tEeO5Ep2pmY5GiA" name="JAXBException"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_CaR48M1tEeO5Ep2pmY5GiA" name="JAXBContext"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_CaR48s1tEeO5Ep2pmY5GiA" name="Marshaller"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_CJIekc1tEeO5Ep2pmY5GiA" name="namespace">
          <packagedElement xmi:type="uml:Interface" xmi:id="_CZzX3M1tEeO5Ep2pmY5GiA" name="NamespaceContext"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_CJOlMM1tEeO5Ep2pmY5GiA" name="transform">
          <packagedElement xmi:type="uml:Package" xmi:id="_CJOlMc1tEeO5Ep2pmY5GiA" name="dom">
            <packagedElement xmi:type="uml:Class" xmi:id="_CZ5ees1tEeO5Ep2pmY5GiA" name="DOMSource"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Package" xmi:id="_CJOlMs1tEeO5Ep2pmY5GiA" name="stream">
            <packagedElement xmi:type="uml:Class" xmi:id="_CZ5efM1tEeO5Ep2pmY5GiA" name="StreamResult"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_CaX_mc1tEeO5Ep2pmY5GiA" name="StreamSource"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Class" xmi:id="_CZ5ecM1tEeO5Ep2pmY5GiA" name="OutputKeys"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_CZ5ecs1tEeO5Ep2pmY5GiA" name="Transformer"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_CZ5edM1tEeO5Ep2pmY5GiA" name="TransformerConfigurationException"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_CZ5eds1tEeO5Ep2pmY5GiA" name="TransformerException"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_CZ5eeM1tEeO5Ep2pmY5GiA" name="TransformerFactory"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_CaX_l81tEeO5Ep2pmY5GiA" name="Source"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_CJz0AM1tEeO5Ep2pmY5GiA" name="parsers">
          <packagedElement xmi:type="uml:Class" xmi:id="_CZ_lEs1tEeO5Ep2pmY5GiA" name="DocumentBuilder"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_CZ_lFM1tEeO5Ep2pmY5GiA" name="DocumentBuilderFactory"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_CZ_lFs1tEeO5Ep2pmY5GiA" name="ParserConfigurationException"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_CJ0bEM1tEeO5Ep2pmY5GiA" name="xpath">
          <packagedElement xmi:type="uml:Interface" xmi:id="_CZ_lGM1tEeO5Ep2pmY5GiA" name="XPath"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_CaFrsc1tEeO5Ep2pmY5GiA" name="XPathConstants"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_CaFrs81tEeO5Ep2pmY5GiA" name="XPathExpression"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_CaFrtc1tEeO5Ep2pmY5GiA" name="XPathExpressionException"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_CaFrt81tEeO5Ep2pmY5GiA" name="XPathFactory"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_CK-4sM1tEeO5Ep2pmY5GiA" name="validation">
          <packagedElement xmi:type="uml:Class" xmi:id="_CaX_m81tEeO5Ep2pmY5GiA" name="Schema"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_CaeGMc1tEeO5Ep2pmY5GiA" name="SchemaFactory"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_CaeGM81tEeO5Ep2pmY5GiA" name="Validator"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_CZzX2s1tEeO5Ep2pmY5GiA" name="XMLConstants"/>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_CJCX8s1tEeO5Ep2pmY5GiA" name="ch">
      <packagedElement xmi:type="uml:Package" xmi:id="_CJCX881tEeO5Ep2pmY5GiA" name="qos">
        <packagedElement xmi:type="uml:Package" xmi:id="_CJCX9M1tEeO5Ep2pmY5GiA" name="logback">
          <packagedElement xmi:type="uml:Package" xmi:id="_CJCX9c1tEeO5Ep2pmY5GiA" name="classic">
            <packagedElement xmi:type="uml:Class" xmi:id="_CZzX1c1tEeO5Ep2pmY5GiA" name="Level"/>
            <packagedElement xmi:type="uml:Class" xmi:id="_CaFrw81tEeO5Ep2pmY5GiA" name="Logger"/>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_CJOlM81tEeO5Ep2pmY5GiA" name="org">
      <packagedElement xmi:type="uml:Package" xmi:id="_CJOlNM1tEeO5Ep2pmY5GiA" name="w3c">
        <packagedElement xmi:type="uml:Package" xmi:id="_CJOlNc1tEeO5Ep2pmY5GiA" name="dom">
          <packagedElement xmi:type="uml:Package" xmi:id="_CKz5kM1tEeO5Ep2pmY5GiA" name="ls">
            <packagedElement xmi:type="uml:Interface" xmi:id="_CaX_kc1tEeO5Ep2pmY5GiA" name="LSInput"/>
            <packagedElement xmi:type="uml:Interface" xmi:id="_CaX_k81tEeO5Ep2pmY5GiA" name="LSResourceResolver"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Interface" xmi:id="_CZ5efs1tEeO5Ep2pmY5GiA" name="Document"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_CaFru81tEeO5Ep2pmY5GiA" name="Element"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_CaFrvc1tEeO5Ep2pmY5GiA" name="Node"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_CaFrv81tEeO5Ep2pmY5GiA" name="NodeList"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_CJ1pMM1tEeO5Ep2pmY5GiA" name="slf4j">
        <packagedElement xmi:type="uml:Class" xmi:id="_CaFruc1tEeO5Ep2pmY5GiA" name="LoggerFactory"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_CJ3eYM1tEeO5Ep2pmY5GiA" name="xml">
        <packagedElement xmi:type="uml:Package" xmi:id="_CJ3eYc1tEeO5Ep2pmY5GiA" name="sax">
          <packagedElement xmi:type="uml:Class" xmi:id="_CaFrwc1tEeO5Ep2pmY5GiA" name="SAXException"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_CaeGNc1tEeO5Ep2pmY5GiA" name="SAXParseException"/>
          <packagedElement xmi:type="uml:Interface" xmi:id="_CaqTcM1tEeO5Ep2pmY5GiA" name="ErrorHandler"/>
        </packagedElement>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_CLRMkM1tEeO5Ep2pmY5GiA" name="jdom2">
        <packagedElement xmi:type="uml:Package" xmi:id="_CLRMkc1tEeO5Ep2pmY5GiA" name="filter">
          <packagedElement xmi:type="uml:Class" xmi:id="_CakM181tEeO5Ep2pmY5GiA" name="Filters"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_CLRMks1tEeO5Ep2pmY5GiA" name="input">
          <packagedElement xmi:type="uml:Class" xmi:id="_CakM2c1tEeO5Ep2pmY5GiA" name="SAXBuilder"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_CLRMk81tEeO5Ep2pmY5GiA" name="located">
          <packagedElement xmi:type="uml:Class" xmi:id="_CakM281tEeO5Ep2pmY5GiA" name="LocatedElement"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_CakM3c1tEeO5Ep2pmY5GiA" name="LocatedJDOMFactory"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Package" xmi:id="_CLRMlM1tEeO5Ep2pmY5GiA" name="xpath">
          <packagedElement xmi:type="uml:Interface" xmi:id="_CakM381tEeO5Ep2pmY5GiA" name="XPathExpression"/>
          <packagedElement xmi:type="uml:Class" xmi:id="_CakM4c1tEeO5Ep2pmY5GiA" name="XPathFactory"/>
        </packagedElement>
        <packagedElement xmi:type="uml:Class" xmi:id="_CaeGN81tEeO5Ep2pmY5GiA" name="Document"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_CakM0c1tEeO5Ep2pmY5GiA" name="Element"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_CakM081tEeO5Ep2pmY5GiA" name="JDOMException"/>
        <packagedElement xmi:type="uml:Class" xmi:id="_CakM1c1tEeO5Ep2pmY5GiA" name="Namespace"/>
      </packagedElement>
      <packagedElement xmi:type="uml:Package" xmi:id="_CL10UM1tEeO5Ep2pmY5GiA" name="oclc">
        <packagedElement xmi:type="uml:Package" xmi:id="_CL10Uc1tEeO5Ep2pmY5GiA" name="purl">
          <packagedElement xmi:type="uml:Package" xmi:id="_CL10Us1tEeO5Ep2pmY5GiA" name="dsdl">
            <packagedElement xmi:type="uml:Package" xmi:id="_CL10U81tEeO5Ep2pmY5GiA" name="svrl">
              <packagedElement xmi:type="uml:Class" xmi:id="_CawaF81tEeO5Ep2pmY5GiA" name="FailedAssert"/>
              <packagedElement xmi:type="uml:Class" xmi:id="_CawaGc1tEeO5Ep2pmY5GiA" name="SchematronOutputType"/>
            </packagedElement>
          </packagedElement>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <packagedElement xmi:type="uml:Package" xmi:id="_CL10VM1tEeO5Ep2pmY5GiA" name="com">
      <packagedElement xmi:type="uml:Package" xmi:id="_CL10Vc1tEeO5Ep2pmY5GiA" name="phloc">
        <packagedElement xmi:type="uml:Package" xmi:id="_CL10Vs1tEeO5Ep2pmY5GiA" name="schematron">
          <packagedElement xmi:type="uml:Package" xmi:id="_CL10V81tEeO5Ep2pmY5GiA" name="pure">
            <packagedElement xmi:type="uml:Class" xmi:id="_CawaHc1tEeO5Ep2pmY5GiA" name="SchematronResourcePure"/>
          </packagedElement>
          <packagedElement xmi:type="uml:Interface" xmi:id="_CawaG81tEeO5Ep2pmY5GiA" name="ISchematronResource"/>
        </packagedElement>
      </packagedElement>
    </packagedElement>
    <profileApplication xmi:id="_BpZOk81tEeO5Ep2pmY5GiA">
      <eAnnotations xmi:id="_BpZOlM1tEeO5Ep2pmY5GiA" source="http://www.eclipse.org/uml2/2.0.0/UML">
        <references xmi:type="ecore:EPackage" href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile-Annotation_2-UMLLabProfile"/>
      </eAnnotations>
      <appliedProfile href="pathmap://UMLLAB_PROFILES/UMLLab.profile.uml#UMLLabProfile"/>
    </profileApplication>
  </uml:Model>
  <UMLLabProfile:TargetLanguage xmi:id="_BpZOlc1tEeO5Ep2pmY5GiA" base_Package="_Bd2s8M1tEeO5Ep2pmY5GiA">
    <languageName>java</languageName>
  </UMLLabProfile:TargetLanguage>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CRkB0c1tEeO5Ep2pmY5GiA" base_Element="_CRkB0M1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:StyledElement xmi:id="_CRqIfc1tEeO5Ep2pmY5GiA" base_Element="_CRqIec1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:StyledElement xmi:id="_CRwPEs1tEeO5Ep2pmY5GiA" base_Element="_CRwPEM1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:StyledElement xmi:id="_CRwPFc1tEeO5Ep2pmY5GiA" base_Element="_CRwPE81tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:StyledElement xmi:id="_CRwPGc1tEeO5Ep2pmY5GiA" base_Element="_CRwPFs1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:StyledElement xmi:id="_CR2Vss1tEeO5Ep2pmY5GiA" base_Element="_CRwPGs1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Annotations xmi:id="_CR2Vs81tEeO5Ep2pmY5GiA" base_Element="_CRkB0M1tEeO5Ep2pmY5GiA">
    <annotations xmi:id="_CR2VtM1tEeO5Ep2pmY5GiA" name="XmlAccessorType">
      <annotationParameters xmi:id="_CR2Vtc1tEeO5Ep2pmY5GiA" skipName="true" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_CdovCc1tEeO5Ep2pmY5GiA" value="XmlAccessType.FIELD"/>
      </annotationParameters>
    </annotations>
    <annotations xmi:id="_CR2Vts1tEeO5Ep2pmY5GiA" name="XmlType">
      <annotationParameters xmi:id="_CR2Vt81tEeO5Ep2pmY5GiA" name="namespace" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_Cdu1kM1tEeO5Ep2pmY5GiA" value="&quot;http://www.uniba.de/pi/bpmn-cons/validation&quot;"/>
      </annotationParameters>
      <annotationParameters xmi:id="_CR2VuM1tEeO5Ep2pmY5GiA" name="propOrder">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_Cdu1kc1tEeO5Ep2pmY5GiA" value="&quot;valid&quot;"/>
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_Cdu1ks1tEeO5Ep2pmY5GiA" value="&quot;checkedFiles&quot;"/>
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_Cdu1k81tEeO5Ep2pmY5GiA" value="&quot;violations&quot;"/>
      </annotationParameters>
    </annotations>
    <annotations xmi:id="_CR2Vuc1tEeO5Ep2pmY5GiA" name="XmlRootElement">
      <annotationParameters xmi:id="_CR2Vus1tEeO5Ep2pmY5GiA" name="name" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_Cdu1lM1tEeO5Ep2pmY5GiA" value="&quot;validationResult&quot;"/>
      </annotationParameters>
      <annotationParameters xmi:id="_CR2Vu81tEeO5Ep2pmY5GiA" name="namespace" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_Cdu1lc1tEeO5Ep2pmY5GiA" value="&quot;http://www.uniba.de/pi/bpmn-cons/validation&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CSIpkc1tEeO5Ep2pmY5GiA" base_Element="_CSIpkM1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:StyledElement xmi:id="_CSOwPc1tEeO5Ep2pmY5GiA" base_Element="_CSOwNM1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:StyledElement xmi:id="_CSU20c1tEeO5Ep2pmY5GiA" base_Element="_CSOwPs1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:StyledElement xmi:id="_CSU21M1tEeO5Ep2pmY5GiA" base_Element="_CSU20s1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:StyledElement xmi:id="_CSU2181tEeO5Ep2pmY5GiA" base_Element="_CSU21c1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:StyledElement xmi:id="_CSU22s1tEeO5Ep2pmY5GiA" base_Element="_CSU22M1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Annotations xmi:id="_CSU23c1tEeO5Ep2pmY5GiA" base_Element="_CSU2281tEeO5Ep2pmY5GiA">
    <annotations xmi:id="_CSU23s1tEeO5Ep2pmY5GiA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_CSU2381tEeO5Ep2pmY5GiA" base_Element="_CSIpkM1tEeO5Ep2pmY5GiA">
    <annotations xmi:id="_CSU24M1tEeO5Ep2pmY5GiA" name="XmlType">
      <annotationParameters xmi:id="_CSU24c1tEeO5Ep2pmY5GiA" name="namespace" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_Cdu1ps1tEeO5Ep2pmY5GiA" value="&quot;http://www.uniba.de/pi/bpmn-cons/validation&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CSnKtM1tEeO5Ep2pmY5GiA" base_Element="_CSnKsc1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CStRVM1tEeO5Ep2pmY5GiA" base_Element="_CStRUc1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Annotations xmi:id="_CStRVc1tEeO5Ep2pmY5GiA" base_Element="_CStRUc1tEeO5Ep2pmY5GiA">
    <annotations xmi:id="_CStRVs1tEeO5Ep2pmY5GiA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CSzX881tEeO5Ep2pmY5GiA" base_Element="_CSzX8M1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Annotations xmi:id="_CSzX9M1tEeO5Ep2pmY5GiA" base_Element="_CSzX8M1tEeO5Ep2pmY5GiA">
    <annotations xmi:id="_CSzX9c1tEeO5Ep2pmY5GiA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Generics xmi:id="_CSzX-M1tEeO5Ep2pmY5GiA" genericsValue="?" base_Element="_CSzX9s1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CSzX-c1tEeO5Ep2pmY5GiA" base_Element="_CSzX9s1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Annotations xmi:id="_CSzX-s1tEeO5Ep2pmY5GiA" base_Element="_CSzX9s1tEeO5Ep2pmY5GiA">
    <annotations xmi:id="_CSzX-81tEeO5Ep2pmY5GiA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CS_lNM1tEeO5Ep2pmY5GiA" base_Element="_CS_lMc1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CTLyc81tEeO5Ep2pmY5GiA" base_Element="_CTLycM1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CTeGVM1tEeO5Ep2pmY5GiA" base_Element="_CTeGUc1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CUQJds1tEeO5Ep2pmY5GiA" base_Element="_CUQJcM1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Annotations xmi:id="_CUWQEM1tEeO5Ep2pmY5GiA" base_Element="_CUQJcM1tEeO5Ep2pmY5GiA">
    <annotations xmi:id="_CUWQEc1tEeO5Ep2pmY5GiA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CUcWs81tEeO5Ep2pmY5GiA" base_Element="_CUcWsM1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CVHFE81tEeO5Ep2pmY5GiA" base_Element="_CVHFEM1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CV36Es1tEeO5Ep2pmY5GiA" base_Element="_CV36EM1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Annotations xmi:id="_CV36E81tEeO5Ep2pmY5GiA" base_Element="_CV36EM1tEeO5Ep2pmY5GiA">
    <annotations xmi:id="_CV36FM1tEeO5Ep2pmY5GiA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CV36Fs1tEeO5Ep2pmY5GiA" base_Element="_CV36Fc1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Annotations xmi:id="_CV-AsM1tEeO5Ep2pmY5GiA" base_Element="_CV36Fc1tEeO5Ep2pmY5GiA">
    <annotations xmi:id="_CV-Asc1tEeO5Ep2pmY5GiA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CV-AtM1tEeO5Ep2pmY5GiA" base_Element="_CV-Ass1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Annotations xmi:id="_CV-Atc1tEeO5Ep2pmY5GiA" base_Element="_CV-Ass1tEeO5Ep2pmY5GiA">
    <annotations xmi:id="_CV-Ats1tEeO5Ep2pmY5GiA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CV-AuM1tEeO5Ep2pmY5GiA" base_Element="_CV-At81tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Annotations xmi:id="_CV-Auc1tEeO5Ep2pmY5GiA" base_Element="_CV-At81tEeO5Ep2pmY5GiA">
    <annotations xmi:id="_CV-Aus1tEeO5Ep2pmY5GiA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CWEHUM1tEeO5Ep2pmY5GiA" base_Element="_CV-Au81tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Annotations xmi:id="_CWEHUc1tEeO5Ep2pmY5GiA" base_Element="_CV-Au81tEeO5Ep2pmY5GiA">
    <annotations xmi:id="_CWEHUs1tEeO5Ep2pmY5GiA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CWEHVc1tEeO5Ep2pmY5GiA" base_Element="_CWEHU81tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Annotations xmi:id="_CWEHVs1tEeO5Ep2pmY5GiA" base_Element="_CWEHU81tEeO5Ep2pmY5GiA">
    <annotations xmi:id="_CWEHV81tEeO5Ep2pmY5GiA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CWEHWs1tEeO5Ep2pmY5GiA" base_Element="_CWEHWM1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Annotations xmi:id="_CWKN8M1tEeO5Ep2pmY5GiA" base_Element="_CWEHWM1tEeO5Ep2pmY5GiA">
    <annotations xmi:id="_CWKN8c1tEeO5Ep2pmY5GiA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CWKN9M1tEeO5Ep2pmY5GiA" base_Element="_CWKN8s1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Annotations xmi:id="_CWKN9c1tEeO5Ep2pmY5GiA" base_Element="_CWKN8s1tEeO5Ep2pmY5GiA">
    <annotations xmi:id="_CWKN9s1tEeO5Ep2pmY5GiA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CWQUks1tEeO5Ep2pmY5GiA" base_Element="_CWQUkM1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Annotations xmi:id="_CWQUk81tEeO5Ep2pmY5GiA" base_Element="_CWQUkM1tEeO5Ep2pmY5GiA">
    <annotations xmi:id="_CWQUlM1tEeO5Ep2pmY5GiA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CWWbMM1tEeO5Ep2pmY5GiA" base_Element="_CWQUlc1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Annotations xmi:id="_CWWbMc1tEeO5Ep2pmY5GiA" base_Element="_CWQUlc1tEeO5Ep2pmY5GiA">
    <annotations xmi:id="_CWWbMs1tEeO5Ep2pmY5GiA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Reference xmi:id="_CZOwEc1tEeO5Ep2pmY5GiA" base_Element="_CZOwEM1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CZOwE81tEeO5Ep2pmY5GiA" base_Element="_CZOwEs1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CZOwFc1tEeO5Ep2pmY5GiA" base_Element="_CZOwFM1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CZOwF81tEeO5Ep2pmY5GiA" base_Element="_CZOwFs1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CZOwGc1tEeO5Ep2pmY5GiA" base_Element="_CZOwGM1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CZOwG81tEeO5Ep2pmY5GiA" base_Element="_CZOwGs1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CZOwHc1tEeO5Ep2pmY5GiA" base_Element="_CZOwHM1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CZOwH81tEeO5Ep2pmY5GiA" base_Element="_CZOwHs1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CZU2sM1tEeO5Ep2pmY5GiA" base_Element="_CZOwIM1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CZtRMc1tEeO5Ep2pmY5GiA" base_Element="_CZtRMM1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CZzX0M1tEeO5Ep2pmY5GiA" base_Element="_CZtRMs1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CZzX0s1tEeO5Ep2pmY5GiA" base_Element="_CZzX0c1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CZzX1M1tEeO5Ep2pmY5GiA" base_Element="_CZzX081tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CZzX1s1tEeO5Ep2pmY5GiA" base_Element="_CZzX1c1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CZzX2c1tEeO5Ep2pmY5GiA" base_Element="_CZzX2M1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CZzX281tEeO5Ep2pmY5GiA" base_Element="_CZzX2s1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CZzX3c1tEeO5Ep2pmY5GiA" base_Element="_CZzX3M1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CZ5ecc1tEeO5Ep2pmY5GiA" base_Element="_CZ5ecM1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CZ5ec81tEeO5Ep2pmY5GiA" base_Element="_CZ5ecs1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CZ5edc1tEeO5Ep2pmY5GiA" base_Element="_CZ5edM1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CZ5ed81tEeO5Ep2pmY5GiA" base_Element="_CZ5eds1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CZ5eec1tEeO5Ep2pmY5GiA" base_Element="_CZ5eeM1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CZ5ee81tEeO5Ep2pmY5GiA" base_Element="_CZ5ees1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CZ5efc1tEeO5Ep2pmY5GiA" base_Element="_CZ5efM1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CZ5ef81tEeO5Ep2pmY5GiA" base_Element="_CZ5efs1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CZ_lEc1tEeO5Ep2pmY5GiA" base_Element="_CZ_lEM1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CZ_lE81tEeO5Ep2pmY5GiA" base_Element="_CZ_lEs1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CZ_lFc1tEeO5Ep2pmY5GiA" base_Element="_CZ_lFM1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CZ_lF81tEeO5Ep2pmY5GiA" base_Element="_CZ_lFs1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CaFrsM1tEeO5Ep2pmY5GiA" base_Element="_CZ_lGM1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CaFrss1tEeO5Ep2pmY5GiA" base_Element="_CaFrsc1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CaFrtM1tEeO5Ep2pmY5GiA" base_Element="_CaFrs81tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CaFrts1tEeO5Ep2pmY5GiA" base_Element="_CaFrtc1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CaFruM1tEeO5Ep2pmY5GiA" base_Element="_CaFrt81tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CaFrus1tEeO5Ep2pmY5GiA" base_Element="_CaFruc1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CaFrvM1tEeO5Ep2pmY5GiA" base_Element="_CaFru81tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CaFrvs1tEeO5Ep2pmY5GiA" base_Element="_CaFrvc1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CaFrwM1tEeO5Ep2pmY5GiA" base_Element="_CaFrv81tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CaFrws1tEeO5Ep2pmY5GiA" base_Element="_CaFrwc1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CaLyUM1tEeO5Ep2pmY5GiA" base_Element="_CaFrw81tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CaR48c1tEeO5Ep2pmY5GiA" base_Element="_CaR48M1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CaR4881tEeO5Ep2pmY5GiA" base_Element="_CaR48s1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CaX_kM1tEeO5Ep2pmY5GiA" base_Element="_CaR49M1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CaX_ks1tEeO5Ep2pmY5GiA" base_Element="_CaX_kc1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CaX_lM1tEeO5Ep2pmY5GiA" base_Element="_CaX_k81tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CaX_ls1tEeO5Ep2pmY5GiA" base_Element="_CaX_lc1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CaX_mM1tEeO5Ep2pmY5GiA" base_Element="_CaX_l81tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CaX_ms1tEeO5Ep2pmY5GiA" base_Element="_CaX_mc1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CaeGMM1tEeO5Ep2pmY5GiA" base_Element="_CaX_m81tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CaeGMs1tEeO5Ep2pmY5GiA" base_Element="_CaeGMc1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CaeGNM1tEeO5Ep2pmY5GiA" base_Element="_CaeGM81tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CaeGNs1tEeO5Ep2pmY5GiA" base_Element="_CaeGNc1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CakM0M1tEeO5Ep2pmY5GiA" base_Element="_CaeGN81tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CakM0s1tEeO5Ep2pmY5GiA" base_Element="_CakM0c1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CakM1M1tEeO5Ep2pmY5GiA" base_Element="_CakM081tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CakM1s1tEeO5Ep2pmY5GiA" base_Element="_CakM1c1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CakM2M1tEeO5Ep2pmY5GiA" base_Element="_CakM181tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CakM2s1tEeO5Ep2pmY5GiA" base_Element="_CakM2c1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CakM3M1tEeO5Ep2pmY5GiA" base_Element="_CakM281tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CakM3s1tEeO5Ep2pmY5GiA" base_Element="_CakM3c1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CakM4M1tEeO5Ep2pmY5GiA" base_Element="_CakM381tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CakM4s1tEeO5Ep2pmY5GiA" base_Element="_CakM4c1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CaqTcc1tEeO5Ep2pmY5GiA" base_Element="_CaqTcM1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CawaEM1tEeO5Ep2pmY5GiA" base_Element="_CaqTcs1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CawaEs1tEeO5Ep2pmY5GiA" base_Element="_CawaEc1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CawaFM1tEeO5Ep2pmY5GiA" base_Element="_CawaE81tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CawaFs1tEeO5Ep2pmY5GiA" base_Element="_CawaFc1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CawaGM1tEeO5Ep2pmY5GiA" base_Element="_CawaF81tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CawaGs1tEeO5Ep2pmY5GiA" base_Element="_CawaGc1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CawaHM1tEeO5Ep2pmY5GiA" base_Element="_CawaG81tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CawaHs1tEeO5Ep2pmY5GiA" base_Element="_CawaHc1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_Ca8nUc1tEeO5Ep2pmY5GiA" base_Element="_Ca8nUM1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CbCt8c1tEeO5Ep2pmY5GiA" base_Element="_CbCt8M1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:StyledElement xmi:id="_CbW3As1tEeO5Ep2pmY5GiA" base_Element="_CbVo4M1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Generics xmi:id="_CbXeEM1tEeO5Ep2pmY5GiA" genericsValue="String" base_Element="_CbWP8c1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Generics xmi:id="_CbZ6UM1tEeO5Ep2pmY5GiA" genericsValue="Violation" base_Element="_CbWP8s1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CbeLwM1tEeO5Ep2pmY5GiA" base_Element="_Cbc9oc1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Generics xmi:id="_CbidMM1tEeO5Ep2pmY5GiA" genericsValue="Violation" base_Element="_Cbh2IM1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Generics xmi:id="_Cboj0M1tEeO5Ep2pmY5GiA" genericsValue="String[]" base_Element="_Cbmuos1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Generics xmi:id="_CbtcUM1tEeO5Ep2pmY5GiA" genericsValue="String[]" base_Element="_CbsOMs1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Array xmi:id="_CbwfoM1tEeO5Ep2pmY5GiA" base_Element="_CbvRgM1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Generics xmi:id="_Cb1_MM1tEeO5Ep2pmY5GiA" genericsValue="File" base_Element="_Cb0xEM1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Generics xmi:id="_CcA-U81tEeO5Ep2pmY5GiA" genericsValue="SAXParseException" base_Element="_Cb63us1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CcA-Vs1tEeO5Ep2pmY5GiA" base_Element="_CcA-VM1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Annotations xmi:id="_CcA-V81tEeO5Ep2pmY5GiA" base_Element="_CcA-VM1tEeO5Ep2pmY5GiA">
    <annotations xmi:id="_CcA-WM1tEeO5Ep2pmY5GiA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CcA-W81tEeO5Ep2pmY5GiA" base_Element="_CcA-Wc1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Annotations xmi:id="_CcA-XM1tEeO5Ep2pmY5GiA" base_Element="_CcA-Wc1tEeO5Ep2pmY5GiA">
    <annotations xmi:id="_CcA-Xc1tEeO5Ep2pmY5GiA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CcHE8c1tEeO5Ep2pmY5GiA" base_Element="_CcA-Xs1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Annotations xmi:id="_CcHE8s1tEeO5Ep2pmY5GiA" base_Element="_CcA-Xs1tEeO5Ep2pmY5GiA">
    <annotations xmi:id="_CcHE881tEeO5Ep2pmY5GiA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CcHE9s1tEeO5Ep2pmY5GiA" base_Element="_CcHE9M1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Annotations xmi:id="_CcHE981tEeO5Ep2pmY5GiA" base_Element="_CcHE9M1tEeO5Ep2pmY5GiA">
    <annotations xmi:id="_CcHE-M1tEeO5Ep2pmY5GiA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CcHE_c1tEeO5Ep2pmY5GiA" base_Element="_CcHE-c1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Generics xmi:id="_CcHE_s1tEeO5Ep2pmY5GiA" genericsValue="File" base_Element="_CcHE-s1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Annotations xmi:id="_CcNLkM1tEeO5Ep2pmY5GiA" base_Element="_CcHE-c1tEeO5Ep2pmY5GiA">
    <annotations xmi:id="_CcNLkc1tEeO5Ep2pmY5GiA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CcNLlc1tEeO5Ep2pmY5GiA" base_Element="_CcNLks1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Annotations xmi:id="_CcNLls1tEeO5Ep2pmY5GiA" base_Element="_CcNLks1tEeO5Ep2pmY5GiA">
    <annotations xmi:id="_CcNLl81tEeO5Ep2pmY5GiA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Array xmi:id="_CcNLoc1tEeO5Ep2pmY5GiA" dimensions="1" base_Element="_CcNLm81tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Generics xmi:id="_CcNLos1tEeO5Ep2pmY5GiA" genericsValue="String[]" base_Element="_CcNLns1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CcZY2M1tEeO5Ep2pmY5GiA" base_Element="_CcZY1s1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Annotations xmi:id="_CcZY2c1tEeO5Ep2pmY5GiA" base_Element="_CcZY1s1tEeO5Ep2pmY5GiA">
    <annotations xmi:id="_CcZY2s1tEeO5Ep2pmY5GiA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CcZY3c1tEeO5Ep2pmY5GiA" base_Element="_CcZY281tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Annotations xmi:id="_Ccffcc1tEeO5Ep2pmY5GiA" base_Element="_CcffcM1tEeO5Ep2pmY5GiA">
    <annotations xmi:id="_Ccffcs1tEeO5Ep2pmY5GiA" name="XmlElement">
      <annotationParameters xmi:id="_Ccffc81tEeO5Ep2pmY5GiA" name="namespace" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_Cdu1ls1tEeO5Ep2pmY5GiA" value="&quot;http://www.uniba.de/pi/bpmn-cons/validation&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_Ccffds1tEeO5Ep2pmY5GiA" base_Element="_CcffdM1tEeO5Ep2pmY5GiA">
    <annotations xmi:id="_Ccffd81tEeO5Ep2pmY5GiA" name="XmlElementWrapper">
      <annotationParameters xmi:id="_CcffeM1tEeO5Ep2pmY5GiA" name="name" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_Cdu1l81tEeO5Ep2pmY5GiA" value="&quot;checkedFile&quot;"/>
      </annotationParameters>
      <annotationParameters xmi:id="_Ccffec1tEeO5Ep2pmY5GiA" name="namespace" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_Cdu1mM1tEeO5Ep2pmY5GiA" value="&quot;http://www.uniba.de/pi/bpmn-cons/validation&quot;"/>
      </annotationParameters>
    </annotations>
    <annotations xmi:id="_Ccffes1tEeO5Ep2pmY5GiA" name="XmlElements">
      <annotationParameters xmi:id="_Ccffe81tEeO5Ep2pmY5GiA" name="value">
        <annotations xmi:id="_CcfffM1tEeO5Ep2pmY5GiA" name="XmlElement">
          <annotationParameters xmi:id="_Ccfffc1tEeO5Ep2pmY5GiA" name="name" skipArray="true">
            <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_Cdu1mc1tEeO5Ep2pmY5GiA" value="&quot;file&quot;"/>
          </annotationParameters>
          <annotationParameters xmi:id="_Ccfffs1tEeO5Ep2pmY5GiA" name="namespace" skipArray="true">
            <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_Cdu1ms1tEeO5Ep2pmY5GiA" value="&quot;http://www.uniba.de/pi/bpmn-cons/validation&quot;"/>
          </annotationParameters>
          <annotationParameters xmi:id="_Ccfff81tEeO5Ep2pmY5GiA" name="type" skipArray="true">
            <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_Cdu1m81tEeO5Ep2pmY5GiA" value="String.class"/>
          </annotationParameters>
        </annotations>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_CclmEM1tEeO5Ep2pmY5GiA" base_Element="_CcffgM1tEeO5Ep2pmY5GiA">
    <annotations xmi:id="_CclmEc1tEeO5Ep2pmY5GiA" name="XmlElementWrapper">
      <annotationParameters xmi:id="_CclmEs1tEeO5Ep2pmY5GiA" name="name" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_Cdu1nM1tEeO5Ep2pmY5GiA" value="&quot;violations&quot;"/>
      </annotationParameters>
      <annotationParameters xmi:id="_CclmE81tEeO5Ep2pmY5GiA" name="namespace" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_Cdu1nc1tEeO5Ep2pmY5GiA" value="&quot;http://www.uniba.de/pi/bpmn-cons/validation&quot;"/>
      </annotationParameters>
    </annotations>
    <annotations xmi:id="_CclmFM1tEeO5Ep2pmY5GiA" name="XmlElements">
      <annotationParameters xmi:id="_CclmFc1tEeO5Ep2pmY5GiA" name="value">
        <annotations xmi:id="_CclmFs1tEeO5Ep2pmY5GiA" name="XmlElement">
          <annotationParameters xmi:id="_CclmF81tEeO5Ep2pmY5GiA" name="name" skipArray="true">
            <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_Cdu1ns1tEeO5Ep2pmY5GiA" value="&quot;violation&quot;"/>
          </annotationParameters>
          <annotationParameters xmi:id="_CclmGM1tEeO5Ep2pmY5GiA" name="namespace" skipArray="true">
            <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_Cdu1n81tEeO5Ep2pmY5GiA" value="&quot;http://www.uniba.de/pi/bpmn-cons/validation&quot;"/>
          </annotationParameters>
          <annotationParameters xmi:id="_CclmGc1tEeO5Ep2pmY5GiA" name="type" skipArray="true">
            <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_Cdu1oM1tEeO5Ep2pmY5GiA" value="Violation.class"/>
          </annotationParameters>
        </annotations>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_CclmG81tEeO5Ep2pmY5GiA" base_Element="_CclmGs1tEeO5Ep2pmY5GiA">
    <annotations xmi:id="_CclmHM1tEeO5Ep2pmY5GiA" name="XmlAttribute">
      <annotationParameters xmi:id="_CclmHc1tEeO5Ep2pmY5GiA" name="required" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_Cdu1p81tEeO5Ep2pmY5GiA" value="true"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_CclmH81tEeO5Ep2pmY5GiA" base_Element="_CclmHs1tEeO5Ep2pmY5GiA">
    <annotations xmi:id="_CclmIM1tEeO5Ep2pmY5GiA" name="XmlAttribute">
      <annotationParameters xmi:id="_CclmIc1tEeO5Ep2pmY5GiA" name="required" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_Cdu1qM1tEeO5Ep2pmY5GiA" value="true"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CclmI81tEeO5Ep2pmY5GiA" base_Element="_CclmIs1tEeO5Ep2pmY5GiA">
    <associatedElement xmi:type="uml:Operation" xmi:id="_CclmJM1tEeO5Ep2pmY5GiA" name="getLine" method="_CdWbE81tEeO5Ep2pmY5GiA">
      <ownedParameter xmi:id="_CclmJc1tEeO5Ep2pmY5GiA" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:Annotations xmi:id="_CclmJs1tEeO5Ep2pmY5GiA" base_Element="_CclmIs1tEeO5Ep2pmY5GiA">
    <annotations xmi:id="_CclmJ81tEeO5Ep2pmY5GiA" name="XmlAttribute"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_CclmKc1tEeO5Ep2pmY5GiA" base_Element="_CclmKM1tEeO5Ep2pmY5GiA">
    <annotations xmi:id="_CclmKs1tEeO5Ep2pmY5GiA" name="XmlElement">
      <annotationParameters xmi:id="_CclmK81tEeO5Ep2pmY5GiA" name="namespace" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_Cdu1qc1tEeO5Ep2pmY5GiA" value="&quot;http://www.uniba.de/pi/bpmn-cons/validation&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_Ccrssc1tEeO5Ep2pmY5GiA" base_Element="_CcrssM1tEeO5Ep2pmY5GiA">
    <annotations xmi:id="_Ccrsss1tEeO5Ep2pmY5GiA" name="XmlElement">
      <annotationParameters xmi:id="_Ccrss81tEeO5Ep2pmY5GiA" name="namespace" skipArray="true">
        <valueSpecifications xmi:type="uml:LiteralString" xmi:id="_Cdu1qs1tEeO5Ep2pmY5GiA" value="&quot;http://www.uniba.de/pi/bpmn-cons/validation&quot;"/>
      </annotationParameters>
    </annotations>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Ccrstc1tEeO5Ep2pmY5GiA" base_Element="_CcrstM1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Ccrsuc1tEeO5Ep2pmY5GiA" base_Element="_CcrsuM1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Ccrsu81tEeO5Ep2pmY5GiA" base_Element="_Ccrsus1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Generics xmi:id="_CcxzUs1tEeO5Ep2pmY5GiA" genericsValue="String[]" base_Element="_CcxzUc1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CcxzVM1tEeO5Ep2pmY5GiA" base_Element="_CcxzU81tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CcxzVs1tEeO5Ep2pmY5GiA" base_Element="_CcxzVc1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CcxzWM1tEeO5Ep2pmY5GiA" base_Element="_CcxzV81tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CcxzWs1tEeO5Ep2pmY5GiA" base_Element="_CcxzWc1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Cc358M1tEeO5Ep2pmY5GiA" base_Element="_CcxzW81tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Cc358s1tEeO5Ep2pmY5GiA" base_Element="_Cc358c1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Cc359M1tEeO5Ep2pmY5GiA" base_Element="_Cc35881tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Cc359s1tEeO5Ep2pmY5GiA" base_Element="_Cc359c1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Cc35-M1tEeO5Ep2pmY5GiA" base_Element="_Cc35981tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Cc35-s1tEeO5Ep2pmY5GiA" base_Element="_Cc35-c1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Cc35_M1tEeO5Ep2pmY5GiA" base_Element="_Cc35-81tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Cc-AkM1tEeO5Ep2pmY5GiA" base_Element="_Cc35_c1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Cc-Aks1tEeO5Ep2pmY5GiA" base_Element="_Cc-Akc1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Cc-AlM1tEeO5Ep2pmY5GiA" base_Element="_Cc-Ak81tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Cc-AmM1tEeO5Ep2pmY5GiA" base_Element="_Cc-Alc1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Cc-Ams1tEeO5Ep2pmY5GiA" base_Element="_Cc-Amc1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Cc-AnM1tEeO5Ep2pmY5GiA" base_Element="_Cc-Am81tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_Cc-Ans1tEeO5Ep2pmY5GiA" base_Element="_Cc-Anc1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CdEHMc1tEeO5Ep2pmY5GiA" base_Element="_CdEHMM1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CdEHM81tEeO5Ep2pmY5GiA" base_Element="_CdEHMs1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CdEHNc1tEeO5Ep2pmY5GiA" base_Element="_CdEHNM1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CdEHN81tEeO5Ep2pmY5GiA" base_Element="_CdEHNs1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CdEHOc1tEeO5Ep2pmY5GiA" base_Element="_CdEHOM1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CdEHO81tEeO5Ep2pmY5GiA" base_Element="_CdEHOs1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CdEHPs1tEeO5Ep2pmY5GiA" base_Element="_CdEHPM1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CdEHQc1tEeO5Ep2pmY5GiA" base_Element="_CdEHP81tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CdKN0c1tEeO5Ep2pmY5GiA" base_Element="_CdKN0M1tEeO5Ep2pmY5GiA">
    <associatedElement xmi:type="uml:Operation" xmi:id="_CdKN0s1tEeO5Ep2pmY5GiA" name="getPublicId" method="_Cdou8M1tEeO5Ep2pmY5GiA">
      <ownedParameter xmi:id="_CdKN1c1tEeO5Ep2pmY5GiA" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedParameter>
    </associatedElement>
    <associatedElement xmi:type="uml:Operation" xmi:id="_CdKN081tEeO5Ep2pmY5GiA" name="setPublicId" method="_Cdou8s1tEeO5Ep2pmY5GiA">
      <ownedParameter xmi:id="_CdKN1M1tEeO5Ep2pmY5GiA" name="publicId">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:Annotations xmi:id="_CdKN1s1tEeO5Ep2pmY5GiA" base_Element="_CdKN0s1tEeO5Ep2pmY5GiA">
    <annotations xmi:id="_CdKN181tEeO5Ep2pmY5GiA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_CdKN2M1tEeO5Ep2pmY5GiA" base_Element="_CdKN081tEeO5Ep2pmY5GiA">
    <annotations xmi:id="_CdKN2c1tEeO5Ep2pmY5GiA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:LegacyStyledElement xmi:id="_CdKN281tEeO5Ep2pmY5GiA" base_Element="_CdKN2s1tEeO5Ep2pmY5GiA">
    <associatedElement xmi:type="uml:Operation" xmi:id="_CdKN3M1tEeO5Ep2pmY5GiA" name="getSystemId" method="_Cdou9M1tEeO5Ep2pmY5GiA">
      <ownedParameter xmi:id="_CdKN381tEeO5Ep2pmY5GiA" direction="return">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedParameter>
    </associatedElement>
    <associatedElement xmi:type="uml:Operation" xmi:id="_CdKN3c1tEeO5Ep2pmY5GiA" name="setSystemId" method="_Cdou9s1tEeO5Ep2pmY5GiA">
      <ownedParameter xmi:id="_CdKN3s1tEeO5Ep2pmY5GiA" name="systemId">
        <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
      </ownedParameter>
    </associatedElement>
  </UMLLabProfile:LegacyStyledElement>
  <UMLLabProfile:Annotations xmi:id="_CdKN4M1tEeO5Ep2pmY5GiA" base_Element="_CdKN3M1tEeO5Ep2pmY5GiA">
    <annotations xmi:id="_CdKN4c1tEeO5Ep2pmY5GiA" name="Override"/>
  </UMLLabProfile:Annotations>
  <UMLLabProfile:Annotations xmi:id="_CdQUcM1tEeO5Ep2pmY5GiA" base_Element="_CdKN3c1tEeO5Ep2pmY5GiA">
    <annotations xmi:id="_CdQUcc1tEeO5Ep2pmY5GiA" name="Override"/>
  </UMLLabProfile:Annotations>
  <uml:OpaqueBehavior xmi:id="_CdWbE81tEeO5Ep2pmY5GiA" name="getLine" specification="_CclmJM1tEeO5Ep2pmY5GiA">
    <ownedParameter xmi:id="_CdWbFM1tEeO5Ep2pmY5GiA" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/JavaPrimitiveTypes.library.uml#int"/>
    </ownedParameter>
    <language>java</language>
    <body>return line;&#xD;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_Cdou8M1tEeO5Ep2pmY5GiA" name="getPublicId" specification="_CdKN0s1tEeO5Ep2pmY5GiA">
    <ownedParameter xmi:id="_Cdou8c1tEeO5Ep2pmY5GiA" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </ownedParameter>
    <language>java</language>
    <body>return publicId;&#xD;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_Cdou8s1tEeO5Ep2pmY5GiA" name="setPublicId" specification="_CdKN081tEeO5Ep2pmY5GiA">
    <ownedParameter xmi:id="_Cdou881tEeO5Ep2pmY5GiA" name="publicId">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </ownedParameter>
    <language>java</language>
    <body>this.publicId = publicId;&#xD;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_Cdou9M1tEeO5Ep2pmY5GiA" name="getSystemId" specification="_CdKN3M1tEeO5Ep2pmY5GiA">
    <ownedParameter xmi:id="_Cdou9c1tEeO5Ep2pmY5GiA" direction="return">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </ownedParameter>
    <language>java</language>
    <body>return systemId;&#xD;
	</body>
  </uml:OpaqueBehavior>
  <uml:OpaqueBehavior xmi:id="_Cdou9s1tEeO5Ep2pmY5GiA" name="setSystemId" specification="_CdKN3c1tEeO5Ep2pmY5GiA">
    <ownedParameter xmi:id="_Cdou981tEeO5Ep2pmY5GiA" name="systemId">
      <type xmi:type="uml:PrimitiveType" href="pathmap://UML_LIBRARIES/UMLPrimitiveTypes.library.uml#String"/>
    </ownedParameter>
    <language>java</language>
    <body>this.systemId = systemId;&#xD;
	</body>
  </uml:OpaqueBehavior>
  <UMLLabProfile:Reference xmi:id="_CeBJcs1tEeO5Ep2pmY5GiA" base_Element="_CeBJcM1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CeBJdc1tEeO5Ep2pmY5GiA" base_Element="_CeBJc81tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CeHQEs1tEeO5Ep2pmY5GiA" base_Element="_CeHQEM1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CeHQFc1tEeO5Ep2pmY5GiA" base_Element="_CeHQE81tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CeHQGM1tEeO5Ep2pmY5GiA" base_Element="_CeHQFs1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CeHQG81tEeO5Ep2pmY5GiA" base_Element="_CeHQGc1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CeHQHs1tEeO5Ep2pmY5GiA" base_Element="_CeHQHM1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CeHQIc1tEeO5Ep2pmY5GiA" base_Element="_CeHQH81tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CeNWsM1tEeO5Ep2pmY5GiA" base_Element="_CeHQIs1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CeNWs81tEeO5Ep2pmY5GiA" base_Element="_CeNWsc1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CeNWts1tEeO5Ep2pmY5GiA" base_Element="_CeNWtM1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CeNWuc1tEeO5Ep2pmY5GiA" base_Element="_CeNWt81tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CeNWvM1tEeO5Ep2pmY5GiA" base_Element="_CeNWus1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CeNWv81tEeO5Ep2pmY5GiA" base_Element="_CeNWvc1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CeNWws1tEeO5Ep2pmY5GiA" base_Element="_CeNWwM1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CeNWxc1tEeO5Ep2pmY5GiA" base_Element="_CeNWw81tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CeTdUM1tEeO5Ep2pmY5GiA" base_Element="_CeNWxs1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CeTdU81tEeO5Ep2pmY5GiA" base_Element="_CeTdUc1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CeTdVs1tEeO5Ep2pmY5GiA" base_Element="_CeTdVM1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CeTdWc1tEeO5Ep2pmY5GiA" base_Element="_CeTdV81tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CeTdXM1tEeO5Ep2pmY5GiA" base_Element="_CeTdWs1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CeTdX81tEeO5Ep2pmY5GiA" base_Element="_CeTdXc1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CeTdYs1tEeO5Ep2pmY5GiA" base_Element="_CeTdYM1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CeTdZc1tEeO5Ep2pmY5GiA" base_Element="_CeTdY81tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CeTdaM1tEeO5Ep2pmY5GiA" base_Element="_CeTdZs1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CeZj8M1tEeO5Ep2pmY5GiA" base_Element="_CeTdac1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CeZj881tEeO5Ep2pmY5GiA" base_Element="_CeZj8c1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CeZj9s1tEeO5Ep2pmY5GiA" base_Element="_CeZj9M1tEeO5Ep2pmY5GiA"/>
  <UMLLabProfile:Reference xmi:id="_CeZj-c1tEeO5Ep2pmY5GiA" base_Element="_CeZj981tEeO5Ep2pmY5GiA"/>
</xmi:XMI>

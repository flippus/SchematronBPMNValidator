<?xml version="1.0" encoding="utf-8"?>
<iso:schema xmlns="http://purl.oclc.org/dsdl/schematron" 
    xmlns:iso="http://purl.oclc.org/dsdl/schematron" 
    xmlns:ppn="http://ppn.lspi.uni-bamberg.de" 
    queryBinding="xslt2" schemaVersion="ISO19757-3">
    <iso:title>ISO schematron validation file for descriptive extended constraints</iso:title>
    <iso:ns prefix='bpmn' uri='http://www.omg.org/spec/BPMN/20100524/MODEL'/>
    <let name="eventDefinitions" value="bpmn:eventDefinitionRef | bpmn:messageEventDefinition | bpmn:timerEventDefinition | bpmn:escalationEventDefinition | bpmn:conditionalEventDefinition | bpmn:linkEventDefinition | bpmn:errorEventDefinition | bpmn:cancelEventDefinition | bpmn:compensationEventDefinition | bpmn:signalEventDefinition | bpmn:terminateEventDefinition" />
    
    <!-- Your constraints go here -->
    <iso:pattern name="EXT.036">
        <iso:rule context="bpmn:process">
            <iso:assert test="not(bpmn:choreographyTask or bpmn:subChoreography or bpmn:callChoreography)">A Process must not contain Choreography Activities</iso:assert>
        </iso:rule>
    </iso:pattern>
    
    <iso:pattern name="EXT.056">
        <iso:rule context="bpmn:subProcess">
            <iso:assert test="not(bpmn:choreographyTask or bpmn:subChoreography or bpmn:callChoreography)">A SubProcess must not contain Choreography Activities</iso:assert>
        </iso:rule>
    </iso:pattern>
    
    <iso:pattern name="EXT.079">
        <iso:rule context="bpmn:subProcess">
            <iso:assert test="not(bpmn:ioSpecification)">InputOutputSpecifications are not allowed in SubProcesses</iso:assert>
        </iso:rule>
    </iso:pattern>
    
    <iso:pattern name="EXT.096">
        <iso:rule context="bpmn:startEvent">
            <iso:assert test="not(bpmn:incoming)">A Start Event must not have an incoming sequence flow</iso:assert>
        </iso:rule>
    </iso:pattern>
    
    <iso:pattern name="EXT.099">
        <let name="callActivities" value="//bpmn:callActivity"/>
        <iso:rule context="bpmn:process[./@id = string($callActivities/@calledElement)]">
            <iso:assert test="not(count(./bpmn:startEvent) = (count(./bpmn:startEvent/bpmn:eventDefinitionRef/..) + count(./bpmn:startEvent/bpmn:messageEventDefinition/..) + count(./bpmn:startEvent/bpmn:timerEventDefinition/..) + count(./bpmn:startEvent/bpmn:escalationEventDefinition/..) + count(./bpmn:startEvent/bpmn:conditionalEventDefinition/..) + count(./bpmn:startEvent/bpmn:linkEventDefinition/..) + count(./bpmn:startEvent/bpmn:errorEventDefinition/..) + count(./bpmn:startEvent/bpmn:cancelEventDefinition/..) + count(./bpmn:startEvent/bpmn:compensationEventDefinition/..) + count(./bpmn:startEvent/bpmn:signalEventDefinition/..) + count(./bpmn:startEvent/bpmn:terminateEventDefinition/..)))">Referenced process must have at least one None Start Event</iso:assert>
        </iso:rule>
    </iso:pattern>
    
    <iso:pattern name="EXT.100">
        <iso:rule context="bpmn:subProcess/bpmn:startEvent | bpmn:transaction/bpmn:startEvent | bpmn:adHocSubProcess/bpmn:startEvent">
            <iso:assert test="not(./$eventDefinitions)">No EventDefinition is allowed for Start Events in Sub-Process definitions</iso:assert>
        </iso:rule>
    </iso:pattern>
        
    <iso:pattern name="EXT.101">
        <iso:rule context="bpmn:startEvent">
            <iso:assert test="bpmn:outgoing">A startEvent must have a outgoing subelement</iso:assert>
        </iso:rule>
    </iso:pattern>
       
    <iso:pattern name="EXT.104">
        <iso:rule context="bpmn:endEvent">
            <iso:assert test="not(bpmn:outgoing)">An End Event must not have an outgoing sequence flow</iso:assert>
        </iso:rule>
    </iso:pattern>
    
    <iso:pattern name="EXT.107">
        <iso:rule context="bpmn:endEvent">
            <iso:assert test="bpmn:incoming">An End Event MUST have at least one incoming Sequence Flow</iso:assert>
        </iso:rule>
    </iso:pattern>
</iso:schema> 